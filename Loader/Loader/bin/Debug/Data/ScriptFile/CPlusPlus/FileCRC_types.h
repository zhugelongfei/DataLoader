/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef FileCRC_TYPES_H
#define FileCRC_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>


namespace ThriftStruct {

class FileCRC;

typedef struct _FileCRC__isset {
  _FileCRC__isset() : FileName(false), CRCVal(false) {}
  bool FileName :1;
  bool CRCVal :1;
} _FileCRC__isset;

class FileCRC {
 public:

  FileCRC(const FileCRC&);
  FileCRC& operator=(const FileCRC&);
  FileCRC() : FileName(), CRCVal() {
  }

  virtual ~FileCRC() throw();
  std::string FileName;
  std::string CRCVal;

  _FileCRC__isset __isset;

  void __set_FileName(const std::string& val);

  void __set_CRCVal(const std::string& val);

  bool operator == (const FileCRC & rhs) const
  {
    if (!(FileName == rhs.FileName))
      return false;
    if (!(CRCVal == rhs.CRCVal))
      return false;
    return true;
  }
  bool operator != (const FileCRC &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const FileCRC & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(FileCRC &a, FileCRC &b);

inline std::ostream& operator<<(std::ostream& out, const FileCRC& obj)
{
  obj.printTo(out);
  return out;
}

} // namespace

#endif
