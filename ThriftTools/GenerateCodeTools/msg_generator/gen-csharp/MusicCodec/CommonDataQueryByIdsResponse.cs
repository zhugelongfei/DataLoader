/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 请求对应id的信息响应
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CommonDataQueryByIdsResponse : TBase
  {
    private short _fromType;
    private short _version;
    private List<MallItem> _mallItems;
    private List<GroundRoomInfo> _groundRoomInfos;
    private List<DanceRoomInfo> _danceRoomInfos;
    private List<GuildBaseInfo> _guildInfos;

    /// <summary>
    /// 客户端请求的类型
    /// </summary>
    public short FromType
    {
      get
      {
        return _fromType;
      }
      set
      {
        __isset.fromType = true;
        this._fromType = value;
      }
    }

    /// <summary>
    /// 客户端此类缓存信息总版本号
    /// </summary>
    public short Version
    {
      get
      {
        return _version;
      }
      set
      {
        __isset.version = true;
        this._version = value;
      }
    }

    /// <summary>
    /// 需要更新的商品信息
    /// </summary>
    public List<MallItem> MallItems
    {
      get
      {
        return _mallItems;
      }
      set
      {
        __isset.mallItems = true;
        this._mallItems = value;
      }
    }

    /// <summary>
    /// 需要更新的温泉广场信息
    /// </summary>
    public List<GroundRoomInfo> GroundRoomInfos
    {
      get
      {
        return _groundRoomInfos;
      }
      set
      {
        __isset.groundRoomInfos = true;
        this._groundRoomInfos = value;
      }
    }

    /// <summary>
    /// 需要更新的竞技房间信息
    /// </summary>
    public List<DanceRoomInfo> DanceRoomInfos
    {
      get
      {
        return _danceRoomInfos;
      }
      set
      {
        __isset.danceRoomInfos = true;
        this._danceRoomInfos = value;
      }
    }

    /// <summary>
    /// 需要更新的舞团信息
    /// </summary>
    public List<GuildBaseInfo> GuildInfos
    {
      get
      {
        return _guildInfos;
      }
      set
      {
        __isset.guildInfos = true;
        this._guildInfos = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool fromType;
      public bool version;
      public bool mallItems;
      public bool groundRoomInfos;
      public bool danceRoomInfos;
      public bool guildInfos;
    }

    public CommonDataQueryByIdsResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I16) {
              FromType = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I16) {
              Version = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.List) {
              {
                MallItems = new List<MallItem>();
                TList _list350 = iprot.ReadListBegin();
                for( int _i351 = 0; _i351 < _list350.Count; ++_i351)
                {
                  MallItem _elem352 = new MallItem();
                  _elem352 = new MallItem();
                  _elem352.Read(iprot);
                  MallItems.Add(_elem352);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.List) {
              {
                GroundRoomInfos = new List<GroundRoomInfo>();
                TList _list353 = iprot.ReadListBegin();
                for( int _i354 = 0; _i354 < _list353.Count; ++_i354)
                {
                  GroundRoomInfo _elem355 = new GroundRoomInfo();
                  _elem355 = new GroundRoomInfo();
                  _elem355.Read(iprot);
                  GroundRoomInfos.Add(_elem355);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                DanceRoomInfos = new List<DanceRoomInfo>();
                TList _list356 = iprot.ReadListBegin();
                for( int _i357 = 0; _i357 < _list356.Count; ++_i357)
                {
                  DanceRoomInfo _elem358 = new DanceRoomInfo();
                  _elem358 = new DanceRoomInfo();
                  _elem358.Read(iprot);
                  DanceRoomInfos.Add(_elem358);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.List) {
              {
                GuildInfos = new List<GuildBaseInfo>();
                TList _list359 = iprot.ReadListBegin();
                for( int _i360 = 0; _i360 < _list359.Count; ++_i360)
                {
                  GuildBaseInfo _elem361 = new GuildBaseInfo();
                  _elem361 = new GuildBaseInfo();
                  _elem361.Read(iprot);
                  GuildInfos.Add(_elem361);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CommonDataQueryByIdsResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.fromType) {
        field.Name = "fromType";
        field.Type = TType.I16;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(FromType);
        oprot.WriteFieldEnd();
      }
      if (__isset.version) {
        field.Name = "version";
        field.Type = TType.I16;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(Version);
        oprot.WriteFieldEnd();
      }
      if (MallItems != null && __isset.mallItems) {
        field.Name = "mallItems";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, MallItems.Count));
          foreach (MallItem _iter362 in MallItems)
          {
            _iter362.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (GroundRoomInfos != null && __isset.groundRoomInfos) {
        field.Name = "groundRoomInfos";
        field.Type = TType.List;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, GroundRoomInfos.Count));
          foreach (GroundRoomInfo _iter363 in GroundRoomInfos)
          {
            _iter363.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (DanceRoomInfos != null && __isset.danceRoomInfos) {
        field.Name = "danceRoomInfos";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, DanceRoomInfos.Count));
          foreach (DanceRoomInfo _iter364 in DanceRoomInfos)
          {
            _iter364.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (GuildInfos != null && __isset.guildInfos) {
        field.Name = "guildInfos";
        field.Type = TType.List;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, GuildInfos.Count));
          foreach (GuildBaseInfo _iter365 in GuildInfos)
          {
            _iter365.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("CommonDataQueryByIdsResponse(");
      sb.Append("FromType: ");
      sb.Append(FromType);
      sb.Append(",Version: ");
      sb.Append(Version);
      sb.Append(",MallItems: ");
      sb.Append(MallItems);
      sb.Append(",GroundRoomInfos: ");
      sb.Append(GroundRoomInfos);
      sb.Append(",DanceRoomInfos: ");
      sb.Append(DanceRoomInfos);
      sb.Append(",GuildInfos: ");
      sb.Append(GuildInfos);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
