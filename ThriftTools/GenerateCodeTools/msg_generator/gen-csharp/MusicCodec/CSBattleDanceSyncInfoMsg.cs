/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSBattleDanceSyncInfoMsg : TBase
  {
    private byte _partIndex;
    private byte _inputIndex;
    private byte _inputType;
    private byte _keyResult;
    private byte _inputDataIndex;
    private byte _continueCount;

    public byte PartIndex
    {
      get
      {
        return _partIndex;
      }
      set
      {
        __isset.partIndex = true;
        this._partIndex = value;
      }
    }

    public byte InputIndex
    {
      get
      {
        return _inputIndex;
      }
      set
      {
        __isset.inputIndex = true;
        this._inputIndex = value;
      }
    }

    public byte InputType
    {
      get
      {
        return _inputType;
      }
      set
      {
        __isset.inputType = true;
        this._inputType = value;
      }
    }

    /// <summary>
    /// 1-miss 2-good 3-great 4-perfect
    /// </summary>
    public byte KeyResult
    {
      get
      {
        return _keyResult;
      }
      set
      {
        __isset.keyResult = true;
        this._keyResult = value;
      }
    }

    public byte InputDataIndex
    {
      get
      {
        return _inputDataIndex;
      }
      set
      {
        __isset.inputDataIndex = true;
        this._inputDataIndex = value;
      }
    }

    public byte ContinueCount
    {
      get
      {
        return _continueCount;
      }
      set
      {
        __isset.continueCount = true;
        this._continueCount = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool partIndex;
      public bool inputIndex;
      public bool inputType;
      public bool keyResult;
      public bool inputDataIndex;
      public bool continueCount;
    }

    public CSBattleDanceSyncInfoMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSBattleDanceSyncInfoMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.partIndex) {
        field.Name = "partIndex";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(PartIndex);
        oprot.WriteFieldEnd();
      }
      if (__isset.inputIndex) {
        field.Name = "inputIndex";
        field.Type = TType.Byte;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(InputIndex);
        oprot.WriteFieldEnd();
      }
      if (__isset.inputType) {
        field.Name = "inputType";
        field.Type = TType.Byte;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(InputType);
        oprot.WriteFieldEnd();
      }
      if (__isset.keyResult) {
        field.Name = "keyResult";
        field.Type = TType.Byte;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(KeyResult);
        oprot.WriteFieldEnd();
      }
      if (__isset.inputDataIndex) {
        field.Name = "inputDataIndex";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(InputDataIndex);
        oprot.WriteFieldEnd();
      }
      if (__isset.continueCount) {
        field.Name = "continueCount";
        field.Type = TType.Byte;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ContinueCount);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
