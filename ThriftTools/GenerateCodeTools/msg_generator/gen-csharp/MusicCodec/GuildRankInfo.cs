/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class GuildRankInfo : TBase
  {
    private string _guildName;
    private int _guildMemberCount;
    private int _guildLevel;
    private string _headIcon;

    public string GuildName
    {
      get
      {
        return _guildName;
      }
      set
      {
        __isset.guildName = true;
        this._guildName = value;
      }
    }

    public int GuildMemberCount
    {
      get
      {
        return _guildMemberCount;
      }
      set
      {
        __isset.guildMemberCount = true;
        this._guildMemberCount = value;
      }
    }

    public int GuildLevel
    {
      get
      {
        return _guildLevel;
      }
      set
      {
        __isset.guildLevel = true;
        this._guildLevel = value;
      }
    }

    public string HeadIcon
    {
      get
      {
        return _headIcon;
      }
      set
      {
        __isset.headIcon = true;
        this._headIcon = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool guildName;
      public bool guildMemberCount;
      public bool guildLevel;
      public bool headIcon;
    }

    public GuildRankInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              GuildName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              GuildMemberCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              GuildLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              HeadIcon = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GuildRankInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (GuildName != null && __isset.guildName) {
        field.Name = "guildName";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(GuildName);
        oprot.WriteFieldEnd();
      }
      if (__isset.guildMemberCount) {
        field.Name = "guildMemberCount";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(GuildMemberCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.guildLevel) {
        field.Name = "guildLevel";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(GuildLevel);
        oprot.WriteFieldEnd();
      }
      if (HeadIcon != null && __isset.headIcon) {
        field.Name = "headIcon";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(HeadIcon);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GuildRankInfo(");
      sb.Append("GuildName: ");
      sb.Append(GuildName);
      sb.Append(",GuildMemberCount: ");
      sb.Append(GuildMemberCount);
      sb.Append(",GuildLevel: ");
      sb.Append(GuildLevel);
      sb.Append(",HeadIcon: ");
      sb.Append(HeadIcon);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
