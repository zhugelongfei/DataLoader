/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 婚礼房间信息
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class WeddingRoomInfo : TBase
  {
    private int _roomId;
    private long _bridegroomId;
    private string _bridegroomName;
    private int _bridegroomNameFashion;
    private byte _bridegroomVipLvl;
    private int _couplePosId;
    private long _brideId;
    private string _brideName;
    private int _brideNameFashion;
    private byte _brideVipLvl;
    private string _roomName;
    private int _memberSexInfo;
    private short _bridegroomTagId;
    private short _brideTagId;

    /// <summary>
    /// 房间id
    /// </summary>
    public int RoomId
    {
      get
      {
        return _roomId;
      }
      set
      {
        __isset.roomId = true;
        this._roomId = value;
      }
    }

    /// <summary>
    /// 新郎角色id
    /// </summary>
    public long BridegroomId
    {
      get
      {
        return _bridegroomId;
      }
      set
      {
        __isset.bridegroomId = true;
        this._bridegroomId = value;
      }
    }

    /// <summary>
    /// 新郎角色名
    /// </summary>
    public string BridegroomName
    {
      get
      {
        return _bridegroomName;
      }
      set
      {
        __isset.bridegroomName = true;
        this._bridegroomName = value;
      }
    }

    /// <summary>
    /// 新郎名字时尚id
    /// </summary>
    public int BridegroomNameFashion
    {
      get
      {
        return _bridegroomNameFashion;
      }
      set
      {
        __isset.bridegroomNameFashion = true;
        this._bridegroomNameFashion = value;
      }
    }

    /// <summary>
    /// 新郎vip等级
    /// </summary>
    public byte BridegroomVipLvl
    {
      get
      {
        return _bridegroomVipLvl;
      }
      set
      {
        __isset.bridegroomVipLvl = true;
        this._bridegroomVipLvl = value;
      }
    }

    /// <summary>
    /// 新人动作id
    /// </summary>
    public int CouplePosId
    {
      get
      {
        return _couplePosId;
      }
      set
      {
        __isset.couplePosId = true;
        this._couplePosId = value;
      }
    }

    /// <summary>
    /// 新娘角色id
    /// </summary>
    public long BrideId
    {
      get
      {
        return _brideId;
      }
      set
      {
        __isset.brideId = true;
        this._brideId = value;
      }
    }

    /// <summary>
    /// 新娘角色名
    /// </summary>
    public string BrideName
    {
      get
      {
        return _brideName;
      }
      set
      {
        __isset.brideName = true;
        this._brideName = value;
      }
    }

    /// <summary>
    /// 新娘名字时尚id
    /// </summary>
    public int BrideNameFashion
    {
      get
      {
        return _brideNameFashion;
      }
      set
      {
        __isset.brideNameFashion = true;
        this._brideNameFashion = value;
      }
    }

    /// <summary>
    /// 新娘vip等级
    /// </summary>
    public byte BrideVipLvl
    {
      get
      {
        return _brideVipLvl;
      }
      set
      {
        __isset.brideVipLvl = true;
        this._brideVipLvl = value;
      }
    }

    /// <summary>
    /// 房间名
    /// </summary>
    public string RoomName
    {
      get
      {
        return _roomName;
      }
      set
      {
        __isset.roomName = true;
        this._roomName = value;
      }
    }

    /// <summary>
    /// 成员性别，按位表示位置和性别
    /// </summary>
    public int MemberSexInfo
    {
      get
      {
        return _memberSexInfo;
      }
      set
      {
        __isset.memberSexInfo = true;
        this._memberSexInfo = value;
      }
    }

    /// <summary>
    /// 新郎标签id
    /// </summary>
    public short BridegroomTagId
    {
      get
      {
        return _bridegroomTagId;
      }
      set
      {
        __isset.bridegroomTagId = true;
        this._bridegroomTagId = value;
      }
    }

    /// <summary>
    /// 新娘标签id
    /// </summary>
    public short BrideTagId
    {
      get
      {
        return _brideTagId;
      }
      set
      {
        __isset.brideTagId = true;
        this._brideTagId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool roomId;
      public bool bridegroomId;
      public bool bridegroomName;
      public bool bridegroomNameFashion;
      public bool bridegroomVipLvl;
      public bool couplePosId;
      public bool brideId;
      public bool brideName;
      public bool brideNameFashion;
      public bool brideVipLvl;
      public bool roomName;
      public bool memberSexInfo;
      public bool bridegroomTagId;
      public bool brideTagId;
    }

    public WeddingRoomInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              RoomId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              BridegroomId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              BridegroomName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              BridegroomNameFashion = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Byte) {
              BridegroomVipLvl = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              CouplePosId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              BrideId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              BrideName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              BrideNameFashion = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Byte) {
              BrideVipLvl = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              RoomName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              MemberSexInfo = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I16) {
              BridegroomTagId = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.I16) {
              BrideTagId = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("WeddingRoomInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.roomId) {
        field.Name = "roomId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(RoomId);
        oprot.WriteFieldEnd();
      }
      if (__isset.bridegroomId) {
        field.Name = "bridegroomId";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(BridegroomId);
        oprot.WriteFieldEnd();
      }
      if (BridegroomName != null && __isset.bridegroomName) {
        field.Name = "bridegroomName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(BridegroomName);
        oprot.WriteFieldEnd();
      }
      if (__isset.bridegroomNameFashion) {
        field.Name = "bridegroomNameFashion";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BridegroomNameFashion);
        oprot.WriteFieldEnd();
      }
      if (__isset.bridegroomVipLvl) {
        field.Name = "bridegroomVipLvl";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(BridegroomVipLvl);
        oprot.WriteFieldEnd();
      }
      if (__isset.couplePosId) {
        field.Name = "couplePosId";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CouplePosId);
        oprot.WriteFieldEnd();
      }
      if (__isset.brideId) {
        field.Name = "brideId";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(BrideId);
        oprot.WriteFieldEnd();
      }
      if (BrideName != null && __isset.brideName) {
        field.Name = "brideName";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(BrideName);
        oprot.WriteFieldEnd();
      }
      if (__isset.brideNameFashion) {
        field.Name = "brideNameFashion";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BrideNameFashion);
        oprot.WriteFieldEnd();
      }
      if (__isset.brideVipLvl) {
        field.Name = "brideVipLvl";
        field.Type = TType.Byte;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(BrideVipLvl);
        oprot.WriteFieldEnd();
      }
      if (RoomName != null && __isset.roomName) {
        field.Name = "roomName";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(RoomName);
        oprot.WriteFieldEnd();
      }
      if (__isset.memberSexInfo) {
        field.Name = "memberSexInfo";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MemberSexInfo);
        oprot.WriteFieldEnd();
      }
      if (__isset.bridegroomTagId) {
        field.Name = "bridegroomTagId";
        field.Type = TType.I16;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(BridegroomTagId);
        oprot.WriteFieldEnd();
      }
      if (__isset.brideTagId) {
        field.Name = "brideTagId";
        field.Type = TType.I16;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(BrideTagId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("WeddingRoomInfo(");
      sb.Append("RoomId: ");
      sb.Append(RoomId);
      sb.Append(",BridegroomId: ");
      sb.Append(BridegroomId);
      sb.Append(",BridegroomName: ");
      sb.Append(BridegroomName);
      sb.Append(",BridegroomNameFashion: ");
      sb.Append(BridegroomNameFashion);
      sb.Append(",BridegroomVipLvl: ");
      sb.Append(BridegroomVipLvl);
      sb.Append(",CouplePosId: ");
      sb.Append(CouplePosId);
      sb.Append(",BrideId: ");
      sb.Append(BrideId);
      sb.Append(",BrideName: ");
      sb.Append(BrideName);
      sb.Append(",BrideNameFashion: ");
      sb.Append(BrideNameFashion);
      sb.Append(",BrideVipLvl: ");
      sb.Append(BrideVipLvl);
      sb.Append(",RoomName: ");
      sb.Append(RoomName);
      sb.Append(",MemberSexInfo: ");
      sb.Append(MemberSexInfo);
      sb.Append(",BridegroomTagId: ");
      sb.Append(BridegroomTagId);
      sb.Append(",BrideTagId: ");
      sb.Append(BrideTagId);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
