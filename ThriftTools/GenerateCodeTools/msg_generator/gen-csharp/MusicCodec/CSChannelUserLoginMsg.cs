/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 客户端进行渠道sdk验证登录， 修改login_gate时再修改该消息， 删除多余字段
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSChannelUserLoginMsg : TBase
  {
    private string _deviceId;
    private string _macId;
    private string _deviceType;
    private string _deviceVersion;
    private string _devicePlatform;
    private string _deviceModel;
    private string _version;
    private string _fVal;
    private string _gsId;
    private MusicCodec.ChannelNeteaseLoginParam _neteaseParam;

    /// <summary>
    /// 设备uuid
    /// </summary>
    public string DeviceId
    {
      get
      {
        return _deviceId;
      }
      set
      {
        __isset.deviceId = true;
        this._deviceId = value;
      }
    }

    public string MacId
    {
      get
      {
        return _macId;
      }
      set
      {
        __isset.macId = true;
        this._macId = value;
      }
    }

    public string DeviceType
    {
      get
      {
        return _deviceType;
      }
      set
      {
        __isset.deviceType = true;
        this._deviceType = value;
      }
    }

    public string DeviceVersion
    {
      get
      {
        return _deviceVersion;
      }
      set
      {
        __isset.deviceVersion = true;
        this._deviceVersion = value;
      }
    }

    /// <summary>
    /// 设备平台
    /// </summary>
    public string DevicePlatform
    {
      get
      {
        return _devicePlatform;
      }
      set
      {
        __isset.devicePlatform = true;
        this._devicePlatform = value;
      }
    }

    /// <summary>
    /// 设备型号
    /// </summary>
    public string DeviceModel
    {
      get
      {
        return _deviceModel;
      }
      set
      {
        __isset.deviceModel = true;
        this._deviceModel = value;
      }
    }

    /// <summary>
    /// 客户端版本号
    /// </summary>
    public string Version
    {
      get
      {
        return _version;
      }
      set
      {
        __isset.version = true;
        this._version = value;
      }
    }

    public string FVal
    {
      get
      {
        return _fVal;
      }
      set
      {
        __isset.fVal = true;
        this._fVal = value;
      }
    }

    /// <summary>
    /// 登录的游戏服id（修改login_gate时删除）
    /// </summary>
    public string GsId
    {
      get
      {
        return _gsId;
      }
      set
      {
        __isset.gsId = true;
        this._gsId = value;
      }
    }

    /// <summary>
    /// 正常登录的sdk参数
    /// </summary>
    public MusicCodec.ChannelNeteaseLoginParam NeteaseParam
    {
      get
      {
        return _neteaseParam;
      }
      set
      {
        __isset.neteaseParam = true;
        this._neteaseParam = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool deviceId;
      public bool macId;
      public bool deviceType;
      public bool deviceVersion;
      public bool devicePlatform;
      public bool deviceModel;
      public bool version;
      public bool fVal;
      public bool gsId;
      public bool neteaseParam;
    }

    public CSChannelUserLoginMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSChannelUserLoginMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (DeviceId != null && __isset.deviceId) {
        field.Name = "deviceId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DeviceId);
        oprot.WriteFieldEnd();
      }
      if (MacId != null && __isset.macId) {
        field.Name = "macId";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MacId);
        oprot.WriteFieldEnd();
      }
      if (DeviceType != null && __isset.deviceType) {
        field.Name = "deviceType";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DeviceType);
        oprot.WriteFieldEnd();
      }
      if (DeviceVersion != null && __isset.deviceVersion) {
        field.Name = "deviceVersion";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DeviceVersion);
        oprot.WriteFieldEnd();
      }
      if (DevicePlatform != null && __isset.devicePlatform) {
        field.Name = "devicePlatform";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DevicePlatform);
        oprot.WriteFieldEnd();
      }
      if (DeviceModel != null && __isset.deviceModel) {
        field.Name = "deviceModel";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DeviceModel);
        oprot.WriteFieldEnd();
      }
      if (Version != null && __isset.version) {
        field.Name = "version";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Version);
        oprot.WriteFieldEnd();
      }
      if (FVal != null && __isset.fVal) {
        field.Name = "fVal";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(FVal);
        oprot.WriteFieldEnd();
      }
      if (GsId != null && __isset.gsId) {
        field.Name = "gsId";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(GsId);
        oprot.WriteFieldEnd();
      }
      if (NeteaseParam != null && __isset.neteaseParam) {
        field.Name = "neteaseParam";
        field.Type = TType.Struct;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        NeteaseParam.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
