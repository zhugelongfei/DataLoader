/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 查询排行榜信息
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSQueryRankListMsg : TBase
  {
    private short _rankType;
    private short _startRank;
    private short _endRank;
    private MusicCodec.RankMusicQueryParam _muiscQueryParam;

    public short RankType
    {
      get
      {
        return _rankType;
      }
      set
      {
        __isset.rankType = true;
        this._rankType = value;
      }
    }

    public short StartRank
    {
      get
      {
        return _startRank;
      }
      set
      {
        __isset.startRank = true;
        this._startRank = value;
      }
    }

    /// <summary>
    /// limit 50
    /// </summary>
    public short EndRank
    {
      get
      {
        return _endRank;
      }
      set
      {
        __isset.endRank = true;
        this._endRank = value;
      }
    }

    public MusicCodec.RankMusicQueryParam MuiscQueryParam
    {
      get
      {
        return _muiscQueryParam;
      }
      set
      {
        __isset.muiscQueryParam = true;
        this._muiscQueryParam = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool rankType;
      public bool startRank;
      public bool endRank;
      public bool muiscQueryParam;
    }

    public CSQueryRankListMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSQueryRankListMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.rankType) {
        field.Name = "rankType";
        field.Type = TType.I16;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(RankType);
        oprot.WriteFieldEnd();
      }
      if (__isset.startRank) {
        field.Name = "startRank";
        field.Type = TType.I16;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(StartRank);
        oprot.WriteFieldEnd();
      }
      if (__isset.endRank) {
        field.Name = "endRank";
        field.Type = TType.I16;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(EndRank);
        oprot.WriteFieldEnd();
      }
      if (MuiscQueryParam != null && __isset.muiscQueryParam) {
        field.Name = "muiscQueryParam";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        MuiscQueryParam.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
