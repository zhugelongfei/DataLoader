/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 已膜拜上榜玩家信息
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCWorshipOnRankInfos : TBase
  {
    private List<long> _singleRankPlayerIds;
    private List<DoubleRankPlayInfo> _doubleRankPlayerIds;
    private int _validTime;

    /// <summary>
    /// 单人榜膜拜过的玩家角色id
    /// </summary>
    public List<long> SingleRankPlayerIds
    {
      get
      {
        return _singleRankPlayerIds;
      }
      set
      {
        __isset.singleRankPlayerIds = true;
        this._singleRankPlayerIds = value;
      }
    }

    /// <summary>
    /// 双人榜膜拜过的玩家角色id
    /// </summary>
    public List<DoubleRankPlayInfo> DoubleRankPlayerIds
    {
      get
      {
        return _doubleRankPlayerIds;
      }
      set
      {
        __isset.doubleRankPlayerIds = true;
        this._doubleRankPlayerIds = value;
      }
    }

    /// <summary>
    /// 有效截止时间（从1970.1.1开始的秒数）
    /// </summary>
    public int ValidTime
    {
      get
      {
        return _validTime;
      }
      set
      {
        __isset.validTime = true;
        this._validTime = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool singleRankPlayerIds;
      public bool doubleRankPlayerIds;
      public bool validTime;
    }

    public SCWorshipOnRankInfos() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                SingleRankPlayerIds = new List<long>();
                TList _list9 = iprot.ReadListBegin();
                for( int _i10 = 0; _i10 < _list9.Count; ++_i10)
                {
                  long _elem11 = 0;
                  _elem11 = iprot.ReadI64();
                  SingleRankPlayerIds.Add(_elem11);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                DoubleRankPlayerIds = new List<DoubleRankPlayInfo>();
                TList _list12 = iprot.ReadListBegin();
                for( int _i13 = 0; _i13 < _list12.Count; ++_i13)
                {
                  DoubleRankPlayInfo _elem14 = new DoubleRankPlayInfo();
                  _elem14 = new DoubleRankPlayInfo();
                  _elem14.Read(iprot);
                  DoubleRankPlayerIds.Add(_elem14);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              ValidTime = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
ClientLog.Instance.LogError("This function is deleted.");
}

    


  }

}
