/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 新手引导日志
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class GuildeLog : TBase
  {
    private string _tutorialId;
    private string _tutorialName;
    private string _details;
    private long _beginTime;
    private int _beginRoleLevel;
    private int _endRoleLevel;
    private long _useTime;
    private int _stepType;

    /// <summary>
    /// 新手引导的ID
    /// </summary>
    public string TutorialId
    {
      get
      {
        return _tutorialId;
      }
      set
      {
        __isset.tutorialId = true;
        this._tutorialId = value;
      }
    }

    /// <summary>
    /// 新手引导的名称
    /// </summary>
    public string TutorialName
    {
      get
      {
        return _tutorialName;
      }
      set
      {
        __isset.tutorialName = true;
        this._tutorialName = value;
      }
    }

    /// <summary>
    /// 新手引导其它信息
    /// </summary>
    public string Details
    {
      get
      {
        return _details;
      }
      set
      {
        __isset.details = true;
        this._details = value;
      }
    }

    /// <summary>
    /// 新手引导开始时间
    /// </summary>
    public long BeginTime
    {
      get
      {
        return _beginTime;
      }
      set
      {
        __isset.beginTime = true;
        this._beginTime = value;
      }
    }

    /// <summary>
    /// 角色的开始等级
    /// </summary>
    public int BeginRoleLevel
    {
      get
      {
        return _beginRoleLevel;
      }
      set
      {
        __isset.beginRoleLevel = true;
        this._beginRoleLevel = value;
      }
    }

    /// <summary>
    /// 角色的结束等级
    /// </summary>
    public int EndRoleLevel
    {
      get
      {
        return _endRoleLevel;
      }
      set
      {
        __isset.endRoleLevel = true;
        this._endRoleLevel = value;
      }
    }

    /// <summary>
    /// 使用时间，单位s
    /// </summary>
    public long UseTime
    {
      get
      {
        return _useTime;
      }
      set
      {
        __isset.useTime = true;
        this._useTime = value;
      }
    }

    /// <summary>
    /// 引导情况（未完成：-1，完成：1，开始 ：0）
    /// </summary>
    public int StepType
    {
      get
      {
        return _stepType;
      }
      set
      {
        __isset.stepType = true;
        this._stepType = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool tutorialId;
      public bool tutorialName;
      public bool details;
      public bool beginTime;
      public bool beginRoleLevel;
      public bool endRoleLevel;
      public bool useTime;
      public bool stepType;
    }

    public GuildeLog() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              TutorialId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              TutorialName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Details = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              BeginTime = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              BeginRoleLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              EndRoleLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              UseTime = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              StepType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GuildeLog");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (TutorialId != null && __isset.tutorialId) {
        field.Name = "tutorialId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TutorialId);
        oprot.WriteFieldEnd();
      }
      if (TutorialName != null && __isset.tutorialName) {
        field.Name = "tutorialName";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TutorialName);
        oprot.WriteFieldEnd();
      }
      if (Details != null && __isset.details) {
        field.Name = "details";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Details);
        oprot.WriteFieldEnd();
      }
      if (__isset.beginTime) {
        field.Name = "beginTime";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(BeginTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.beginRoleLevel) {
        field.Name = "beginRoleLevel";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BeginRoleLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.endRoleLevel) {
        field.Name = "endRoleLevel";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EndRoleLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.useTime) {
        field.Name = "useTime";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(UseTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.stepType) {
        field.Name = "stepType";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(StepType);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GuildeLog(");
      sb.Append("TutorialId: ");
      sb.Append(TutorialId);
      sb.Append(",TutorialName: ");
      sb.Append(TutorialName);
      sb.Append(",Details: ");
      sb.Append(Details);
      sb.Append(",BeginTime: ");
      sb.Append(BeginTime);
      sb.Append(",BeginRoleLevel: ");
      sb.Append(BeginRoleLevel);
      sb.Append(",EndRoleLevel: ");
      sb.Append(EndRoleLevel);
      sb.Append(",UseTime: ");
      sb.Append(UseTime);
      sb.Append(",StepType: ");
      sb.Append(StepType);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
