/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSUseItemMsg : TBase
  {
    private long _instanceId;
    private List<long> _targetCharIds;
    private List<MusicCodec.FuncParam> _funcReqParamList;
    private int _count;

    public long InstanceId
    {
      get
      {
        return _instanceId;
      }
      set
      {
        __isset.instanceId = true;
        this._instanceId = value;
      }
    }

    public List<long> TargetCharIds
    {
      get
      {
        return _targetCharIds;
      }
      set
      {
        __isset.targetCharIds = true;
        this._targetCharIds = value;
      }
    }

    public List<MusicCodec.FuncParam> FuncReqParamList
    {
      get
      {
        return _funcReqParamList;
      }
      set
      {
        __isset.funcReqParamList = true;
        this._funcReqParamList = value;
      }
    }

    public int Count
    {
      get
      {
        return _count;
      }
      set
      {
        __isset.count = true;
        this._count = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool instanceId;
      public bool targetCharIds;
      public bool funcReqParamList;
      public bool count;
    }

    public CSUseItemMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSUseItemMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.instanceId) {
        field.Name = "instanceId";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(InstanceId);
        oprot.WriteFieldEnd();
      }
      if (TargetCharIds != null && __isset.targetCharIds) {
        field.Name = "targetCharIds";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, TargetCharIds.Count));
          foreach (long _iter14 in TargetCharIds)
          {
            oprot.WriteI64(_iter14);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (FuncReqParamList != null && __isset.funcReqParamList) {
        field.Name = "funcReqParamList";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, FuncReqParamList.Count));
          foreach (MusicCodec.FuncParam _iter15 in FuncReqParamList)
          {
            _iter15.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.count) {
        field.Name = "count";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Count);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
