/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSReportChatMsg : TBase
  {
    private byte _scope;
    private long _reportedCharId;
    private string _content;
    private bool _sound;

    /// <summary>
    /// 1-private 2-world 3-speaker
    /// </summary>
    public byte Scope
    {
      get
      {
        return _scope;
      }
      set
      {
        __isset.scope = true;
        this._scope = value;
      }
    }

    public long ReportedCharId
    {
      get
      {
        return _reportedCharId;
      }
      set
      {
        __isset.reportedCharId = true;
        this._reportedCharId = value;
      }
    }

    public string Content
    {
      get
      {
        return _content;
      }
      set
      {
        __isset.content = true;
        this._content = value;
      }
    }

    public bool Sound
    {
      get
      {
        return _sound;
      }
      set
      {
        __isset.sound = true;
        this._sound = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool scope;
      public bool reportedCharId;
      public bool content;
      public bool sound;
    }

    public CSReportChatMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSReportChatMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.scope) {
        field.Name = "scope";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Scope);
        oprot.WriteFieldEnd();
      }
      if (__isset.reportedCharId) {
        field.Name = "reportedCharId";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(ReportedCharId);
        oprot.WriteFieldEnd();
      }
      if (Content != null && __isset.content) {
        field.Name = "content";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Content);
        oprot.WriteFieldEnd();
      }
      if (__isset.sound) {
        field.Name = "sound";
        field.Type = TType.Bool;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Sound);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
