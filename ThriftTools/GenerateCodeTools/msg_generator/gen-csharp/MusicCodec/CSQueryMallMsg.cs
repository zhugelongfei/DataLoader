/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 查询商城消息
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSQueryMallMsg : TBase
  {
    private byte _firstCategory;
    private byte _secondCategory;
    private byte _thirdCategory;
    private byte _sex;
    private byte _sortType;
    private MusicCodec.CommonDataPageInfoQueryParam _pageInfoQueryParam;
    private bool _isLimitMall;

    public byte FirstCategory
    {
      get
      {
        return _firstCategory;
      }
      set
      {
        __isset.firstCategory = true;
        this._firstCategory = value;
      }
    }

    public byte SecondCategory
    {
      get
      {
        return _secondCategory;
      }
      set
      {
        __isset.secondCategory = true;
        this._secondCategory = value;
      }
    }

    public byte ThirdCategory
    {
      get
      {
        return _thirdCategory;
      }
      set
      {
        __isset.thirdCategory = true;
        this._thirdCategory = value;
      }
    }

    public byte Sex
    {
      get
      {
        return _sex;
      }
      set
      {
        __isset.sex = true;
        this._sex = value;
      }
    }

    public byte SortType
    {
      get
      {
        return _sortType;
      }
      set
      {
        __isset.sortType = true;
        this._sortType = value;
      }
    }

    /// <summary>
    /// 分页信息查询参数
    /// </summary>
    public MusicCodec.CommonDataPageInfoQueryParam PageInfoQueryParam
    {
      get
      {
        return _pageInfoQueryParam;
      }
      set
      {
        __isset.pageInfoQueryParam = true;
        this._pageInfoQueryParam = value;
      }
    }

    /// <summary>
    /// 是否限时商城
    /// </summary>
    public bool IsLimitMall
    {
      get
      {
        return _isLimitMall;
      }
      set
      {
        __isset.isLimitMall = true;
        this._isLimitMall = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool firstCategory;
      public bool secondCategory;
      public bool thirdCategory;
      public bool sex;
      public bool sortType;
      public bool pageInfoQueryParam;
      public bool isLimitMall;
    }

    public CSQueryMallMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSQueryMallMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.firstCategory) {
        field.Name = "firstCategory";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(FirstCategory);
        oprot.WriteFieldEnd();
      }
      if (__isset.secondCategory) {
        field.Name = "secondCategory";
        field.Type = TType.Byte;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(SecondCategory);
        oprot.WriteFieldEnd();
      }
      if (__isset.thirdCategory) {
        field.Name = "thirdCategory";
        field.Type = TType.Byte;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ThirdCategory);
        oprot.WriteFieldEnd();
      }
      if (__isset.sex) {
        field.Name = "sex";
        field.Type = TType.Byte;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Sex);
        oprot.WriteFieldEnd();
      }
      if (__isset.sortType) {
        field.Name = "sortType";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(SortType);
        oprot.WriteFieldEnd();
      }
      if (PageInfoQueryParam != null && __isset.pageInfoQueryParam) {
        field.Name = "pageInfoQueryParam";
        field.Type = TType.Struct;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        PageInfoQueryParam.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.isLimitMall) {
        field.Name = "isLimitMall";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsLimitMall);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
