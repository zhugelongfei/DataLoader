/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSCreateDanceRoomMsg : TBase
  {
    private string _password;
    private byte _mode;
    private short _musicId;
    private MusicCodec.RoomChannel _channel;
    private byte _lvl;
    private bool _watch;
    private string _title;
    private MusicCodec.CreateRoomType _roomType;
    private short _tourRaidId;

    public string Password
    {
      get
      {
        return _password;
      }
      set
      {
        __isset.password = true;
        this._password = value;
      }
    }

    public byte Mode
    {
      get
      {
        return _mode;
      }
      set
      {
        __isset.mode = true;
        this._mode = value;
      }
    }

    public short MusicId
    {
      get
      {
        return _musicId;
      }
      set
      {
        __isset.musicId = true;
        this._musicId = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="MusicCodec.RoomChannel"/>
    /// </summary>
    public MusicCodec.RoomChannel Channel
    {
      get
      {
        return _channel;
      }
      set
      {
        __isset.channel = true;
        this._channel = value;
      }
    }

    public byte Lvl
    {
      get
      {
        return _lvl;
      }
      set
      {
        __isset.lvl = true;
        this._lvl = value;
      }
    }

    public bool Watch
    {
      get
      {
        return _watch;
      }
      set
      {
        __isset.watch = true;
        this._watch = value;
      }
    }

    public string Title
    {
      get
      {
        return _title;
      }
      set
      {
        __isset.title = true;
        this._title = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="MusicCodec.CreateRoomType"/>
    /// </summary>
    public MusicCodec.CreateRoomType RoomType
    {
      get
      {
        return _roomType;
      }
      set
      {
        __isset.roomType = true;
        this._roomType = value;
      }
    }

    public short TourRaidId
    {
      get
      {
        return _tourRaidId;
      }
      set
      {
        __isset.tourRaidId = true;
        this._tourRaidId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool password;
      public bool mode;
      public bool musicId;
      public bool channel;
      public bool lvl;
      public bool watch;
      public bool title;
      public bool roomType;
      public bool tourRaidId;
    }

    public CSCreateDanceRoomMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSCreateDanceRoomMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Password != null && __isset.password) {
        field.Name = "password";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Password);
        oprot.WriteFieldEnd();
      }
      if (__isset.mode) {
        field.Name = "mode";
        field.Type = TType.Byte;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Mode);
        oprot.WriteFieldEnd();
      }
      if (__isset.musicId) {
        field.Name = "musicId";
        field.Type = TType.I16;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(MusicId);
        oprot.WriteFieldEnd();
      }
      if (__isset.channel) {
        field.Name = "channel";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Channel);
        oprot.WriteFieldEnd();
      }
      if (__isset.lvl) {
        field.Name = "lvl";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Lvl);
        oprot.WriteFieldEnd();
      }
      if (__isset.watch) {
        field.Name = "watch";
        field.Type = TType.Bool;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Watch);
        oprot.WriteFieldEnd();
      }
      if (Title != null && __isset.title) {
        field.Name = "title";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Title);
        oprot.WriteFieldEnd();
      }
      if (__isset.roomType) {
        field.Name = "roomType";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)RoomType);
        oprot.WriteFieldEnd();
      }
      if (__isset.tourRaidId) {
        field.Name = "tourRaidId";
        field.Type = TType.I16;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(TourRaidId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
