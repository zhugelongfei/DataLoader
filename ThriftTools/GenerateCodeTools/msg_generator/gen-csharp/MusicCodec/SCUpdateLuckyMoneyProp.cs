/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 更新玩家红包信息
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCUpdateLuckyMoneyProp : TBase
  {
    private int _totalNumber;
    private long _luckyMoneyId;
    private MusicCodec.PlayerBaseInfo _senderInfo;
    private MusicCodec.LuckyMoneyType _type;
    private string _words;

    /// <summary>
    /// 玩家红包数量
    /// </summary>
    public int TotalNumber
    {
      get
      {
        return _totalNumber;
      }
      set
      {
        __isset.totalNumber = true;
        this._totalNumber = value;
      }
    }

    /// <summary>
    /// 红包id
    /// </summary>
    public long LuckyMoneyId
    {
      get
      {
        return _luckyMoneyId;
      }
      set
      {
        __isset.luckyMoneyId = true;
        this._luckyMoneyId = value;
      }
    }

    /// <summary>
    /// 发送者信息
    /// </summary>
    public MusicCodec.PlayerBaseInfo SenderInfo
    {
      get
      {
        return _senderInfo;
      }
      set
      {
        __isset.senderInfo = true;
        this._senderInfo = value;
      }
    }

    /// <summary>
    /// 红包类型
    /// 
    /// <seealso cref="MusicCodec.LuckyMoneyType"/>
    /// </summary>
    public MusicCodec.LuckyMoneyType Type
    {
      get
      {
        return _type;
      }
      set
      {
        __isset.type = true;
        this._type = value;
      }
    }

    /// <summary>
    /// 红包寄语
    /// </summary>
    public string Words
    {
      get
      {
        return _words;
      }
      set
      {
        __isset.words = true;
        this._words = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool totalNumber;
      public bool luckyMoneyId;
      public bool senderInfo;
      public bool type;
      public bool words;
    }

    public SCUpdateLuckyMoneyProp() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              TotalNumber = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              LuckyMoneyId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              SenderInfo = new MusicCodec.PlayerBaseInfo();
              SenderInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Type = (MusicCodec.LuckyMoneyType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Words = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
ClientLog.Instance.LogError("This function is deleted.");
}

    


  }

}
