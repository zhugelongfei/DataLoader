/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CSCreateNewCharMsg : TBase
  {
    private byte _sex;
    private byte _modelId;
    private string _name;
    private string _headIconId;
    private byte _bodyAdjVal;
    private MusicCodec.Constellation _constellation;
    private MusicCodec.LuckDay _luckDay;
    private string _birthday;
    private short _diyId;

    /// <summary>
    /// 0-male 1-female
    /// </summary>
    public byte Sex
    {
      get
      {
        return _sex;
      }
      set
      {
        __isset.sex = true;
        this._sex = value;
      }
    }

    /// <summary>
    /// char model, different from sex
    /// </summary>
    public byte ModelId
    {
      get
      {
        return _modelId;
      }
      set
      {
        __isset.modelId = true;
        this._modelId = value;
      }
    }

    /// <summary>
    /// new char name
    /// </summary>
    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    /// <summary>
    /// head icon id
    /// </summary>
    public string HeadIconId
    {
      get
      {
        return _headIconId;
      }
      set
      {
        __isset.headIconId = true;
        this._headIconId = value;
      }
    }

    /// <summary>
    /// body total adjust value
    /// </summary>
    public byte BodyAdjVal
    {
      get
      {
        return _bodyAdjVal;
      }
      set
      {
        __isset.bodyAdjVal = true;
        this._bodyAdjVal = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="MusicCodec.Constellation"/>
    /// </summary>
    public MusicCodec.Constellation Constellation
    {
      get
      {
        return _constellation;
      }
      set
      {
        __isset.constellation = true;
        this._constellation = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="MusicCodec.LuckDay"/>
    /// </summary>
    public MusicCodec.LuckDay LuckDay
    {
      get
      {
        return _luckDay;
      }
      set
      {
        __isset.luckDay = true;
        this._luckDay = value;
      }
    }

    /// <summary>
    /// yyyy-MM-dd
    /// </summary>
    public string Birthday
    {
      get
      {
        return _birthday;
      }
      set
      {
        __isset.birthday = true;
        this._birthday = value;
      }
    }

    public short DiyId
    {
      get
      {
        return _diyId;
      }
      set
      {
        __isset.diyId = true;
        this._diyId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool sex;
      public bool modelId;
      public bool name;
      public bool headIconId;
      public bool bodyAdjVal;
      public bool constellation;
      public bool luckDay;
      public bool birthday;
      public bool diyId;
    }

    public CSCreateNewCharMsg() {
    }

    public void Read (TProtocol iprot)
    {
ClientLog.Instance.LogError("This function is deleted.");
}

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CSCreateNewCharMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.sex) {
        field.Name = "sex";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Sex);
        oprot.WriteFieldEnd();
      }
      if (__isset.modelId) {
        field.Name = "modelId";
        field.Type = TType.Byte;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ModelId);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (HeadIconId != null && __isset.headIconId) {
        field.Name = "headIconId";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(HeadIconId);
        oprot.WriteFieldEnd();
      }
      if (__isset.bodyAdjVal) {
        field.Name = "bodyAdjVal";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(BodyAdjVal);
        oprot.WriteFieldEnd();
      }
      if (__isset.constellation) {
        field.Name = "constellation";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Constellation);
        oprot.WriteFieldEnd();
      }
      if (__isset.luckDay) {
        field.Name = "luckDay";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)LuckDay);
        oprot.WriteFieldEnd();
      }
      if (Birthday != null && __isset.birthday) {
        field.Name = "birthday";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Birthday);
        oprot.WriteFieldEnd();
      }
      if (__isset.diyId) {
        field.Name = "diyId";
        field.Type = TType.I16;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(DiyId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    


  }

}
