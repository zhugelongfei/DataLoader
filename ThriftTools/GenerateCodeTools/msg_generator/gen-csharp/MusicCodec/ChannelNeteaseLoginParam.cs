/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MusicCodec
{

  /// <summary>
  /// 网易登录参数
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class ChannelNeteaseLoginParam : TBase
  {
    private string _sdkUId;
    private string _gameId;
    private string _appChannel;
    private string _channelName;
    private string _platform;
    private string _udid;
    private string _deviceId;
    private string _sessionId;
    private string _sdkVersion;

    /// <summary>
    /// sdk返回的用户id，可能为整型和字符串
    /// </summary>
    public string SdkUId
    {
      get
      {
        return _sdkUId;
      }
      set
      {
        __isset.sdkUId = true;
        this._sdkUId = value;
      }
    }

    /// <summary>
    /// 渠道分配的游戏id
    /// </summary>
    public string GameId
    {
      get
      {
        return _gameId;
      }
      set
      {
        __isset.gameId = true;
        this._gameId = value;
      }
    }

    /// <summary>
    /// 发行(分发）渠道
    /// </summary>
    public string AppChannel
    {
      get
      {
        return _appChannel;
      }
      set
      {
        __isset.appChannel = true;
        this._appChannel = value;
      }
    }

    /// <summary>
    /// 渠道名
    /// </summary>
    public string ChannelName
    {
      get
      {
        return _channelName;
      }
      set
      {
        __isset.channelName = true;
        this._channelName = value;
      }
    }

    /// <summary>
    /// 平台名
    /// </summary>
    public string Platform
    {
      get
      {
        return _platform;
      }
      set
      {
        __isset.platform = true;
        this._platform = value;
      }
    }

    /// <summary>
    /// 玩家登录的移动设备号，通过UniSDK提供的接口获取
    /// </summary>
    public string Udid
    {
      get
      {
        return _udid;
      }
      set
      {
        __isset.udid = true;
        this._udid = value;
      }
    }

    /// <summary>
    /// 玩家登录的手机硬件id，通过UniSDK提供的接口获取
    /// </summary>
    public string DeviceId
    {
      get
      {
        return _deviceId;
      }
      set
      {
        __isset.deviceId = true;
        this._deviceId = value;
      }
    }

    public string SessionId
    {
      get
      {
        return _sessionId;
      }
      set
      {
        __isset.sessionId = true;
        this._sessionId = value;
      }
    }

    /// <summary>
    /// sdk的版本
    /// </summary>
    public string SdkVersion
    {
      get
      {
        return _sdkVersion;
      }
      set
      {
        __isset.sdkVersion = true;
        this._sdkVersion = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool sdkUId;
      public bool gameId;
      public bool appChannel;
      public bool channelName;
      public bool platform;
      public bool udid;
      public bool deviceId;
      public bool sessionId;
      public bool sdkVersion;
    }

    public ChannelNeteaseLoginParam() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              SdkUId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              GameId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              AppChannel = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              ChannelName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Platform = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              Udid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              DeviceId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              SessionId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              SdkVersion = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ChannelNeteaseLoginParam");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (SdkUId != null && __isset.sdkUId) {
        field.Name = "sdkUId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SdkUId);
        oprot.WriteFieldEnd();
      }
      if (GameId != null && __isset.gameId) {
        field.Name = "gameId";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(GameId);
        oprot.WriteFieldEnd();
      }
      if (AppChannel != null && __isset.appChannel) {
        field.Name = "appChannel";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(AppChannel);
        oprot.WriteFieldEnd();
      }
      if (ChannelName != null && __isset.channelName) {
        field.Name = "channelName";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ChannelName);
        oprot.WriteFieldEnd();
      }
      if (Platform != null && __isset.platform) {
        field.Name = "platform";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Platform);
        oprot.WriteFieldEnd();
      }
      if (Udid != null && __isset.udid) {
        field.Name = "udid";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Udid);
        oprot.WriteFieldEnd();
      }
      if (DeviceId != null && __isset.deviceId) {
        field.Name = "deviceId";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DeviceId);
        oprot.WriteFieldEnd();
      }
      if (SessionId != null && __isset.sessionId) {
        field.Name = "sessionId";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SessionId);
        oprot.WriteFieldEnd();
      }
      if (SdkVersion != null && __isset.sdkVersion) {
        field.Name = "sdkVersion";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SdkVersion);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ChannelNeteaseLoginParam(");
      sb.Append("SdkUId: ");
      sb.Append(SdkUId);
      sb.Append(",GameId: ");
      sb.Append(GameId);
      sb.Append(",AppChannel: ");
      sb.Append(AppChannel);
      sb.Append(",ChannelName: ");
      sb.Append(ChannelName);
      sb.Append(",Platform: ");
      sb.Append(Platform);
      sb.Append(",Udid: ");
      sb.Append(Udid);
      sb.Append(",DeviceId: ");
      sb.Append(DeviceId);
      sb.Append(",SessionId: ");
      sb.Append(SessionId);
      sb.Append(",SdkVersion: ");
      sb.Append(SdkVersion);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
