/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.cs;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 摸一摸其他玩家
 */
public class CSTouchFriendMsg implements org.apache.thrift.TBase<CSTouchFriendMsg, CSTouchFriendMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CSTouchFriendMsg");

  private static final org.apache.thrift.protocol.TField TOUCH_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("touchPosition", org.apache.thrift.protocol.TType.BYTE, (short)1);
  private static final org.apache.thrift.protocol.TField TARGET_CHARID_FIELD_DESC = new org.apache.thrift.protocol.TField("targetCharid", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField IS_TODAY_FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("isTodayFirst", org.apache.thrift.protocol.TType.BYTE, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CSTouchFriendMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CSTouchFriendMsgTupleSchemeFactory());
  }

  /**
   * 摸身体部位
   */
  public byte touchPosition; // required
  public long targetCharid; // required
  /**
   * 是否今天第一次摸 0-否 1-是
   */
  public byte isTodayFirst; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 摸身体部位
     */
    TOUCH_POSITION((short)1, "touchPosition"),
    TARGET_CHARID((short)2, "targetCharid"),
    /**
     * 是否今天第一次摸 0-否 1-是
     */
    IS_TODAY_FIRST((short)3, "isTodayFirst");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TOUCH_POSITION
          return TOUCH_POSITION;
        case 2: // TARGET_CHARID
          return TARGET_CHARID;
        case 3: // IS_TODAY_FIRST
          return IS_TODAY_FIRST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOUCHPOSITION_ISSET_ID = 0;
  private static final int __TARGETCHARID_ISSET_ID = 1;
  private static final int __ISTODAYFIRST_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TOUCH_POSITION, new org.apache.thrift.meta_data.FieldMetaData("touchPosition", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.TARGET_CHARID, new org.apache.thrift.meta_data.FieldMetaData("targetCharid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IS_TODAY_FIRST, new org.apache.thrift.meta_data.FieldMetaData("isTodayFirst", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CSTouchFriendMsg.class, metaDataMap);
  }

  public CSTouchFriendMsg() {
  }

  public CSTouchFriendMsg(
    byte touchPosition,
    long targetCharid,
    byte isTodayFirst)
  {
    this();
    this.touchPosition = touchPosition;
    setTouchPositionIsSet(true);
    this.targetCharid = targetCharid;
    setTargetCharidIsSet(true);
    this.isTodayFirst = isTodayFirst;
    setIsTodayFirstIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CSTouchFriendMsg(CSTouchFriendMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    this.touchPosition = other.touchPosition;
    this.targetCharid = other.targetCharid;
    this.isTodayFirst = other.isTodayFirst;
  }

  public CSTouchFriendMsg deepCopy() {
    return new CSTouchFriendMsg(this);
  }

  @Override
  public void clear() {
    setTouchPositionIsSet(false);
    this.touchPosition = 0;
    setTargetCharidIsSet(false);
    this.targetCharid = 0;
    setIsTodayFirstIsSet(false);
    this.isTodayFirst = 0;
  }

  /**
   * 摸身体部位
   */
  public byte getTouchPosition() {
    return this.touchPosition;
  }

  /**
   * 摸身体部位
   */
  public CSTouchFriendMsg setTouchPosition(byte touchPosition) {
    this.touchPosition = touchPosition;
    setTouchPositionIsSet(true);
    return this;
  }

  public void unsetTouchPosition() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOUCHPOSITION_ISSET_ID);
  }

  /** Returns true if field touchPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetTouchPosition() {
    return EncodingUtils.testBit(__isset_bitfield, __TOUCHPOSITION_ISSET_ID);
  }

  public void setTouchPositionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOUCHPOSITION_ISSET_ID, value);
  }

  public long getTargetCharid() {
    return this.targetCharid;
  }

  public CSTouchFriendMsg setTargetCharid(long targetCharid) {
    this.targetCharid = targetCharid;
    setTargetCharidIsSet(true);
    return this;
  }

  public void unsetTargetCharid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TARGETCHARID_ISSET_ID);
  }

  /** Returns true if field targetCharid is set (has been assigned a value) and false otherwise */
  public boolean isSetTargetCharid() {
    return EncodingUtils.testBit(__isset_bitfield, __TARGETCHARID_ISSET_ID);
  }

  public void setTargetCharidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TARGETCHARID_ISSET_ID, value);
  }

  /**
   * 是否今天第一次摸 0-否 1-是
   */
  public byte getIsTodayFirst() {
    return this.isTodayFirst;
  }

  /**
   * 是否今天第一次摸 0-否 1-是
   */
  public CSTouchFriendMsg setIsTodayFirst(byte isTodayFirst) {
    this.isTodayFirst = isTodayFirst;
    setIsTodayFirstIsSet(true);
    return this;
  }

  public void unsetIsTodayFirst() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISTODAYFIRST_ISSET_ID);
  }

  /** Returns true if field isTodayFirst is set (has been assigned a value) and false otherwise */
  public boolean isSetIsTodayFirst() {
    return EncodingUtils.testBit(__isset_bitfield, __ISTODAYFIRST_ISSET_ID);
  }

  public void setIsTodayFirstIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISTODAYFIRST_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TOUCH_POSITION:
      if (value == null) {
        unsetTouchPosition();
      } else {
        setTouchPosition((Byte)value);
      }
      break;

    case TARGET_CHARID:
      if (value == null) {
        unsetTargetCharid();
      } else {
        setTargetCharid((Long)value);
      }
      break;

    case IS_TODAY_FIRST:
      if (value == null) {
        unsetIsTodayFirst();
      } else {
        setIsTodayFirst((Byte)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TOUCH_POSITION:
      return Byte.valueOf(getTouchPosition());

    case TARGET_CHARID:
      return Long.valueOf(getTargetCharid());

    case IS_TODAY_FIRST:
      return Byte.valueOf(getIsTodayFirst());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TOUCH_POSITION:
      return isSetTouchPosition();
    case TARGET_CHARID:
      return isSetTargetCharid();
    case IS_TODAY_FIRST:
      return isSetIsTodayFirst();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CSTouchFriendMsg)
      return this.equals((CSTouchFriendMsg)that);
    return false;
  }

  public boolean equals(CSTouchFriendMsg that) {
    if (that == null)
      return false;

    boolean this_present_touchPosition = true;
    boolean that_present_touchPosition = true;
    if (this_present_touchPosition || that_present_touchPosition) {
      if (!(this_present_touchPosition && that_present_touchPosition))
        return false;
      if (this.touchPosition != that.touchPosition)
        return false;
    }

    boolean this_present_targetCharid = true;
    boolean that_present_targetCharid = true;
    if (this_present_targetCharid || that_present_targetCharid) {
      if (!(this_present_targetCharid && that_present_targetCharid))
        return false;
      if (this.targetCharid != that.targetCharid)
        return false;
    }

    boolean this_present_isTodayFirst = true;
    boolean that_present_isTodayFirst = true;
    if (this_present_isTodayFirst || that_present_isTodayFirst) {
      if (!(this_present_isTodayFirst && that_present_isTodayFirst))
        return false;
      if (this.isTodayFirst != that.isTodayFirst)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(CSTouchFriendMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CSTouchFriendMsg typedOther = (CSTouchFriendMsg)other;

    lastComparison = Boolean.valueOf(isSetTouchPosition()).compareTo(typedOther.isSetTouchPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTouchPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.touchPosition, typedOther.touchPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTargetCharid()).compareTo(typedOther.isSetTargetCharid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTargetCharid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.targetCharid, typedOther.targetCharid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsTodayFirst()).compareTo(typedOther.isSetIsTodayFirst());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsTodayFirst()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isTodayFirst, typedOther.isTodayFirst);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CSTouchFriendMsg(");
    boolean first = true;

    sb.append("touchPosition:");
    sb.append(this.touchPosition);
    first = false;
    if (!first) sb.append(", ");
    sb.append("targetCharid:");
    sb.append(this.targetCharid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isTodayFirst:");
    sb.append(this.isTodayFirst);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CSTouchFriendMsgStandardSchemeFactory implements SchemeFactory {
    public CSTouchFriendMsgStandardScheme getScheme() {
      return new CSTouchFriendMsgStandardScheme();
    }
  }

  private static class CSTouchFriendMsgStandardScheme extends StandardScheme<CSTouchFriendMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CSTouchFriendMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TOUCH_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.touchPosition = iprot.readByte();
              struct.setTouchPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TARGET_CHARID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.targetCharid = iprot.readI64();
              struct.setTargetCharidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_TODAY_FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.isTodayFirst = iprot.readByte();
              struct.setIsTodayFirstIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CSTouchFriendMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TOUCH_POSITION_FIELD_DESC);
      oprot.writeByte(struct.touchPosition);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TARGET_CHARID_FIELD_DESC);
      oprot.writeI64(struct.targetCharid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_TODAY_FIRST_FIELD_DESC);
      oprot.writeByte(struct.isTodayFirst);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CSTouchFriendMsgTupleSchemeFactory implements SchemeFactory {
    public CSTouchFriendMsgTupleScheme getScheme() {
      return new CSTouchFriendMsgTupleScheme();
    }
  }

  private static class CSTouchFriendMsgTupleScheme extends TupleScheme<CSTouchFriendMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CSTouchFriendMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTouchPosition()) {
        optionals.set(0);
      }
      if (struct.isSetTargetCharid()) {
        optionals.set(1);
      }
      if (struct.isSetIsTodayFirst()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetTouchPosition()) {
        oprot.writeByte(struct.touchPosition);
      }
      if (struct.isSetTargetCharid()) {
        oprot.writeI64(struct.targetCharid);
      }
      if (struct.isSetIsTodayFirst()) {
        oprot.writeByte(struct.isTodayFirst);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CSTouchFriendMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.touchPosition = iprot.readByte();
        struct.setTouchPositionIsSet(true);
      }
      if (incoming.get(1)) {
        struct.targetCharid = iprot.readI64();
        struct.setTargetCharidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.isTodayFirst = iprot.readByte();
        struct.setIsTodayFirstIsSet(true);
      }
    }
  }

}

