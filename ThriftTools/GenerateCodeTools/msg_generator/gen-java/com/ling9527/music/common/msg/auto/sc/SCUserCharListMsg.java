/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SCUserCharListMsg implements org.apache.thrift.TBase<SCUserCharListMsg, SCUserCharListMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCUserCharListMsg");

  private static final org.apache.thrift.protocol.TField BIND_CHAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bindCharId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CHAR_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("charList", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCUserCharListMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCUserCharListMsgTupleSchemeFactory());
  }

  public long bindCharId; // required
  public List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> charList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BIND_CHAR_ID((short)1, "bindCharId"),
    CHAR_LIST((short)2, "charList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BIND_CHAR_ID
          return BIND_CHAR_ID;
        case 2: // CHAR_LIST
          return CHAR_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BINDCHARID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BIND_CHAR_ID, new org.apache.thrift.meta_data.FieldMetaData("bindCharId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CHAR_LIST, new org.apache.thrift.meta_data.FieldMetaData("charList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCUserCharListMsg.class, metaDataMap);
  }

  public SCUserCharListMsg() {
  }

  public SCUserCharListMsg(
    long bindCharId,
    List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> charList)
  {
    this();
    this.bindCharId = bindCharId;
    setBindCharIdIsSet(true);
    this.charList = charList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCUserCharListMsg(SCUserCharListMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    this.bindCharId = other.bindCharId;
    if (other.isSetCharList()) {
      List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> __this__charList = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>();
      for (com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo other_element : other.charList) {
        __this__charList.add(new com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo(other_element));
      }
      this.charList = __this__charList;
    }
  }

  public SCUserCharListMsg deepCopy() {
    return new SCUserCharListMsg(this);
  }

  @Override
  public void clear() {
    setBindCharIdIsSet(false);
    this.bindCharId = 0;
    this.charList = null;
  }

  public long getBindCharId() {
    return this.bindCharId;
  }

  public SCUserCharListMsg setBindCharId(long bindCharId) {
    this.bindCharId = bindCharId;
    setBindCharIdIsSet(true);
    return this;
  }

  public void unsetBindCharId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BINDCHARID_ISSET_ID);
  }

  /** Returns true if field bindCharId is set (has been assigned a value) and false otherwise */
  public boolean isSetBindCharId() {
    return EncodingUtils.testBit(__isset_bitfield, __BINDCHARID_ISSET_ID);
  }

  public void setBindCharIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BINDCHARID_ISSET_ID, value);
  }

  public int getCharListSize() {
    return (this.charList == null) ? 0 : this.charList.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> getCharListIterator() {
    return (this.charList == null) ? null : this.charList.iterator();
  }

  public void addToCharList(com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo elem) {
    if (this.charList == null) {
      this.charList = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>();
    }
    this.charList.add(elem);
  }

  public List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> getCharList() {
    return this.charList;
  }

  public SCUserCharListMsg setCharList(List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> charList) {
    this.charList = charList;
    return this;
  }

  public void unsetCharList() {
    this.charList = null;
  }

  /** Returns true if field charList is set (has been assigned a value) and false otherwise */
  public boolean isSetCharList() {
    return this.charList != null;
  }

  public void setCharListIsSet(boolean value) {
    if (!value) {
      this.charList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BIND_CHAR_ID:
      if (value == null) {
        unsetBindCharId();
      } else {
        setBindCharId((Long)value);
      }
      break;

    case CHAR_LIST:
      if (value == null) {
        unsetCharList();
      } else {
        setCharList((List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BIND_CHAR_ID:
      return Long.valueOf(getBindCharId());

    case CHAR_LIST:
      return getCharList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BIND_CHAR_ID:
      return isSetBindCharId();
    case CHAR_LIST:
      return isSetCharList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCUserCharListMsg)
      return this.equals((SCUserCharListMsg)that);
    return false;
  }

  public boolean equals(SCUserCharListMsg that) {
    if (that == null)
      return false;

    boolean this_present_bindCharId = true;
    boolean that_present_bindCharId = true;
    if (this_present_bindCharId || that_present_bindCharId) {
      if (!(this_present_bindCharId && that_present_bindCharId))
        return false;
      if (this.bindCharId != that.bindCharId)
        return false;
    }

    boolean this_present_charList = true && this.isSetCharList();
    boolean that_present_charList = true && that.isSetCharList();
    if (this_present_charList || that_present_charList) {
      if (!(this_present_charList && that_present_charList))
        return false;
      if (!this.charList.equals(that.charList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCUserCharListMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCUserCharListMsg typedOther = (SCUserCharListMsg)other;

    lastComparison = Boolean.valueOf(isSetBindCharId()).compareTo(typedOther.isSetBindCharId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBindCharId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bindCharId, typedOther.bindCharId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCharList()).compareTo(typedOther.isSetCharList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charList, typedOther.charList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCUserCharListMsg(");
    boolean first = true;

    sb.append("bindCharId:");
    sb.append(this.bindCharId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("charList:");
    if (this.charList == null) {
      sb.append("null");
    } else {
      sb.append(this.charList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCUserCharListMsgStandardSchemeFactory implements SchemeFactory {
    public SCUserCharListMsgStandardScheme getScheme() {
      return new SCUserCharListMsgStandardScheme();
    }
  }

  private static class SCUserCharListMsgStandardScheme extends StandardScheme<SCUserCharListMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCUserCharListMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BIND_CHAR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.bindCharId = iprot.readI64();
              struct.setBindCharIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHAR_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.charList = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _elem2; // required
                  _elem2 = new com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo();
                  _elem2.read(iprot);
                  struct.charList.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setCharListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCUserCharListMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(BIND_CHAR_ID_FIELD_DESC);
      oprot.writeI64(struct.bindCharId);
      oprot.writeFieldEnd();
      if (struct.charList != null) {
        oprot.writeFieldBegin(CHAR_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.charList.size()));
          for (com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _iter3 : struct.charList)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCUserCharListMsgTupleSchemeFactory implements SchemeFactory {
    public SCUserCharListMsgTupleScheme getScheme() {
      return new SCUserCharListMsgTupleScheme();
    }
  }

  private static class SCUserCharListMsgTupleScheme extends TupleScheme<SCUserCharListMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCUserCharListMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBindCharId()) {
        optionals.set(0);
      }
      if (struct.isSetCharList()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetBindCharId()) {
        oprot.writeI64(struct.bindCharId);
      }
      if (struct.isSetCharList()) {
        {
          oprot.writeI32(struct.charList.size());
          for (com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _iter4 : struct.charList)
          {
            _iter4.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCUserCharListMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.bindCharId = iprot.readI64();
        struct.setBindCharIdIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.charList = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>(_list5.size);
          for (int _i6 = 0; _i6 < _list5.size; ++_i6)
          {
            com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _elem7; // required
            _elem7 = new com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo();
            _elem7.read(iprot);
            struct.charList.add(_elem7);
          }
        }
        struct.setCharListIsSet(true);
      }
    }
  }

}

