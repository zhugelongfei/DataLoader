/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 显示名片信息
 */
public class SCShowBusinessCardInfoResultMsg implements org.apache.thrift.TBase<SCShowBusinessCardInfoResultMsg, SCShowBusinessCardInfoResultMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCShowBusinessCardInfoResultMsg");

  private static final org.apache.thrift.protocol.TField CARD_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("cardInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TID_FIELD_DESC = new org.apache.thrift.protocol.TField("tid", org.apache.thrift.protocol.TType.I16, (short)2);
  private static final org.apache.thrift.protocol.TField LOVER_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("loverInfo", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCShowBusinessCardInfoResultMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCShowBusinessCardInfoResultMsgTupleSchemeFactory());
  }

  public com.ling9527.music.common.msg.auto.BusinessCardInfo cardInfo; // required
  public short tid; // required
  public com.ling9527.music.common.msg.auto.CloseFriendInfo loverInfo; // optional
  public int version; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CARD_INFO((short)1, "cardInfo"),
    TID((short)2, "tid"),
    LOVER_INFO((short)3, "loverInfo"),
    VERSION((short)4, "version");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CARD_INFO
          return CARD_INFO;
        case 2: // TID
          return TID;
        case 3: // LOVER_INFO
          return LOVER_INFO;
        case 4: // VERSION
          return VERSION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TID_ISSET_ID = 0;
  private static final int __VERSION_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.LOVER_INFO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CARD_INFO, new org.apache.thrift.meta_data.FieldMetaData("cardInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.BusinessCardInfo.class)));
    tmpMap.put(_Fields.TID, new org.apache.thrift.meta_data.FieldMetaData("tid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.LOVER_INFO, new org.apache.thrift.meta_data.FieldMetaData("loverInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.CloseFriendInfo.class)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCShowBusinessCardInfoResultMsg.class, metaDataMap);
  }

  public SCShowBusinessCardInfoResultMsg() {
  }

  public SCShowBusinessCardInfoResultMsg(
    com.ling9527.music.common.msg.auto.BusinessCardInfo cardInfo,
    short tid,
    int version)
  {
    this();
    this.cardInfo = cardInfo;
    this.tid = tid;
    setTidIsSet(true);
    this.version = version;
    setVersionIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCShowBusinessCardInfoResultMsg(SCShowBusinessCardInfoResultMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCardInfo()) {
      this.cardInfo = new com.ling9527.music.common.msg.auto.BusinessCardInfo(other.cardInfo);
    }
    this.tid = other.tid;
    if (other.isSetLoverInfo()) {
      this.loverInfo = new com.ling9527.music.common.msg.auto.CloseFriendInfo(other.loverInfo);
    }
    this.version = other.version;
  }

  public SCShowBusinessCardInfoResultMsg deepCopy() {
    return new SCShowBusinessCardInfoResultMsg(this);
  }

  @Override
  public void clear() {
    this.cardInfo = null;
    setTidIsSet(false);
    this.tid = 0;
    this.loverInfo = null;
    setVersionIsSet(false);
    this.version = 0;
  }

  public com.ling9527.music.common.msg.auto.BusinessCardInfo getCardInfo() {
    return this.cardInfo;
  }

  public SCShowBusinessCardInfoResultMsg setCardInfo(com.ling9527.music.common.msg.auto.BusinessCardInfo cardInfo) {
    this.cardInfo = cardInfo;
    return this;
  }

  public void unsetCardInfo() {
    this.cardInfo = null;
  }

  /** Returns true if field cardInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetCardInfo() {
    return this.cardInfo != null;
  }

  public void setCardInfoIsSet(boolean value) {
    if (!value) {
      this.cardInfo = null;
    }
  }

  public short getTid() {
    return this.tid;
  }

  public SCShowBusinessCardInfoResultMsg setTid(short tid) {
    this.tid = tid;
    setTidIsSet(true);
    return this;
  }

  public void unsetTid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TID_ISSET_ID);
  }

  /** Returns true if field tid is set (has been assigned a value) and false otherwise */
  public boolean isSetTid() {
    return EncodingUtils.testBit(__isset_bitfield, __TID_ISSET_ID);
  }

  public void setTidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TID_ISSET_ID, value);
  }

  public com.ling9527.music.common.msg.auto.CloseFriendInfo getLoverInfo() {
    return this.loverInfo;
  }

  public SCShowBusinessCardInfoResultMsg setLoverInfo(com.ling9527.music.common.msg.auto.CloseFriendInfo loverInfo) {
    this.loverInfo = loverInfo;
    return this;
  }

  public void unsetLoverInfo() {
    this.loverInfo = null;
  }

  /** Returns true if field loverInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetLoverInfo() {
    return this.loverInfo != null;
  }

  public void setLoverInfoIsSet(boolean value) {
    if (!value) {
      this.loverInfo = null;
    }
  }

  public int getVersion() {
    return this.version;
  }

  public SCShowBusinessCardInfoResultMsg setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CARD_INFO:
      if (value == null) {
        unsetCardInfo();
      } else {
        setCardInfo((com.ling9527.music.common.msg.auto.BusinessCardInfo)value);
      }
      break;

    case TID:
      if (value == null) {
        unsetTid();
      } else {
        setTid((Short)value);
      }
      break;

    case LOVER_INFO:
      if (value == null) {
        unsetLoverInfo();
      } else {
        setLoverInfo((com.ling9527.music.common.msg.auto.CloseFriendInfo)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CARD_INFO:
      return getCardInfo();

    case TID:
      return Short.valueOf(getTid());

    case LOVER_INFO:
      return getLoverInfo();

    case VERSION:
      return Integer.valueOf(getVersion());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CARD_INFO:
      return isSetCardInfo();
    case TID:
      return isSetTid();
    case LOVER_INFO:
      return isSetLoverInfo();
    case VERSION:
      return isSetVersion();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCShowBusinessCardInfoResultMsg)
      return this.equals((SCShowBusinessCardInfoResultMsg)that);
    return false;
  }

  public boolean equals(SCShowBusinessCardInfoResultMsg that) {
    if (that == null)
      return false;

    boolean this_present_cardInfo = true && this.isSetCardInfo();
    boolean that_present_cardInfo = true && that.isSetCardInfo();
    if (this_present_cardInfo || that_present_cardInfo) {
      if (!(this_present_cardInfo && that_present_cardInfo))
        return false;
      if (!this.cardInfo.equals(that.cardInfo))
        return false;
    }

    boolean this_present_tid = true;
    boolean that_present_tid = true;
    if (this_present_tid || that_present_tid) {
      if (!(this_present_tid && that_present_tid))
        return false;
      if (this.tid != that.tid)
        return false;
    }

    boolean this_present_loverInfo = true && this.isSetLoverInfo();
    boolean that_present_loverInfo = true && that.isSetLoverInfo();
    if (this_present_loverInfo || that_present_loverInfo) {
      if (!(this_present_loverInfo && that_present_loverInfo))
        return false;
      if (!this.loverInfo.equals(that.loverInfo))
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCShowBusinessCardInfoResultMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCShowBusinessCardInfoResultMsg typedOther = (SCShowBusinessCardInfoResultMsg)other;

    lastComparison = Boolean.valueOf(isSetCardInfo()).compareTo(typedOther.isSetCardInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardInfo, typedOther.cardInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTid()).compareTo(typedOther.isSetTid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tid, typedOther.tid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoverInfo()).compareTo(typedOther.isSetLoverInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoverInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loverInfo, typedOther.loverInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(typedOther.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, typedOther.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCShowBusinessCardInfoResultMsg(");
    boolean first = true;

    sb.append("cardInfo:");
    if (this.cardInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.cardInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tid:");
    sb.append(this.tid);
    first = false;
    if (isSetLoverInfo()) {
      if (!first) sb.append(", ");
      sb.append("loverInfo:");
      if (this.loverInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.loverInfo);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (cardInfo != null) {
      cardInfo.validate();
    }
    if (loverInfo != null) {
      loverInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCShowBusinessCardInfoResultMsgStandardSchemeFactory implements SchemeFactory {
    public SCShowBusinessCardInfoResultMsgStandardScheme getScheme() {
      return new SCShowBusinessCardInfoResultMsgStandardScheme();
    }
  }

  private static class SCShowBusinessCardInfoResultMsgStandardScheme extends StandardScheme<SCShowBusinessCardInfoResultMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCShowBusinessCardInfoResultMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CARD_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.cardInfo = new com.ling9527.music.common.msg.auto.BusinessCardInfo();
              struct.cardInfo.read(iprot);
              struct.setCardInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TID
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.tid = iprot.readI16();
              struct.setTidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LOVER_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.loverInfo = new com.ling9527.music.common.msg.auto.CloseFriendInfo();
              struct.loverInfo.read(iprot);
              struct.setLoverInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCShowBusinessCardInfoResultMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.cardInfo != null) {
        oprot.writeFieldBegin(CARD_INFO_FIELD_DESC);
        struct.cardInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TID_FIELD_DESC);
      oprot.writeI16(struct.tid);
      oprot.writeFieldEnd();
      if (struct.loverInfo != null) {
        if (struct.isSetLoverInfo()) {
          oprot.writeFieldBegin(LOVER_INFO_FIELD_DESC);
          struct.loverInfo.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCShowBusinessCardInfoResultMsgTupleSchemeFactory implements SchemeFactory {
    public SCShowBusinessCardInfoResultMsgTupleScheme getScheme() {
      return new SCShowBusinessCardInfoResultMsgTupleScheme();
    }
  }

  private static class SCShowBusinessCardInfoResultMsgTupleScheme extends TupleScheme<SCShowBusinessCardInfoResultMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCShowBusinessCardInfoResultMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCardInfo()) {
        optionals.set(0);
      }
      if (struct.isSetTid()) {
        optionals.set(1);
      }
      if (struct.isSetLoverInfo()) {
        optionals.set(2);
      }
      if (struct.isSetVersion()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetCardInfo()) {
        struct.cardInfo.write(oprot);
      }
      if (struct.isSetTid()) {
        oprot.writeI16(struct.tid);
      }
      if (struct.isSetLoverInfo()) {
        struct.loverInfo.write(oprot);
      }
      if (struct.isSetVersion()) {
        oprot.writeI32(struct.version);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCShowBusinessCardInfoResultMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.cardInfo = new com.ling9527.music.common.msg.auto.BusinessCardInfo();
        struct.cardInfo.read(iprot);
        struct.setCardInfoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.tid = iprot.readI16();
        struct.setTidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.loverInfo = new com.ling9527.music.common.msg.auto.CloseFriendInfo();
        struct.loverInfo.read(iprot);
        struct.setLoverInfoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.version = iprot.readI32();
        struct.setVersionIsSet(true);
      }
    }
  }

}

