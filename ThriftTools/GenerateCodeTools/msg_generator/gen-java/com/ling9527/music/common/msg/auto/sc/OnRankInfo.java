/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 上榜信息
 */
public class OnRankInfo implements org.apache.thrift.TBase<OnRankInfo, OnRankInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OnRankInfo");

  private static final org.apache.thrift.protocol.TField TODAY_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("todayRank", org.apache.thrift.protocol.TType.I16, (short)1);
  private static final org.apache.thrift.protocol.TField WEEK_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("weekRank", org.apache.thrift.protocol.TType.I16, (short)2);
  private static final org.apache.thrift.protocol.TField TOTAL_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("totalRank", org.apache.thrift.protocol.TType.I16, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OnRankInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OnRankInfoTupleSchemeFactory());
  }

  /**
   * 今日之星排名，未上榜为0， 下同
   */
  public short todayRank; // required
  /**
   * 周榜排名
   */
  public short weekRank; // required
  /**
   * 总榜排名
   */
  public short totalRank; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 今日之星排名，未上榜为0， 下同
     */
    TODAY_RANK((short)1, "todayRank"),
    /**
     * 周榜排名
     */
    WEEK_RANK((short)2, "weekRank"),
    /**
     * 总榜排名
     */
    TOTAL_RANK((short)3, "totalRank");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TODAY_RANK
          return TODAY_RANK;
        case 2: // WEEK_RANK
          return WEEK_RANK;
        case 3: // TOTAL_RANK
          return TOTAL_RANK;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TODAYRANK_ISSET_ID = 0;
  private static final int __WEEKRANK_ISSET_ID = 1;
  private static final int __TOTALRANK_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TODAY_RANK, new org.apache.thrift.meta_data.FieldMetaData("todayRank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.WEEK_RANK, new org.apache.thrift.meta_data.FieldMetaData("weekRank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.TOTAL_RANK, new org.apache.thrift.meta_data.FieldMetaData("totalRank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OnRankInfo.class, metaDataMap);
  }

  public OnRankInfo() {
  }

  public OnRankInfo(
    short todayRank,
    short weekRank,
    short totalRank)
  {
    this();
    this.todayRank = todayRank;
    setTodayRankIsSet(true);
    this.weekRank = weekRank;
    setWeekRankIsSet(true);
    this.totalRank = totalRank;
    setTotalRankIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OnRankInfo(OnRankInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.todayRank = other.todayRank;
    this.weekRank = other.weekRank;
    this.totalRank = other.totalRank;
  }

  public OnRankInfo deepCopy() {
    return new OnRankInfo(this);
  }

  @Override
  public void clear() {
    setTodayRankIsSet(false);
    this.todayRank = 0;
    setWeekRankIsSet(false);
    this.weekRank = 0;
    setTotalRankIsSet(false);
    this.totalRank = 0;
  }

  /**
   * 今日之星排名，未上榜为0， 下同
   */
  public short getTodayRank() {
    return this.todayRank;
  }

  /**
   * 今日之星排名，未上榜为0， 下同
   */
  public OnRankInfo setTodayRank(short todayRank) {
    this.todayRank = todayRank;
    setTodayRankIsSet(true);
    return this;
  }

  public void unsetTodayRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TODAYRANK_ISSET_ID);
  }

  /** Returns true if field todayRank is set (has been assigned a value) and false otherwise */
  public boolean isSetTodayRank() {
    return EncodingUtils.testBit(__isset_bitfield, __TODAYRANK_ISSET_ID);
  }

  public void setTodayRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TODAYRANK_ISSET_ID, value);
  }

  /**
   * 周榜排名
   */
  public short getWeekRank() {
    return this.weekRank;
  }

  /**
   * 周榜排名
   */
  public OnRankInfo setWeekRank(short weekRank) {
    this.weekRank = weekRank;
    setWeekRankIsSet(true);
    return this;
  }

  public void unsetWeekRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __WEEKRANK_ISSET_ID);
  }

  /** Returns true if field weekRank is set (has been assigned a value) and false otherwise */
  public boolean isSetWeekRank() {
    return EncodingUtils.testBit(__isset_bitfield, __WEEKRANK_ISSET_ID);
  }

  public void setWeekRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __WEEKRANK_ISSET_ID, value);
  }

  /**
   * 总榜排名
   */
  public short getTotalRank() {
    return this.totalRank;
  }

  /**
   * 总榜排名
   */
  public OnRankInfo setTotalRank(short totalRank) {
    this.totalRank = totalRank;
    setTotalRankIsSet(true);
    return this;
  }

  public void unsetTotalRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALRANK_ISSET_ID);
  }

  /** Returns true if field totalRank is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalRank() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALRANK_ISSET_ID);
  }

  public void setTotalRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALRANK_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TODAY_RANK:
      if (value == null) {
        unsetTodayRank();
      } else {
        setTodayRank((Short)value);
      }
      break;

    case WEEK_RANK:
      if (value == null) {
        unsetWeekRank();
      } else {
        setWeekRank((Short)value);
      }
      break;

    case TOTAL_RANK:
      if (value == null) {
        unsetTotalRank();
      } else {
        setTotalRank((Short)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TODAY_RANK:
      return Short.valueOf(getTodayRank());

    case WEEK_RANK:
      return Short.valueOf(getWeekRank());

    case TOTAL_RANK:
      return Short.valueOf(getTotalRank());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TODAY_RANK:
      return isSetTodayRank();
    case WEEK_RANK:
      return isSetWeekRank();
    case TOTAL_RANK:
      return isSetTotalRank();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OnRankInfo)
      return this.equals((OnRankInfo)that);
    return false;
  }

  public boolean equals(OnRankInfo that) {
    if (that == null)
      return false;

    boolean this_present_todayRank = true;
    boolean that_present_todayRank = true;
    if (this_present_todayRank || that_present_todayRank) {
      if (!(this_present_todayRank && that_present_todayRank))
        return false;
      if (this.todayRank != that.todayRank)
        return false;
    }

    boolean this_present_weekRank = true;
    boolean that_present_weekRank = true;
    if (this_present_weekRank || that_present_weekRank) {
      if (!(this_present_weekRank && that_present_weekRank))
        return false;
      if (this.weekRank != that.weekRank)
        return false;
    }

    boolean this_present_totalRank = true;
    boolean that_present_totalRank = true;
    if (this_present_totalRank || that_present_totalRank) {
      if (!(this_present_totalRank && that_present_totalRank))
        return false;
      if (this.totalRank != that.totalRank)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(OnRankInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    OnRankInfo typedOther = (OnRankInfo)other;

    lastComparison = Boolean.valueOf(isSetTodayRank()).compareTo(typedOther.isSetTodayRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTodayRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.todayRank, typedOther.todayRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeekRank()).compareTo(typedOther.isSetWeekRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeekRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weekRank, typedOther.weekRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalRank()).compareTo(typedOther.isSetTotalRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalRank, typedOther.totalRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OnRankInfo(");
    boolean first = true;

    sb.append("todayRank:");
    sb.append(this.todayRank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("weekRank:");
    sb.append(this.weekRank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalRank:");
    sb.append(this.totalRank);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OnRankInfoStandardSchemeFactory implements SchemeFactory {
    public OnRankInfoStandardScheme getScheme() {
      return new OnRankInfoStandardScheme();
    }
  }

  private static class OnRankInfoStandardScheme extends StandardScheme<OnRankInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OnRankInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TODAY_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.todayRank = iprot.readI16();
              struct.setTodayRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WEEK_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.weekRank = iprot.readI16();
              struct.setWeekRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TOTAL_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.totalRank = iprot.readI16();
              struct.setTotalRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OnRankInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TODAY_RANK_FIELD_DESC);
      oprot.writeI16(struct.todayRank);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(WEEK_RANK_FIELD_DESC);
      oprot.writeI16(struct.weekRank);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_RANK_FIELD_DESC);
      oprot.writeI16(struct.totalRank);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OnRankInfoTupleSchemeFactory implements SchemeFactory {
    public OnRankInfoTupleScheme getScheme() {
      return new OnRankInfoTupleScheme();
    }
  }

  private static class OnRankInfoTupleScheme extends TupleScheme<OnRankInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OnRankInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTodayRank()) {
        optionals.set(0);
      }
      if (struct.isSetWeekRank()) {
        optionals.set(1);
      }
      if (struct.isSetTotalRank()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetTodayRank()) {
        oprot.writeI16(struct.todayRank);
      }
      if (struct.isSetWeekRank()) {
        oprot.writeI16(struct.weekRank);
      }
      if (struct.isSetTotalRank()) {
        oprot.writeI16(struct.totalRank);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OnRankInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.todayRank = iprot.readI16();
        struct.setTodayRankIsSet(true);
      }
      if (incoming.get(1)) {
        struct.weekRank = iprot.readI16();
        struct.setWeekRankIsSet(true);
      }
      if (incoming.get(2)) {
        struct.totalRank = iprot.readI16();
        struct.setTotalRankIsSet(true);
      }
    }
  }

}

