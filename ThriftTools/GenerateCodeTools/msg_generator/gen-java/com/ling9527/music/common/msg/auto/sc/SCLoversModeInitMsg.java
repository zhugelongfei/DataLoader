/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SCLoversModeInitMsg implements org.apache.thrift.TBase<SCLoversModeInitMsg, SCLoversModeInitMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCLoversModeInitMsg");

  private static final org.apache.thrift.protocol.TField DYN_INIT_FIELD_DESC = new org.apache.thrift.protocol.TField("dynInit", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TRD_INIT_FIELD_DESC = new org.apache.thrift.protocol.TField("trdInit", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField INPUT_SYNC_SEND_MSG_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("inputSyncSendMsgTime", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField TOUCH_HEART_SEND_MSG_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("touchHeartSendMsgTime", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField MAX_POWER_FIELD_DESC = new org.apache.thrift.protocol.TField("maxPower", org.apache.thrift.protocol.TType.I16, (short)5);
  private static final org.apache.thrift.protocol.TField GAME_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("gameList", org.apache.thrift.protocol.TType.LIST, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCLoversModeInitMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCLoversModeInitMsgTupleSchemeFactory());
  }

  public com.ling9527.music.common.msg.auto.LoversDynInit dynInit; // optional
  public com.ling9527.music.common.msg.auto.LoversTrdInit trdInit; // optional
  public int inputSyncSendMsgTime; // required
  public int touchHeartSendMsgTime; // required
  public short maxPower; // required
  public List<com.ling9527.music.common.msg.auto.LoversGame> gameList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DYN_INIT((short)1, "dynInit"),
    TRD_INIT((short)2, "trdInit"),
    INPUT_SYNC_SEND_MSG_TIME((short)3, "inputSyncSendMsgTime"),
    TOUCH_HEART_SEND_MSG_TIME((short)4, "touchHeartSendMsgTime"),
    MAX_POWER((short)5, "maxPower"),
    GAME_LIST((short)10, "gameList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DYN_INIT
          return DYN_INIT;
        case 2: // TRD_INIT
          return TRD_INIT;
        case 3: // INPUT_SYNC_SEND_MSG_TIME
          return INPUT_SYNC_SEND_MSG_TIME;
        case 4: // TOUCH_HEART_SEND_MSG_TIME
          return TOUCH_HEART_SEND_MSG_TIME;
        case 5: // MAX_POWER
          return MAX_POWER;
        case 10: // GAME_LIST
          return GAME_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INPUTSYNCSENDMSGTIME_ISSET_ID = 0;
  private static final int __TOUCHHEARTSENDMSGTIME_ISSET_ID = 1;
  private static final int __MAXPOWER_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.DYN_INIT,_Fields.TRD_INIT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DYN_INIT, new org.apache.thrift.meta_data.FieldMetaData("dynInit", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.LoversDynInit.class)));
    tmpMap.put(_Fields.TRD_INIT, new org.apache.thrift.meta_data.FieldMetaData("trdInit", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.LoversTrdInit.class)));
    tmpMap.put(_Fields.INPUT_SYNC_SEND_MSG_TIME, new org.apache.thrift.meta_data.FieldMetaData("inputSyncSendMsgTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TOUCH_HEART_SEND_MSG_TIME, new org.apache.thrift.meta_data.FieldMetaData("touchHeartSendMsgTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_POWER, new org.apache.thrift.meta_data.FieldMetaData("maxPower", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.GAME_LIST, new org.apache.thrift.meta_data.FieldMetaData("gameList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.LoversGame.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCLoversModeInitMsg.class, metaDataMap);
  }

  public SCLoversModeInitMsg() {
  }

  public SCLoversModeInitMsg(
    int inputSyncSendMsgTime,
    int touchHeartSendMsgTime,
    short maxPower,
    List<com.ling9527.music.common.msg.auto.LoversGame> gameList)
  {
    this();
    this.inputSyncSendMsgTime = inputSyncSendMsgTime;
    setInputSyncSendMsgTimeIsSet(true);
    this.touchHeartSendMsgTime = touchHeartSendMsgTime;
    setTouchHeartSendMsgTimeIsSet(true);
    this.maxPower = maxPower;
    setMaxPowerIsSet(true);
    this.gameList = gameList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCLoversModeInitMsg(SCLoversModeInitMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetDynInit()) {
      this.dynInit = new com.ling9527.music.common.msg.auto.LoversDynInit(other.dynInit);
    }
    if (other.isSetTrdInit()) {
      this.trdInit = new com.ling9527.music.common.msg.auto.LoversTrdInit(other.trdInit);
    }
    this.inputSyncSendMsgTime = other.inputSyncSendMsgTime;
    this.touchHeartSendMsgTime = other.touchHeartSendMsgTime;
    this.maxPower = other.maxPower;
    if (other.isSetGameList()) {
      List<com.ling9527.music.common.msg.auto.LoversGame> __this__gameList = new ArrayList<com.ling9527.music.common.msg.auto.LoversGame>();
      for (com.ling9527.music.common.msg.auto.LoversGame other_element : other.gameList) {
        __this__gameList.add(new com.ling9527.music.common.msg.auto.LoversGame(other_element));
      }
      this.gameList = __this__gameList;
    }
  }

  public SCLoversModeInitMsg deepCopy() {
    return new SCLoversModeInitMsg(this);
  }

  @Override
  public void clear() {
    this.dynInit = null;
    this.trdInit = null;
    setInputSyncSendMsgTimeIsSet(false);
    this.inputSyncSendMsgTime = 0;
    setTouchHeartSendMsgTimeIsSet(false);
    this.touchHeartSendMsgTime = 0;
    setMaxPowerIsSet(false);
    this.maxPower = 0;
    this.gameList = null;
  }

  public com.ling9527.music.common.msg.auto.LoversDynInit getDynInit() {
    return this.dynInit;
  }

  public SCLoversModeInitMsg setDynInit(com.ling9527.music.common.msg.auto.LoversDynInit dynInit) {
    this.dynInit = dynInit;
    return this;
  }

  public void unsetDynInit() {
    this.dynInit = null;
  }

  /** Returns true if field dynInit is set (has been assigned a value) and false otherwise */
  public boolean isSetDynInit() {
    return this.dynInit != null;
  }

  public void setDynInitIsSet(boolean value) {
    if (!value) {
      this.dynInit = null;
    }
  }

  public com.ling9527.music.common.msg.auto.LoversTrdInit getTrdInit() {
    return this.trdInit;
  }

  public SCLoversModeInitMsg setTrdInit(com.ling9527.music.common.msg.auto.LoversTrdInit trdInit) {
    this.trdInit = trdInit;
    return this;
  }

  public void unsetTrdInit() {
    this.trdInit = null;
  }

  /** Returns true if field trdInit is set (has been assigned a value) and false otherwise */
  public boolean isSetTrdInit() {
    return this.trdInit != null;
  }

  public void setTrdInitIsSet(boolean value) {
    if (!value) {
      this.trdInit = null;
    }
  }

  public int getInputSyncSendMsgTime() {
    return this.inputSyncSendMsgTime;
  }

  public SCLoversModeInitMsg setInputSyncSendMsgTime(int inputSyncSendMsgTime) {
    this.inputSyncSendMsgTime = inputSyncSendMsgTime;
    setInputSyncSendMsgTimeIsSet(true);
    return this;
  }

  public void unsetInputSyncSendMsgTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INPUTSYNCSENDMSGTIME_ISSET_ID);
  }

  /** Returns true if field inputSyncSendMsgTime is set (has been assigned a value) and false otherwise */
  public boolean isSetInputSyncSendMsgTime() {
    return EncodingUtils.testBit(__isset_bitfield, __INPUTSYNCSENDMSGTIME_ISSET_ID);
  }

  public void setInputSyncSendMsgTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INPUTSYNCSENDMSGTIME_ISSET_ID, value);
  }

  public int getTouchHeartSendMsgTime() {
    return this.touchHeartSendMsgTime;
  }

  public SCLoversModeInitMsg setTouchHeartSendMsgTime(int touchHeartSendMsgTime) {
    this.touchHeartSendMsgTime = touchHeartSendMsgTime;
    setTouchHeartSendMsgTimeIsSet(true);
    return this;
  }

  public void unsetTouchHeartSendMsgTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOUCHHEARTSENDMSGTIME_ISSET_ID);
  }

  /** Returns true if field touchHeartSendMsgTime is set (has been assigned a value) and false otherwise */
  public boolean isSetTouchHeartSendMsgTime() {
    return EncodingUtils.testBit(__isset_bitfield, __TOUCHHEARTSENDMSGTIME_ISSET_ID);
  }

  public void setTouchHeartSendMsgTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOUCHHEARTSENDMSGTIME_ISSET_ID, value);
  }

  public short getMaxPower() {
    return this.maxPower;
  }

  public SCLoversModeInitMsg setMaxPower(short maxPower) {
    this.maxPower = maxPower;
    setMaxPowerIsSet(true);
    return this;
  }

  public void unsetMaxPower() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXPOWER_ISSET_ID);
  }

  /** Returns true if field maxPower is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxPower() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXPOWER_ISSET_ID);
  }

  public void setMaxPowerIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXPOWER_ISSET_ID, value);
  }

  public int getGameListSize() {
    return (this.gameList == null) ? 0 : this.gameList.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.LoversGame> getGameListIterator() {
    return (this.gameList == null) ? null : this.gameList.iterator();
  }

  public void addToGameList(com.ling9527.music.common.msg.auto.LoversGame elem) {
    if (this.gameList == null) {
      this.gameList = new ArrayList<com.ling9527.music.common.msg.auto.LoversGame>();
    }
    this.gameList.add(elem);
  }

  public List<com.ling9527.music.common.msg.auto.LoversGame> getGameList() {
    return this.gameList;
  }

  public SCLoversModeInitMsg setGameList(List<com.ling9527.music.common.msg.auto.LoversGame> gameList) {
    this.gameList = gameList;
    return this;
  }

  public void unsetGameList() {
    this.gameList = null;
  }

  /** Returns true if field gameList is set (has been assigned a value) and false otherwise */
  public boolean isSetGameList() {
    return this.gameList != null;
  }

  public void setGameListIsSet(boolean value) {
    if (!value) {
      this.gameList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DYN_INIT:
      if (value == null) {
        unsetDynInit();
      } else {
        setDynInit((com.ling9527.music.common.msg.auto.LoversDynInit)value);
      }
      break;

    case TRD_INIT:
      if (value == null) {
        unsetTrdInit();
      } else {
        setTrdInit((com.ling9527.music.common.msg.auto.LoversTrdInit)value);
      }
      break;

    case INPUT_SYNC_SEND_MSG_TIME:
      if (value == null) {
        unsetInputSyncSendMsgTime();
      } else {
        setInputSyncSendMsgTime((Integer)value);
      }
      break;

    case TOUCH_HEART_SEND_MSG_TIME:
      if (value == null) {
        unsetTouchHeartSendMsgTime();
      } else {
        setTouchHeartSendMsgTime((Integer)value);
      }
      break;

    case MAX_POWER:
      if (value == null) {
        unsetMaxPower();
      } else {
        setMaxPower((Short)value);
      }
      break;

    case GAME_LIST:
      if (value == null) {
        unsetGameList();
      } else {
        setGameList((List<com.ling9527.music.common.msg.auto.LoversGame>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DYN_INIT:
      return getDynInit();

    case TRD_INIT:
      return getTrdInit();

    case INPUT_SYNC_SEND_MSG_TIME:
      return Integer.valueOf(getInputSyncSendMsgTime());

    case TOUCH_HEART_SEND_MSG_TIME:
      return Integer.valueOf(getTouchHeartSendMsgTime());

    case MAX_POWER:
      return Short.valueOf(getMaxPower());

    case GAME_LIST:
      return getGameList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DYN_INIT:
      return isSetDynInit();
    case TRD_INIT:
      return isSetTrdInit();
    case INPUT_SYNC_SEND_MSG_TIME:
      return isSetInputSyncSendMsgTime();
    case TOUCH_HEART_SEND_MSG_TIME:
      return isSetTouchHeartSendMsgTime();
    case MAX_POWER:
      return isSetMaxPower();
    case GAME_LIST:
      return isSetGameList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCLoversModeInitMsg)
      return this.equals((SCLoversModeInitMsg)that);
    return false;
  }

  public boolean equals(SCLoversModeInitMsg that) {
    if (that == null)
      return false;

    boolean this_present_dynInit = true && this.isSetDynInit();
    boolean that_present_dynInit = true && that.isSetDynInit();
    if (this_present_dynInit || that_present_dynInit) {
      if (!(this_present_dynInit && that_present_dynInit))
        return false;
      if (!this.dynInit.equals(that.dynInit))
        return false;
    }

    boolean this_present_trdInit = true && this.isSetTrdInit();
    boolean that_present_trdInit = true && that.isSetTrdInit();
    if (this_present_trdInit || that_present_trdInit) {
      if (!(this_present_trdInit && that_present_trdInit))
        return false;
      if (!this.trdInit.equals(that.trdInit))
        return false;
    }

    boolean this_present_inputSyncSendMsgTime = true;
    boolean that_present_inputSyncSendMsgTime = true;
    if (this_present_inputSyncSendMsgTime || that_present_inputSyncSendMsgTime) {
      if (!(this_present_inputSyncSendMsgTime && that_present_inputSyncSendMsgTime))
        return false;
      if (this.inputSyncSendMsgTime != that.inputSyncSendMsgTime)
        return false;
    }

    boolean this_present_touchHeartSendMsgTime = true;
    boolean that_present_touchHeartSendMsgTime = true;
    if (this_present_touchHeartSendMsgTime || that_present_touchHeartSendMsgTime) {
      if (!(this_present_touchHeartSendMsgTime && that_present_touchHeartSendMsgTime))
        return false;
      if (this.touchHeartSendMsgTime != that.touchHeartSendMsgTime)
        return false;
    }

    boolean this_present_maxPower = true;
    boolean that_present_maxPower = true;
    if (this_present_maxPower || that_present_maxPower) {
      if (!(this_present_maxPower && that_present_maxPower))
        return false;
      if (this.maxPower != that.maxPower)
        return false;
    }

    boolean this_present_gameList = true && this.isSetGameList();
    boolean that_present_gameList = true && that.isSetGameList();
    if (this_present_gameList || that_present_gameList) {
      if (!(this_present_gameList && that_present_gameList))
        return false;
      if (!this.gameList.equals(that.gameList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCLoversModeInitMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCLoversModeInitMsg typedOther = (SCLoversModeInitMsg)other;

    lastComparison = Boolean.valueOf(isSetDynInit()).compareTo(typedOther.isSetDynInit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDynInit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dynInit, typedOther.dynInit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrdInit()).compareTo(typedOther.isSetTrdInit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrdInit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trdInit, typedOther.trdInit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInputSyncSendMsgTime()).compareTo(typedOther.isSetInputSyncSendMsgTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputSyncSendMsgTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inputSyncSendMsgTime, typedOther.inputSyncSendMsgTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTouchHeartSendMsgTime()).compareTo(typedOther.isSetTouchHeartSendMsgTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTouchHeartSendMsgTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.touchHeartSendMsgTime, typedOther.touchHeartSendMsgTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxPower()).compareTo(typedOther.isSetMaxPower());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxPower()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxPower, typedOther.maxPower);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGameList()).compareTo(typedOther.isSetGameList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gameList, typedOther.gameList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCLoversModeInitMsg(");
    boolean first = true;

    if (isSetDynInit()) {
      sb.append("dynInit:");
      if (this.dynInit == null) {
        sb.append("null");
      } else {
        sb.append(this.dynInit);
      }
      first = false;
    }
    if (isSetTrdInit()) {
      if (!first) sb.append(", ");
      sb.append("trdInit:");
      if (this.trdInit == null) {
        sb.append("null");
      } else {
        sb.append(this.trdInit);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("inputSyncSendMsgTime:");
    sb.append(this.inputSyncSendMsgTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("touchHeartSendMsgTime:");
    sb.append(this.touchHeartSendMsgTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxPower:");
    sb.append(this.maxPower);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gameList:");
    if (this.gameList == null) {
      sb.append("null");
    } else {
      sb.append(this.gameList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (dynInit != null) {
      dynInit.validate();
    }
    if (trdInit != null) {
      trdInit.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCLoversModeInitMsgStandardSchemeFactory implements SchemeFactory {
    public SCLoversModeInitMsgStandardScheme getScheme() {
      return new SCLoversModeInitMsgStandardScheme();
    }
  }

  private static class SCLoversModeInitMsgStandardScheme extends StandardScheme<SCLoversModeInitMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCLoversModeInitMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DYN_INIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.dynInit = new com.ling9527.music.common.msg.auto.LoversDynInit();
              struct.dynInit.read(iprot);
              struct.setDynInitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TRD_INIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.trdInit = new com.ling9527.music.common.msg.auto.LoversTrdInit();
              struct.trdInit.read(iprot);
              struct.setTrdInitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INPUT_SYNC_SEND_MSG_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.inputSyncSendMsgTime = iprot.readI32();
              struct.setInputSyncSendMsgTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TOUCH_HEART_SEND_MSG_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.touchHeartSendMsgTime = iprot.readI32();
              struct.setTouchHeartSendMsgTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MAX_POWER
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.maxPower = iprot.readI16();
              struct.setMaxPowerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // GAME_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list114 = iprot.readListBegin();
                struct.gameList = new ArrayList<com.ling9527.music.common.msg.auto.LoversGame>(_list114.size);
                for (int _i115 = 0; _i115 < _list114.size; ++_i115)
                {
                  com.ling9527.music.common.msg.auto.LoversGame _elem116; // required
                  _elem116 = new com.ling9527.music.common.msg.auto.LoversGame();
                  _elem116.read(iprot);
                  struct.gameList.add(_elem116);
                }
                iprot.readListEnd();
              }
              struct.setGameListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCLoversModeInitMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.dynInit != null) {
        if (struct.isSetDynInit()) {
          oprot.writeFieldBegin(DYN_INIT_FIELD_DESC);
          struct.dynInit.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.trdInit != null) {
        if (struct.isSetTrdInit()) {
          oprot.writeFieldBegin(TRD_INIT_FIELD_DESC);
          struct.trdInit.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(INPUT_SYNC_SEND_MSG_TIME_FIELD_DESC);
      oprot.writeI32(struct.inputSyncSendMsgTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOUCH_HEART_SEND_MSG_TIME_FIELD_DESC);
      oprot.writeI32(struct.touchHeartSendMsgTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_POWER_FIELD_DESC);
      oprot.writeI16(struct.maxPower);
      oprot.writeFieldEnd();
      if (struct.gameList != null) {
        oprot.writeFieldBegin(GAME_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.gameList.size()));
          for (com.ling9527.music.common.msg.auto.LoversGame _iter117 : struct.gameList)
          {
            _iter117.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCLoversModeInitMsgTupleSchemeFactory implements SchemeFactory {
    public SCLoversModeInitMsgTupleScheme getScheme() {
      return new SCLoversModeInitMsgTupleScheme();
    }
  }

  private static class SCLoversModeInitMsgTupleScheme extends TupleScheme<SCLoversModeInitMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCLoversModeInitMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetDynInit()) {
        optionals.set(0);
      }
      if (struct.isSetTrdInit()) {
        optionals.set(1);
      }
      if (struct.isSetInputSyncSendMsgTime()) {
        optionals.set(2);
      }
      if (struct.isSetTouchHeartSendMsgTime()) {
        optionals.set(3);
      }
      if (struct.isSetMaxPower()) {
        optionals.set(4);
      }
      if (struct.isSetGameList()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetDynInit()) {
        struct.dynInit.write(oprot);
      }
      if (struct.isSetTrdInit()) {
        struct.trdInit.write(oprot);
      }
      if (struct.isSetInputSyncSendMsgTime()) {
        oprot.writeI32(struct.inputSyncSendMsgTime);
      }
      if (struct.isSetTouchHeartSendMsgTime()) {
        oprot.writeI32(struct.touchHeartSendMsgTime);
      }
      if (struct.isSetMaxPower()) {
        oprot.writeI16(struct.maxPower);
      }
      if (struct.isSetGameList()) {
        {
          oprot.writeI32(struct.gameList.size());
          for (com.ling9527.music.common.msg.auto.LoversGame _iter118 : struct.gameList)
          {
            _iter118.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCLoversModeInitMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.dynInit = new com.ling9527.music.common.msg.auto.LoversDynInit();
        struct.dynInit.read(iprot);
        struct.setDynInitIsSet(true);
      }
      if (incoming.get(1)) {
        struct.trdInit = new com.ling9527.music.common.msg.auto.LoversTrdInit();
        struct.trdInit.read(iprot);
        struct.setTrdInitIsSet(true);
      }
      if (incoming.get(2)) {
        struct.inputSyncSendMsgTime = iprot.readI32();
        struct.setInputSyncSendMsgTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.touchHeartSendMsgTime = iprot.readI32();
        struct.setTouchHeartSendMsgTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.maxPower = iprot.readI16();
        struct.setMaxPowerIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list119 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.gameList = new ArrayList<com.ling9527.music.common.msg.auto.LoversGame>(_list119.size);
          for (int _i120 = 0; _i120 < _list119.size; ++_i120)
          {
            com.ling9527.music.common.msg.auto.LoversGame _elem121; // required
            _elem121 = new com.ling9527.music.common.msg.auto.LoversGame();
            _elem121.read(iprot);
            struct.gameList.add(_elem121);
          }
        }
        struct.setGameListIsSet(true);
      }
    }
  }

}

