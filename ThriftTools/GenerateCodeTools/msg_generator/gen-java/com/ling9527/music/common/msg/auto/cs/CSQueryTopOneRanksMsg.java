/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.cs;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 查询排行榜第一名信息
 */
public class CSQueryTopOneRanksMsg implements org.apache.thrift.TBase<CSQueryTopOneRanksMsg, CSQueryTopOneRanksMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CSQueryTopOneRanksMsg");

  private static final org.apache.thrift.protocol.TField RANK_TYPES_FIELD_DESC = new org.apache.thrift.protocol.TField("rankTypes", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField PANEL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("panelId", org.apache.thrift.protocol.TType.BYTE, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CSQueryTopOneRanksMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CSQueryTopOneRanksMsgTupleSchemeFactory());
  }

  /**
   * 排行榜类型
   */
  public List<Short> rankTypes; // required
  /**
   * 客户端记录所在面板
   */
  public byte panelId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 排行榜类型
     */
    RANK_TYPES((short)1, "rankTypes"),
    /**
     * 客户端记录所在面板
     */
    PANEL_ID((short)2, "panelId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RANK_TYPES
          return RANK_TYPES;
        case 2: // PANEL_ID
          return PANEL_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PANELID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RANK_TYPES, new org.apache.thrift.meta_data.FieldMetaData("rankTypes", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16))));
    tmpMap.put(_Fields.PANEL_ID, new org.apache.thrift.meta_data.FieldMetaData("panelId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CSQueryTopOneRanksMsg.class, metaDataMap);
  }

  public CSQueryTopOneRanksMsg() {
  }

  public CSQueryTopOneRanksMsg(
    List<Short> rankTypes,
    byte panelId)
  {
    this();
    this.rankTypes = rankTypes;
    this.panelId = panelId;
    setPanelIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CSQueryTopOneRanksMsg(CSQueryTopOneRanksMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetRankTypes()) {
      List<Short> __this__rankTypes = new ArrayList<Short>();
      for (Short other_element : other.rankTypes) {
        __this__rankTypes.add(other_element);
      }
      this.rankTypes = __this__rankTypes;
    }
    this.panelId = other.panelId;
  }

  public CSQueryTopOneRanksMsg deepCopy() {
    return new CSQueryTopOneRanksMsg(this);
  }

  @Override
  public void clear() {
    this.rankTypes = null;
    setPanelIdIsSet(false);
    this.panelId = 0;
  }

  public int getRankTypesSize() {
    return (this.rankTypes == null) ? 0 : this.rankTypes.size();
  }

  public java.util.Iterator<Short> getRankTypesIterator() {
    return (this.rankTypes == null) ? null : this.rankTypes.iterator();
  }

  public void addToRankTypes(short elem) {
    if (this.rankTypes == null) {
      this.rankTypes = new ArrayList<Short>();
    }
    this.rankTypes.add(elem);
  }

  /**
   * 排行榜类型
   */
  public List<Short> getRankTypes() {
    return this.rankTypes;
  }

  /**
   * 排行榜类型
   */
  public CSQueryTopOneRanksMsg setRankTypes(List<Short> rankTypes) {
    this.rankTypes = rankTypes;
    return this;
  }

  public void unsetRankTypes() {
    this.rankTypes = null;
  }

  /** Returns true if field rankTypes is set (has been assigned a value) and false otherwise */
  public boolean isSetRankTypes() {
    return this.rankTypes != null;
  }

  public void setRankTypesIsSet(boolean value) {
    if (!value) {
      this.rankTypes = null;
    }
  }

  /**
   * 客户端记录所在面板
   */
  public byte getPanelId() {
    return this.panelId;
  }

  /**
   * 客户端记录所在面板
   */
  public CSQueryTopOneRanksMsg setPanelId(byte panelId) {
    this.panelId = panelId;
    setPanelIdIsSet(true);
    return this;
  }

  public void unsetPanelId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PANELID_ISSET_ID);
  }

  /** Returns true if field panelId is set (has been assigned a value) and false otherwise */
  public boolean isSetPanelId() {
    return EncodingUtils.testBit(__isset_bitfield, __PANELID_ISSET_ID);
  }

  public void setPanelIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PANELID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RANK_TYPES:
      if (value == null) {
        unsetRankTypes();
      } else {
        setRankTypes((List<Short>)value);
      }
      break;

    case PANEL_ID:
      if (value == null) {
        unsetPanelId();
      } else {
        setPanelId((Byte)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RANK_TYPES:
      return getRankTypes();

    case PANEL_ID:
      return Byte.valueOf(getPanelId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RANK_TYPES:
      return isSetRankTypes();
    case PANEL_ID:
      return isSetPanelId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CSQueryTopOneRanksMsg)
      return this.equals((CSQueryTopOneRanksMsg)that);
    return false;
  }

  public boolean equals(CSQueryTopOneRanksMsg that) {
    if (that == null)
      return false;

    boolean this_present_rankTypes = true && this.isSetRankTypes();
    boolean that_present_rankTypes = true && that.isSetRankTypes();
    if (this_present_rankTypes || that_present_rankTypes) {
      if (!(this_present_rankTypes && that_present_rankTypes))
        return false;
      if (!this.rankTypes.equals(that.rankTypes))
        return false;
    }

    boolean this_present_panelId = true;
    boolean that_present_panelId = true;
    if (this_present_panelId || that_present_panelId) {
      if (!(this_present_panelId && that_present_panelId))
        return false;
      if (this.panelId != that.panelId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(CSQueryTopOneRanksMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CSQueryTopOneRanksMsg typedOther = (CSQueryTopOneRanksMsg)other;

    lastComparison = Boolean.valueOf(isSetRankTypes()).compareTo(typedOther.isSetRankTypes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRankTypes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rankTypes, typedOther.rankTypes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPanelId()).compareTo(typedOther.isSetPanelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPanelId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.panelId, typedOther.panelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CSQueryTopOneRanksMsg(");
    boolean first = true;

    sb.append("rankTypes:");
    if (this.rankTypes == null) {
      sb.append("null");
    } else {
      sb.append(this.rankTypes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("panelId:");
    sb.append(this.panelId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CSQueryTopOneRanksMsgStandardSchemeFactory implements SchemeFactory {
    public CSQueryTopOneRanksMsgStandardScheme getScheme() {
      return new CSQueryTopOneRanksMsgStandardScheme();
    }
  }

  private static class CSQueryTopOneRanksMsgStandardScheme extends StandardScheme<CSQueryTopOneRanksMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CSQueryTopOneRanksMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RANK_TYPES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.rankTypes = new ArrayList<Short>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  short _elem2; // required
                  _elem2 = iprot.readI16();
                  struct.rankTypes.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setRankTypesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PANEL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.panelId = iprot.readByte();
              struct.setPanelIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CSQueryTopOneRanksMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.rankTypes != null) {
        oprot.writeFieldBegin(RANK_TYPES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, struct.rankTypes.size()));
          for (short _iter3 : struct.rankTypes)
          {
            oprot.writeI16(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PANEL_ID_FIELD_DESC);
      oprot.writeByte(struct.panelId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CSQueryTopOneRanksMsgTupleSchemeFactory implements SchemeFactory {
    public CSQueryTopOneRanksMsgTupleScheme getScheme() {
      return new CSQueryTopOneRanksMsgTupleScheme();
    }
  }

  private static class CSQueryTopOneRanksMsgTupleScheme extends TupleScheme<CSQueryTopOneRanksMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CSQueryTopOneRanksMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetRankTypes()) {
        optionals.set(0);
      }
      if (struct.isSetPanelId()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetRankTypes()) {
        {
          oprot.writeI32(struct.rankTypes.size());
          for (short _iter4 : struct.rankTypes)
          {
            oprot.writeI16(_iter4);
          }
        }
      }
      if (struct.isSetPanelId()) {
        oprot.writeByte(struct.panelId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CSQueryTopOneRanksMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, iprot.readI32());
          struct.rankTypes = new ArrayList<Short>(_list5.size);
          for (int _i6 = 0; _i6 < _list5.size; ++_i6)
          {
            short _elem7; // required
            _elem7 = iprot.readI16();
            struct.rankTypes.add(_elem7);
          }
        }
        struct.setRankTypesIsSet(true);
      }
      if (incoming.get(1)) {
        struct.panelId = iprot.readByte();
        struct.setPanelIdIsSet(true);
      }
    }
  }

}

