/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 通告通关信息
 */
public class AnnouncePassInfo implements org.apache.thrift.TBase<AnnouncePassInfo, AnnouncePassInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AnnouncePassInfo");

  private static final org.apache.thrift.protocol.TField ANNOUNCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("announceId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ANNOUNCE_INDEX_FIELD_DESC = new org.apache.thrift.protocol.TField("announceIndex", org.apache.thrift.protocol.TType.BYTE, (short)2);
  private static final org.apache.thrift.protocol.TField PASS_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("passRank", org.apache.thrift.protocol.TType.BYTE, (short)3);
  private static final org.apache.thrift.protocol.TField COND_RESULT_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("condResultList", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField PRIZE_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("prizeInfos", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField EXTRA_PRIZE_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("extraPrizeInfos", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField CHEER_VAL_RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("cheerValResults", org.apache.thrift.protocol.TType.LIST, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AnnouncePassInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AnnouncePassInfoTupleSchemeFactory());
  }

  /**
   * 通告id
   */
  public int announceId; // required
  /**
   * 通告索引
   */
  public byte announceIndex; // required
  /**
   * 通关等级 0-未通关 1-3 s, ss, sss
   */
  public byte passRank; // required
  /**
   * 通告条件信息
   */
  public List<com.ling9527.music.common.msg.auto.PassCheerCondResult> condResultList; // required
  /**
   * 奖励
   */
  public com.ling9527.music.common.msg.auto.PrizeInfo prizeInfos; // optional
  /**
   * 额外奖励
   */
  public com.ling9527.music.common.msg.auto.PrizeInfo extraPrizeInfos; // optional
  /**
   * 每个成员的欢呼值结果
   */
  public List<com.ling9527.music.common.msg.auto.DanceCheerValResult> cheerValResults; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 通告id
     */
    ANNOUNCE_ID((short)1, "announceId"),
    /**
     * 通告索引
     */
    ANNOUNCE_INDEX((short)2, "announceIndex"),
    /**
     * 通关等级 0-未通关 1-3 s, ss, sss
     */
    PASS_RANK((short)3, "passRank"),
    /**
     * 通告条件信息
     */
    COND_RESULT_LIST((short)4, "condResultList"),
    /**
     * 奖励
     */
    PRIZE_INFOS((short)5, "prizeInfos"),
    /**
     * 额外奖励
     */
    EXTRA_PRIZE_INFOS((short)6, "extraPrizeInfos"),
    /**
     * 每个成员的欢呼值结果
     */
    CHEER_VAL_RESULTS((short)7, "cheerValResults");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ANNOUNCE_ID
          return ANNOUNCE_ID;
        case 2: // ANNOUNCE_INDEX
          return ANNOUNCE_INDEX;
        case 3: // PASS_RANK
          return PASS_RANK;
        case 4: // COND_RESULT_LIST
          return COND_RESULT_LIST;
        case 5: // PRIZE_INFOS
          return PRIZE_INFOS;
        case 6: // EXTRA_PRIZE_INFOS
          return EXTRA_PRIZE_INFOS;
        case 7: // CHEER_VAL_RESULTS
          return CHEER_VAL_RESULTS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ANNOUNCEID_ISSET_ID = 0;
  private static final int __ANNOUNCEINDEX_ISSET_ID = 1;
  private static final int __PASSRANK_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.PRIZE_INFOS,_Fields.EXTRA_PRIZE_INFOS,_Fields.CHEER_VAL_RESULTS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ANNOUNCE_ID, new org.apache.thrift.meta_data.FieldMetaData("announceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ANNOUNCE_INDEX, new org.apache.thrift.meta_data.FieldMetaData("announceIndex", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.PASS_RANK, new org.apache.thrift.meta_data.FieldMetaData("passRank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.COND_RESULT_LIST, new org.apache.thrift.meta_data.FieldMetaData("condResultList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.PassCheerCondResult.class))));
    tmpMap.put(_Fields.PRIZE_INFOS, new org.apache.thrift.meta_data.FieldMetaData("prizeInfos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.PrizeInfo.class)));
    tmpMap.put(_Fields.EXTRA_PRIZE_INFOS, new org.apache.thrift.meta_data.FieldMetaData("extraPrizeInfos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.PrizeInfo.class)));
    tmpMap.put(_Fields.CHEER_VAL_RESULTS, new org.apache.thrift.meta_data.FieldMetaData("cheerValResults", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.DanceCheerValResult.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AnnouncePassInfo.class, metaDataMap);
  }

  public AnnouncePassInfo() {
  }

  public AnnouncePassInfo(
    int announceId,
    byte announceIndex,
    byte passRank,
    List<com.ling9527.music.common.msg.auto.PassCheerCondResult> condResultList)
  {
    this();
    this.announceId = announceId;
    setAnnounceIdIsSet(true);
    this.announceIndex = announceIndex;
    setAnnounceIndexIsSet(true);
    this.passRank = passRank;
    setPassRankIsSet(true);
    this.condResultList = condResultList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AnnouncePassInfo(AnnouncePassInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.announceId = other.announceId;
    this.announceIndex = other.announceIndex;
    this.passRank = other.passRank;
    if (other.isSetCondResultList()) {
      List<com.ling9527.music.common.msg.auto.PassCheerCondResult> __this__condResultList = new ArrayList<com.ling9527.music.common.msg.auto.PassCheerCondResult>();
      for (com.ling9527.music.common.msg.auto.PassCheerCondResult other_element : other.condResultList) {
        __this__condResultList.add(new com.ling9527.music.common.msg.auto.PassCheerCondResult(other_element));
      }
      this.condResultList = __this__condResultList;
    }
    if (other.isSetPrizeInfos()) {
      this.prizeInfos = new com.ling9527.music.common.msg.auto.PrizeInfo(other.prizeInfos);
    }
    if (other.isSetExtraPrizeInfos()) {
      this.extraPrizeInfos = new com.ling9527.music.common.msg.auto.PrizeInfo(other.extraPrizeInfos);
    }
    if (other.isSetCheerValResults()) {
      List<com.ling9527.music.common.msg.auto.DanceCheerValResult> __this__cheerValResults = new ArrayList<com.ling9527.music.common.msg.auto.DanceCheerValResult>();
      for (com.ling9527.music.common.msg.auto.DanceCheerValResult other_element : other.cheerValResults) {
        __this__cheerValResults.add(new com.ling9527.music.common.msg.auto.DanceCheerValResult(other_element));
      }
      this.cheerValResults = __this__cheerValResults;
    }
  }

  public AnnouncePassInfo deepCopy() {
    return new AnnouncePassInfo(this);
  }

  @Override
  public void clear() {
    setAnnounceIdIsSet(false);
    this.announceId = 0;
    setAnnounceIndexIsSet(false);
    this.announceIndex = 0;
    setPassRankIsSet(false);
    this.passRank = 0;
    this.condResultList = null;
    this.prizeInfos = null;
    this.extraPrizeInfos = null;
    this.cheerValResults = null;
  }

  /**
   * 通告id
   */
  public int getAnnounceId() {
    return this.announceId;
  }

  /**
   * 通告id
   */
  public AnnouncePassInfo setAnnounceId(int announceId) {
    this.announceId = announceId;
    setAnnounceIdIsSet(true);
    return this;
  }

  public void unsetAnnounceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ANNOUNCEID_ISSET_ID);
  }

  /** Returns true if field announceId is set (has been assigned a value) and false otherwise */
  public boolean isSetAnnounceId() {
    return EncodingUtils.testBit(__isset_bitfield, __ANNOUNCEID_ISSET_ID);
  }

  public void setAnnounceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ANNOUNCEID_ISSET_ID, value);
  }

  /**
   * 通告索引
   */
  public byte getAnnounceIndex() {
    return this.announceIndex;
  }

  /**
   * 通告索引
   */
  public AnnouncePassInfo setAnnounceIndex(byte announceIndex) {
    this.announceIndex = announceIndex;
    setAnnounceIndexIsSet(true);
    return this;
  }

  public void unsetAnnounceIndex() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ANNOUNCEINDEX_ISSET_ID);
  }

  /** Returns true if field announceIndex is set (has been assigned a value) and false otherwise */
  public boolean isSetAnnounceIndex() {
    return EncodingUtils.testBit(__isset_bitfield, __ANNOUNCEINDEX_ISSET_ID);
  }

  public void setAnnounceIndexIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ANNOUNCEINDEX_ISSET_ID, value);
  }

  /**
   * 通关等级 0-未通关 1-3 s, ss, sss
   */
  public byte getPassRank() {
    return this.passRank;
  }

  /**
   * 通关等级 0-未通关 1-3 s, ss, sss
   */
  public AnnouncePassInfo setPassRank(byte passRank) {
    this.passRank = passRank;
    setPassRankIsSet(true);
    return this;
  }

  public void unsetPassRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PASSRANK_ISSET_ID);
  }

  /** Returns true if field passRank is set (has been assigned a value) and false otherwise */
  public boolean isSetPassRank() {
    return EncodingUtils.testBit(__isset_bitfield, __PASSRANK_ISSET_ID);
  }

  public void setPassRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PASSRANK_ISSET_ID, value);
  }

  public int getCondResultListSize() {
    return (this.condResultList == null) ? 0 : this.condResultList.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.PassCheerCondResult> getCondResultListIterator() {
    return (this.condResultList == null) ? null : this.condResultList.iterator();
  }

  public void addToCondResultList(com.ling9527.music.common.msg.auto.PassCheerCondResult elem) {
    if (this.condResultList == null) {
      this.condResultList = new ArrayList<com.ling9527.music.common.msg.auto.PassCheerCondResult>();
    }
    this.condResultList.add(elem);
  }

  /**
   * 通告条件信息
   */
  public List<com.ling9527.music.common.msg.auto.PassCheerCondResult> getCondResultList() {
    return this.condResultList;
  }

  /**
   * 通告条件信息
   */
  public AnnouncePassInfo setCondResultList(List<com.ling9527.music.common.msg.auto.PassCheerCondResult> condResultList) {
    this.condResultList = condResultList;
    return this;
  }

  public void unsetCondResultList() {
    this.condResultList = null;
  }

  /** Returns true if field condResultList is set (has been assigned a value) and false otherwise */
  public boolean isSetCondResultList() {
    return this.condResultList != null;
  }

  public void setCondResultListIsSet(boolean value) {
    if (!value) {
      this.condResultList = null;
    }
  }

  /**
   * 奖励
   */
  public com.ling9527.music.common.msg.auto.PrizeInfo getPrizeInfos() {
    return this.prizeInfos;
  }

  /**
   * 奖励
   */
  public AnnouncePassInfo setPrizeInfos(com.ling9527.music.common.msg.auto.PrizeInfo prizeInfos) {
    this.prizeInfos = prizeInfos;
    return this;
  }

  public void unsetPrizeInfos() {
    this.prizeInfos = null;
  }

  /** Returns true if field prizeInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetPrizeInfos() {
    return this.prizeInfos != null;
  }

  public void setPrizeInfosIsSet(boolean value) {
    if (!value) {
      this.prizeInfos = null;
    }
  }

  /**
   * 额外奖励
   */
  public com.ling9527.music.common.msg.auto.PrizeInfo getExtraPrizeInfos() {
    return this.extraPrizeInfos;
  }

  /**
   * 额外奖励
   */
  public AnnouncePassInfo setExtraPrizeInfos(com.ling9527.music.common.msg.auto.PrizeInfo extraPrizeInfos) {
    this.extraPrizeInfos = extraPrizeInfos;
    return this;
  }

  public void unsetExtraPrizeInfos() {
    this.extraPrizeInfos = null;
  }

  /** Returns true if field extraPrizeInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraPrizeInfos() {
    return this.extraPrizeInfos != null;
  }

  public void setExtraPrizeInfosIsSet(boolean value) {
    if (!value) {
      this.extraPrizeInfos = null;
    }
  }

  public int getCheerValResultsSize() {
    return (this.cheerValResults == null) ? 0 : this.cheerValResults.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.DanceCheerValResult> getCheerValResultsIterator() {
    return (this.cheerValResults == null) ? null : this.cheerValResults.iterator();
  }

  public void addToCheerValResults(com.ling9527.music.common.msg.auto.DanceCheerValResult elem) {
    if (this.cheerValResults == null) {
      this.cheerValResults = new ArrayList<com.ling9527.music.common.msg.auto.DanceCheerValResult>();
    }
    this.cheerValResults.add(elem);
  }

  /**
   * 每个成员的欢呼值结果
   */
  public List<com.ling9527.music.common.msg.auto.DanceCheerValResult> getCheerValResults() {
    return this.cheerValResults;
  }

  /**
   * 每个成员的欢呼值结果
   */
  public AnnouncePassInfo setCheerValResults(List<com.ling9527.music.common.msg.auto.DanceCheerValResult> cheerValResults) {
    this.cheerValResults = cheerValResults;
    return this;
  }

  public void unsetCheerValResults() {
    this.cheerValResults = null;
  }

  /** Returns true if field cheerValResults is set (has been assigned a value) and false otherwise */
  public boolean isSetCheerValResults() {
    return this.cheerValResults != null;
  }

  public void setCheerValResultsIsSet(boolean value) {
    if (!value) {
      this.cheerValResults = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ANNOUNCE_ID:
      if (value == null) {
        unsetAnnounceId();
      } else {
        setAnnounceId((Integer)value);
      }
      break;

    case ANNOUNCE_INDEX:
      if (value == null) {
        unsetAnnounceIndex();
      } else {
        setAnnounceIndex((Byte)value);
      }
      break;

    case PASS_RANK:
      if (value == null) {
        unsetPassRank();
      } else {
        setPassRank((Byte)value);
      }
      break;

    case COND_RESULT_LIST:
      if (value == null) {
        unsetCondResultList();
      } else {
        setCondResultList((List<com.ling9527.music.common.msg.auto.PassCheerCondResult>)value);
      }
      break;

    case PRIZE_INFOS:
      if (value == null) {
        unsetPrizeInfos();
      } else {
        setPrizeInfos((com.ling9527.music.common.msg.auto.PrizeInfo)value);
      }
      break;

    case EXTRA_PRIZE_INFOS:
      if (value == null) {
        unsetExtraPrizeInfos();
      } else {
        setExtraPrizeInfos((com.ling9527.music.common.msg.auto.PrizeInfo)value);
      }
      break;

    case CHEER_VAL_RESULTS:
      if (value == null) {
        unsetCheerValResults();
      } else {
        setCheerValResults((List<com.ling9527.music.common.msg.auto.DanceCheerValResult>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ANNOUNCE_ID:
      return Integer.valueOf(getAnnounceId());

    case ANNOUNCE_INDEX:
      return Byte.valueOf(getAnnounceIndex());

    case PASS_RANK:
      return Byte.valueOf(getPassRank());

    case COND_RESULT_LIST:
      return getCondResultList();

    case PRIZE_INFOS:
      return getPrizeInfos();

    case EXTRA_PRIZE_INFOS:
      return getExtraPrizeInfos();

    case CHEER_VAL_RESULTS:
      return getCheerValResults();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ANNOUNCE_ID:
      return isSetAnnounceId();
    case ANNOUNCE_INDEX:
      return isSetAnnounceIndex();
    case PASS_RANK:
      return isSetPassRank();
    case COND_RESULT_LIST:
      return isSetCondResultList();
    case PRIZE_INFOS:
      return isSetPrizeInfos();
    case EXTRA_PRIZE_INFOS:
      return isSetExtraPrizeInfos();
    case CHEER_VAL_RESULTS:
      return isSetCheerValResults();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AnnouncePassInfo)
      return this.equals((AnnouncePassInfo)that);
    return false;
  }

  public boolean equals(AnnouncePassInfo that) {
    if (that == null)
      return false;

    boolean this_present_announceId = true;
    boolean that_present_announceId = true;
    if (this_present_announceId || that_present_announceId) {
      if (!(this_present_announceId && that_present_announceId))
        return false;
      if (this.announceId != that.announceId)
        return false;
    }

    boolean this_present_announceIndex = true;
    boolean that_present_announceIndex = true;
    if (this_present_announceIndex || that_present_announceIndex) {
      if (!(this_present_announceIndex && that_present_announceIndex))
        return false;
      if (this.announceIndex != that.announceIndex)
        return false;
    }

    boolean this_present_passRank = true;
    boolean that_present_passRank = true;
    if (this_present_passRank || that_present_passRank) {
      if (!(this_present_passRank && that_present_passRank))
        return false;
      if (this.passRank != that.passRank)
        return false;
    }

    boolean this_present_condResultList = true && this.isSetCondResultList();
    boolean that_present_condResultList = true && that.isSetCondResultList();
    if (this_present_condResultList || that_present_condResultList) {
      if (!(this_present_condResultList && that_present_condResultList))
        return false;
      if (!this.condResultList.equals(that.condResultList))
        return false;
    }

    boolean this_present_prizeInfos = true && this.isSetPrizeInfos();
    boolean that_present_prizeInfos = true && that.isSetPrizeInfos();
    if (this_present_prizeInfos || that_present_prizeInfos) {
      if (!(this_present_prizeInfos && that_present_prizeInfos))
        return false;
      if (!this.prizeInfos.equals(that.prizeInfos))
        return false;
    }

    boolean this_present_extraPrizeInfos = true && this.isSetExtraPrizeInfos();
    boolean that_present_extraPrizeInfos = true && that.isSetExtraPrizeInfos();
    if (this_present_extraPrizeInfos || that_present_extraPrizeInfos) {
      if (!(this_present_extraPrizeInfos && that_present_extraPrizeInfos))
        return false;
      if (!this.extraPrizeInfos.equals(that.extraPrizeInfos))
        return false;
    }

    boolean this_present_cheerValResults = true && this.isSetCheerValResults();
    boolean that_present_cheerValResults = true && that.isSetCheerValResults();
    if (this_present_cheerValResults || that_present_cheerValResults) {
      if (!(this_present_cheerValResults && that_present_cheerValResults))
        return false;
      if (!this.cheerValResults.equals(that.cheerValResults))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AnnouncePassInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AnnouncePassInfo typedOther = (AnnouncePassInfo)other;

    lastComparison = Boolean.valueOf(isSetAnnounceId()).compareTo(typedOther.isSetAnnounceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnnounceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.announceId, typedOther.announceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAnnounceIndex()).compareTo(typedOther.isSetAnnounceIndex());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnnounceIndex()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.announceIndex, typedOther.announceIndex);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassRank()).compareTo(typedOther.isSetPassRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.passRank, typedOther.passRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondResultList()).compareTo(typedOther.isSetCondResultList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondResultList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condResultList, typedOther.condResultList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrizeInfos()).compareTo(typedOther.isSetPrizeInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrizeInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.prizeInfos, typedOther.prizeInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraPrizeInfos()).compareTo(typedOther.isSetExtraPrizeInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraPrizeInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraPrizeInfos, typedOther.extraPrizeInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCheerValResults()).compareTo(typedOther.isSetCheerValResults());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCheerValResults()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cheerValResults, typedOther.cheerValResults);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AnnouncePassInfo(");
    boolean first = true;

    sb.append("announceId:");
    sb.append(this.announceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("announceIndex:");
    sb.append(this.announceIndex);
    first = false;
    if (!first) sb.append(", ");
    sb.append("passRank:");
    sb.append(this.passRank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("condResultList:");
    if (this.condResultList == null) {
      sb.append("null");
    } else {
      sb.append(this.condResultList);
    }
    first = false;
    if (isSetPrizeInfos()) {
      if (!first) sb.append(", ");
      sb.append("prizeInfos:");
      if (this.prizeInfos == null) {
        sb.append("null");
      } else {
        sb.append(this.prizeInfos);
      }
      first = false;
    }
    if (isSetExtraPrizeInfos()) {
      if (!first) sb.append(", ");
      sb.append("extraPrizeInfos:");
      if (this.extraPrizeInfos == null) {
        sb.append("null");
      } else {
        sb.append(this.extraPrizeInfos);
      }
      first = false;
    }
    if (isSetCheerValResults()) {
      if (!first) sb.append(", ");
      sb.append("cheerValResults:");
      if (this.cheerValResults == null) {
        sb.append("null");
      } else {
        sb.append(this.cheerValResults);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (prizeInfos != null) {
      prizeInfos.validate();
    }
    if (extraPrizeInfos != null) {
      extraPrizeInfos.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AnnouncePassInfoStandardSchemeFactory implements SchemeFactory {
    public AnnouncePassInfoStandardScheme getScheme() {
      return new AnnouncePassInfoStandardScheme();
    }
  }

  private static class AnnouncePassInfoStandardScheme extends StandardScheme<AnnouncePassInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AnnouncePassInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ANNOUNCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.announceId = iprot.readI32();
              struct.setAnnounceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ANNOUNCE_INDEX
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.announceIndex = iprot.readByte();
              struct.setAnnounceIndexIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PASS_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.passRank = iprot.readByte();
              struct.setPassRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COND_RESULT_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.condResultList = new ArrayList<com.ling9527.music.common.msg.auto.PassCheerCondResult>(_list24.size);
                for (int _i25 = 0; _i25 < _list24.size; ++_i25)
                {
                  com.ling9527.music.common.msg.auto.PassCheerCondResult _elem26; // required
                  _elem26 = new com.ling9527.music.common.msg.auto.PassCheerCondResult();
                  _elem26.read(iprot);
                  struct.condResultList.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setCondResultListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRIZE_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.prizeInfos = new com.ling9527.music.common.msg.auto.PrizeInfo();
              struct.prizeInfos.read(iprot);
              struct.setPrizeInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EXTRA_PRIZE_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.extraPrizeInfos = new com.ling9527.music.common.msg.auto.PrizeInfo();
              struct.extraPrizeInfos.read(iprot);
              struct.setExtraPrizeInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CHEER_VAL_RESULTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list27 = iprot.readListBegin();
                struct.cheerValResults = new ArrayList<com.ling9527.music.common.msg.auto.DanceCheerValResult>(_list27.size);
                for (int _i28 = 0; _i28 < _list27.size; ++_i28)
                {
                  com.ling9527.music.common.msg.auto.DanceCheerValResult _elem29; // required
                  _elem29 = new com.ling9527.music.common.msg.auto.DanceCheerValResult();
                  _elem29.read(iprot);
                  struct.cheerValResults.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setCheerValResultsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AnnouncePassInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ANNOUNCE_ID_FIELD_DESC);
      oprot.writeI32(struct.announceId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ANNOUNCE_INDEX_FIELD_DESC);
      oprot.writeByte(struct.announceIndex);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PASS_RANK_FIELD_DESC);
      oprot.writeByte(struct.passRank);
      oprot.writeFieldEnd();
      if (struct.condResultList != null) {
        oprot.writeFieldBegin(COND_RESULT_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.condResultList.size()));
          for (com.ling9527.music.common.msg.auto.PassCheerCondResult _iter30 : struct.condResultList)
          {
            _iter30.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.prizeInfos != null) {
        if (struct.isSetPrizeInfos()) {
          oprot.writeFieldBegin(PRIZE_INFOS_FIELD_DESC);
          struct.prizeInfos.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraPrizeInfos != null) {
        if (struct.isSetExtraPrizeInfos()) {
          oprot.writeFieldBegin(EXTRA_PRIZE_INFOS_FIELD_DESC);
          struct.extraPrizeInfos.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cheerValResults != null) {
        if (struct.isSetCheerValResults()) {
          oprot.writeFieldBegin(CHEER_VAL_RESULTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.cheerValResults.size()));
            for (com.ling9527.music.common.msg.auto.DanceCheerValResult _iter31 : struct.cheerValResults)
            {
              _iter31.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AnnouncePassInfoTupleSchemeFactory implements SchemeFactory {
    public AnnouncePassInfoTupleScheme getScheme() {
      return new AnnouncePassInfoTupleScheme();
    }
  }

  private static class AnnouncePassInfoTupleScheme extends TupleScheme<AnnouncePassInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AnnouncePassInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAnnounceId()) {
        optionals.set(0);
      }
      if (struct.isSetAnnounceIndex()) {
        optionals.set(1);
      }
      if (struct.isSetPassRank()) {
        optionals.set(2);
      }
      if (struct.isSetCondResultList()) {
        optionals.set(3);
      }
      if (struct.isSetPrizeInfos()) {
        optionals.set(4);
      }
      if (struct.isSetExtraPrizeInfos()) {
        optionals.set(5);
      }
      if (struct.isSetCheerValResults()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetAnnounceId()) {
        oprot.writeI32(struct.announceId);
      }
      if (struct.isSetAnnounceIndex()) {
        oprot.writeByte(struct.announceIndex);
      }
      if (struct.isSetPassRank()) {
        oprot.writeByte(struct.passRank);
      }
      if (struct.isSetCondResultList()) {
        {
          oprot.writeI32(struct.condResultList.size());
          for (com.ling9527.music.common.msg.auto.PassCheerCondResult _iter32 : struct.condResultList)
          {
            _iter32.write(oprot);
          }
        }
      }
      if (struct.isSetPrizeInfos()) {
        struct.prizeInfos.write(oprot);
      }
      if (struct.isSetExtraPrizeInfos()) {
        struct.extraPrizeInfos.write(oprot);
      }
      if (struct.isSetCheerValResults()) {
        {
          oprot.writeI32(struct.cheerValResults.size());
          for (com.ling9527.music.common.msg.auto.DanceCheerValResult _iter33 : struct.cheerValResults)
          {
            _iter33.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AnnouncePassInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.announceId = iprot.readI32();
        struct.setAnnounceIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.announceIndex = iprot.readByte();
        struct.setAnnounceIndexIsSet(true);
      }
      if (incoming.get(2)) {
        struct.passRank = iprot.readByte();
        struct.setPassRankIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list34 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.condResultList = new ArrayList<com.ling9527.music.common.msg.auto.PassCheerCondResult>(_list34.size);
          for (int _i35 = 0; _i35 < _list34.size; ++_i35)
          {
            com.ling9527.music.common.msg.auto.PassCheerCondResult _elem36; // required
            _elem36 = new com.ling9527.music.common.msg.auto.PassCheerCondResult();
            _elem36.read(iprot);
            struct.condResultList.add(_elem36);
          }
        }
        struct.setCondResultListIsSet(true);
      }
      if (incoming.get(4)) {
        struct.prizeInfos = new com.ling9527.music.common.msg.auto.PrizeInfo();
        struct.prizeInfos.read(iprot);
        struct.setPrizeInfosIsSet(true);
      }
      if (incoming.get(5)) {
        struct.extraPrizeInfos = new com.ling9527.music.common.msg.auto.PrizeInfo();
        struct.extraPrizeInfos.read(iprot);
        struct.setExtraPrizeInfosIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.cheerValResults = new ArrayList<com.ling9527.music.common.msg.auto.DanceCheerValResult>(_list37.size);
          for (int _i38 = 0; _i38 < _list37.size; ++_i38)
          {
            com.ling9527.music.common.msg.auto.DanceCheerValResult _elem39; // required
            _elem39 = new com.ling9527.music.common.msg.auto.DanceCheerValResult();
            _elem39.read(iprot);
            struct.cheerValResults.add(_elem39);
          }
        }
        struct.setCheerValResultsIsSet(true);
      }
    }
  }

}

