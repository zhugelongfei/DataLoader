/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TimingLottery implements org.apache.thrift.TBase<TimingLottery, TimingLottery._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TimingLottery");

  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MALE_ITEM_FIELD_DESC = new org.apache.thrift.protocol.TField("maleItem", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField FEMALE_ITEM_FIELD_DESC = new org.apache.thrift.protocol.TField("femaleItem", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("startDate", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("endDate", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TIME_RANGE_FIELD_DESC = new org.apache.thrift.protocol.TField("timeRange", org.apache.thrift.protocol.TType.LIST, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TimingLotteryStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TimingLotteryTupleSchemeFactory());
  }

  /**
   * 
   * @see com.ling9527.music.common.msg.auto.LotteryType
   */
  public com.ling9527.music.common.msg.auto.LotteryType type; // required
  public int maleItem; // required
  public int femaleItem; // required
  public String startDate; // required
  public String endDate; // required
  public List<com.ling9527.music.common.msg.auto.LimitSaleTime> timeRange; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see com.ling9527.music.common.msg.auto.LotteryType
     */
    TYPE((short)1, "type"),
    MALE_ITEM((short)2, "maleItem"),
    FEMALE_ITEM((short)3, "femaleItem"),
    START_DATE((short)4, "startDate"),
    END_DATE((short)5, "endDate"),
    TIME_RANGE((short)6, "timeRange");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TYPE
          return TYPE;
        case 2: // MALE_ITEM
          return MALE_ITEM;
        case 3: // FEMALE_ITEM
          return FEMALE_ITEM;
        case 4: // START_DATE
          return START_DATE;
        case 5: // END_DATE
          return END_DATE;
        case 6: // TIME_RANGE
          return TIME_RANGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MALEITEM_ISSET_ID = 0;
  private static final int __FEMALEITEM_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.ling9527.music.common.msg.auto.LotteryType.class)));
    tmpMap.put(_Fields.MALE_ITEM, new org.apache.thrift.meta_data.FieldMetaData("maleItem", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEMALE_ITEM, new org.apache.thrift.meta_data.FieldMetaData("femaleItem", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("startDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("endDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIME_RANGE, new org.apache.thrift.meta_data.FieldMetaData("timeRange", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.LimitSaleTime.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TimingLottery.class, metaDataMap);
  }

  public TimingLottery() {
  }

  public TimingLottery(
    com.ling9527.music.common.msg.auto.LotteryType type,
    int maleItem,
    int femaleItem,
    String startDate,
    String endDate,
    List<com.ling9527.music.common.msg.auto.LimitSaleTime> timeRange)
  {
    this();
    this.type = type;
    this.maleItem = maleItem;
    setMaleItemIsSet(true);
    this.femaleItem = femaleItem;
    setFemaleItemIsSet(true);
    this.startDate = startDate;
    this.endDate = endDate;
    this.timeRange = timeRange;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TimingLottery(TimingLottery other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetType()) {
      this.type = other.type;
    }
    this.maleItem = other.maleItem;
    this.femaleItem = other.femaleItem;
    if (other.isSetStartDate()) {
      this.startDate = other.startDate;
    }
    if (other.isSetEndDate()) {
      this.endDate = other.endDate;
    }
    if (other.isSetTimeRange()) {
      List<com.ling9527.music.common.msg.auto.LimitSaleTime> __this__timeRange = new ArrayList<com.ling9527.music.common.msg.auto.LimitSaleTime>();
      for (com.ling9527.music.common.msg.auto.LimitSaleTime other_element : other.timeRange) {
        __this__timeRange.add(new com.ling9527.music.common.msg.auto.LimitSaleTime(other_element));
      }
      this.timeRange = __this__timeRange;
    }
  }

  public TimingLottery deepCopy() {
    return new TimingLottery(this);
  }

  @Override
  public void clear() {
    this.type = null;
    setMaleItemIsSet(false);
    this.maleItem = 0;
    setFemaleItemIsSet(false);
    this.femaleItem = 0;
    this.startDate = null;
    this.endDate = null;
    this.timeRange = null;
  }

  /**
   * 
   * @see com.ling9527.music.common.msg.auto.LotteryType
   */
  public com.ling9527.music.common.msg.auto.LotteryType getType() {
    return this.type;
  }

  /**
   * 
   * @see com.ling9527.music.common.msg.auto.LotteryType
   */
  public TimingLottery setType(com.ling9527.music.common.msg.auto.LotteryType type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public int getMaleItem() {
    return this.maleItem;
  }

  public TimingLottery setMaleItem(int maleItem) {
    this.maleItem = maleItem;
    setMaleItemIsSet(true);
    return this;
  }

  public void unsetMaleItem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MALEITEM_ISSET_ID);
  }

  /** Returns true if field maleItem is set (has been assigned a value) and false otherwise */
  public boolean isSetMaleItem() {
    return EncodingUtils.testBit(__isset_bitfield, __MALEITEM_ISSET_ID);
  }

  public void setMaleItemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MALEITEM_ISSET_ID, value);
  }

  public int getFemaleItem() {
    return this.femaleItem;
  }

  public TimingLottery setFemaleItem(int femaleItem) {
    this.femaleItem = femaleItem;
    setFemaleItemIsSet(true);
    return this;
  }

  public void unsetFemaleItem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FEMALEITEM_ISSET_ID);
  }

  /** Returns true if field femaleItem is set (has been assigned a value) and false otherwise */
  public boolean isSetFemaleItem() {
    return EncodingUtils.testBit(__isset_bitfield, __FEMALEITEM_ISSET_ID);
  }

  public void setFemaleItemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FEMALEITEM_ISSET_ID, value);
  }

  public String getStartDate() {
    return this.startDate;
  }

  public TimingLottery setStartDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  public void unsetStartDate() {
    this.startDate = null;
  }

  /** Returns true if field startDate is set (has been assigned a value) and false otherwise */
  public boolean isSetStartDate() {
    return this.startDate != null;
  }

  public void setStartDateIsSet(boolean value) {
    if (!value) {
      this.startDate = null;
    }
  }

  public String getEndDate() {
    return this.endDate;
  }

  public TimingLottery setEndDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  public void unsetEndDate() {
    this.endDate = null;
  }

  /** Returns true if field endDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDate() {
    return this.endDate != null;
  }

  public void setEndDateIsSet(boolean value) {
    if (!value) {
      this.endDate = null;
    }
  }

  public int getTimeRangeSize() {
    return (this.timeRange == null) ? 0 : this.timeRange.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.LimitSaleTime> getTimeRangeIterator() {
    return (this.timeRange == null) ? null : this.timeRange.iterator();
  }

  public void addToTimeRange(com.ling9527.music.common.msg.auto.LimitSaleTime elem) {
    if (this.timeRange == null) {
      this.timeRange = new ArrayList<com.ling9527.music.common.msg.auto.LimitSaleTime>();
    }
    this.timeRange.add(elem);
  }

  public List<com.ling9527.music.common.msg.auto.LimitSaleTime> getTimeRange() {
    return this.timeRange;
  }

  public TimingLottery setTimeRange(List<com.ling9527.music.common.msg.auto.LimitSaleTime> timeRange) {
    this.timeRange = timeRange;
    return this;
  }

  public void unsetTimeRange() {
    this.timeRange = null;
  }

  /** Returns true if field timeRange is set (has been assigned a value) and false otherwise */
  public boolean isSetTimeRange() {
    return this.timeRange != null;
  }

  public void setTimeRangeIsSet(boolean value) {
    if (!value) {
      this.timeRange = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((com.ling9527.music.common.msg.auto.LotteryType)value);
      }
      break;

    case MALE_ITEM:
      if (value == null) {
        unsetMaleItem();
      } else {
        setMaleItem((Integer)value);
      }
      break;

    case FEMALE_ITEM:
      if (value == null) {
        unsetFemaleItem();
      } else {
        setFemaleItem((Integer)value);
      }
      break;

    case START_DATE:
      if (value == null) {
        unsetStartDate();
      } else {
        setStartDate((String)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEndDate();
      } else {
        setEndDate((String)value);
      }
      break;

    case TIME_RANGE:
      if (value == null) {
        unsetTimeRange();
      } else {
        setTimeRange((List<com.ling9527.music.common.msg.auto.LimitSaleTime>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TYPE:
      return getType();

    case MALE_ITEM:
      return Integer.valueOf(getMaleItem());

    case FEMALE_ITEM:
      return Integer.valueOf(getFemaleItem());

    case START_DATE:
      return getStartDate();

    case END_DATE:
      return getEndDate();

    case TIME_RANGE:
      return getTimeRange();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TYPE:
      return isSetType();
    case MALE_ITEM:
      return isSetMaleItem();
    case FEMALE_ITEM:
      return isSetFemaleItem();
    case START_DATE:
      return isSetStartDate();
    case END_DATE:
      return isSetEndDate();
    case TIME_RANGE:
      return isSetTimeRange();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TimingLottery)
      return this.equals((TimingLottery)that);
    return false;
  }

  public boolean equals(TimingLottery that) {
    if (that == null)
      return false;

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_maleItem = true;
    boolean that_present_maleItem = true;
    if (this_present_maleItem || that_present_maleItem) {
      if (!(this_present_maleItem && that_present_maleItem))
        return false;
      if (this.maleItem != that.maleItem)
        return false;
    }

    boolean this_present_femaleItem = true;
    boolean that_present_femaleItem = true;
    if (this_present_femaleItem || that_present_femaleItem) {
      if (!(this_present_femaleItem && that_present_femaleItem))
        return false;
      if (this.femaleItem != that.femaleItem)
        return false;
    }

    boolean this_present_startDate = true && this.isSetStartDate();
    boolean that_present_startDate = true && that.isSetStartDate();
    if (this_present_startDate || that_present_startDate) {
      if (!(this_present_startDate && that_present_startDate))
        return false;
      if (!this.startDate.equals(that.startDate))
        return false;
    }

    boolean this_present_endDate = true && this.isSetEndDate();
    boolean that_present_endDate = true && that.isSetEndDate();
    if (this_present_endDate || that_present_endDate) {
      if (!(this_present_endDate && that_present_endDate))
        return false;
      if (!this.endDate.equals(that.endDate))
        return false;
    }

    boolean this_present_timeRange = true && this.isSetTimeRange();
    boolean that_present_timeRange = true && that.isSetTimeRange();
    if (this_present_timeRange || that_present_timeRange) {
      if (!(this_present_timeRange && that_present_timeRange))
        return false;
      if (!this.timeRange.equals(that.timeRange))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TimingLottery other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TimingLottery typedOther = (TimingLottery)other;

    lastComparison = Boolean.valueOf(isSetType()).compareTo(typedOther.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, typedOther.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaleItem()).compareTo(typedOther.isSetMaleItem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaleItem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maleItem, typedOther.maleItem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFemaleItem()).compareTo(typedOther.isSetFemaleItem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFemaleItem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.femaleItem, typedOther.femaleItem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartDate()).compareTo(typedOther.isSetStartDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startDate, typedOther.startDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDate()).compareTo(typedOther.isSetEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDate, typedOther.endDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTimeRange()).compareTo(typedOther.isSetTimeRange());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimeRange()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeRange, typedOther.timeRange);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TimingLottery(");
    boolean first = true;

    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("maleItem:");
    sb.append(this.maleItem);
    first = false;
    if (!first) sb.append(", ");
    sb.append("femaleItem:");
    sb.append(this.femaleItem);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startDate:");
    if (this.startDate == null) {
      sb.append("null");
    } else {
      sb.append(this.startDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endDate:");
    if (this.endDate == null) {
      sb.append("null");
    } else {
      sb.append(this.endDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timeRange:");
    if (this.timeRange == null) {
      sb.append("null");
    } else {
      sb.append(this.timeRange);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TimingLotteryStandardSchemeFactory implements SchemeFactory {
    public TimingLotteryStandardScheme getScheme() {
      return new TimingLotteryStandardScheme();
    }
  }

  private static class TimingLotteryStandardScheme extends StandardScheme<TimingLottery> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TimingLottery struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = com.ling9527.music.common.msg.auto.LotteryType.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MALE_ITEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maleItem = iprot.readI32();
              struct.setMaleItemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FEMALE_ITEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.femaleItem = iprot.readI32();
              struct.setFemaleItemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startDate = iprot.readString();
              struct.setStartDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endDate = iprot.readString();
              struct.setEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TIME_RANGE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list72 = iprot.readListBegin();
                struct.timeRange = new ArrayList<com.ling9527.music.common.msg.auto.LimitSaleTime>(_list72.size);
                for (int _i73 = 0; _i73 < _list72.size; ++_i73)
                {
                  com.ling9527.music.common.msg.auto.LimitSaleTime _elem74; // required
                  _elem74 = new com.ling9527.music.common.msg.auto.LimitSaleTime();
                  _elem74.read(iprot);
                  struct.timeRange.add(_elem74);
                }
                iprot.readListEnd();
              }
              struct.setTimeRangeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TimingLottery struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MALE_ITEM_FIELD_DESC);
      oprot.writeI32(struct.maleItem);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FEMALE_ITEM_FIELD_DESC);
      oprot.writeI32(struct.femaleItem);
      oprot.writeFieldEnd();
      if (struct.startDate != null) {
        oprot.writeFieldBegin(START_DATE_FIELD_DESC);
        oprot.writeString(struct.startDate);
        oprot.writeFieldEnd();
      }
      if (struct.endDate != null) {
        oprot.writeFieldBegin(END_DATE_FIELD_DESC);
        oprot.writeString(struct.endDate);
        oprot.writeFieldEnd();
      }
      if (struct.timeRange != null) {
        oprot.writeFieldBegin(TIME_RANGE_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.timeRange.size()));
          for (com.ling9527.music.common.msg.auto.LimitSaleTime _iter75 : struct.timeRange)
          {
            _iter75.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TimingLotteryTupleSchemeFactory implements SchemeFactory {
    public TimingLotteryTupleScheme getScheme() {
      return new TimingLotteryTupleScheme();
    }
  }

  private static class TimingLotteryTupleScheme extends TupleScheme<TimingLottery> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TimingLottery struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetType()) {
        optionals.set(0);
      }
      if (struct.isSetMaleItem()) {
        optionals.set(1);
      }
      if (struct.isSetFemaleItem()) {
        optionals.set(2);
      }
      if (struct.isSetStartDate()) {
        optionals.set(3);
      }
      if (struct.isSetEndDate()) {
        optionals.set(4);
      }
      if (struct.isSetTimeRange()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
      if (struct.isSetMaleItem()) {
        oprot.writeI32(struct.maleItem);
      }
      if (struct.isSetFemaleItem()) {
        oprot.writeI32(struct.femaleItem);
      }
      if (struct.isSetStartDate()) {
        oprot.writeString(struct.startDate);
      }
      if (struct.isSetEndDate()) {
        oprot.writeString(struct.endDate);
      }
      if (struct.isSetTimeRange()) {
        {
          oprot.writeI32(struct.timeRange.size());
          for (com.ling9527.music.common.msg.auto.LimitSaleTime _iter76 : struct.timeRange)
          {
            _iter76.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TimingLottery struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.type = com.ling9527.music.common.msg.auto.LotteryType.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.maleItem = iprot.readI32();
        struct.setMaleItemIsSet(true);
      }
      if (incoming.get(2)) {
        struct.femaleItem = iprot.readI32();
        struct.setFemaleItemIsSet(true);
      }
      if (incoming.get(3)) {
        struct.startDate = iprot.readString();
        struct.setStartDateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.endDate = iprot.readString();
        struct.setEndDateIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list77 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.timeRange = new ArrayList<com.ling9527.music.common.msg.auto.LimitSaleTime>(_list77.size);
          for (int _i78 = 0; _i78 < _list77.size; ++_i78)
          {
            com.ling9527.music.common.msg.auto.LimitSaleTime _elem79; // required
            _elem79 = new com.ling9527.music.common.msg.auto.LimitSaleTime();
            _elem79.read(iprot);
            struct.timeRange.add(_elem79);
          }
        }
        struct.setTimeRangeIsSet(true);
      }
    }
  }

}

