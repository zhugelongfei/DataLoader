/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SCUserPrizeInfosMsg implements org.apache.thrift.TBase<SCUserPrizeInfosMsg, SCUserPrizeInfosMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCUserPrizeInfosMsg");

  private static final org.apache.thrift.protocol.TField PRIZE_FIELD_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("prizeFieldInfos", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField PRIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("prize", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCUserPrizeInfosMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCUserPrizeInfosMsgTupleSchemeFactory());
  }

  public com.ling9527.music.common.msg.auto.PrizeFieldInfo prizeFieldInfos; // required
  public com.ling9527.music.common.msg.auto.UserPrizeInfo prize; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRIZE_FIELD_INFOS((short)1, "prizeFieldInfos"),
    PRIZE((short)2, "prize");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRIZE_FIELD_INFOS
          return PRIZE_FIELD_INFOS;
        case 2: // PRIZE
          return PRIZE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRIZE_FIELD_INFOS, new org.apache.thrift.meta_data.FieldMetaData("prizeFieldInfos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.PrizeFieldInfo.class)));
    tmpMap.put(_Fields.PRIZE, new org.apache.thrift.meta_data.FieldMetaData("prize", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.UserPrizeInfo.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCUserPrizeInfosMsg.class, metaDataMap);
  }

  public SCUserPrizeInfosMsg() {
  }

  public SCUserPrizeInfosMsg(
    com.ling9527.music.common.msg.auto.PrizeFieldInfo prizeFieldInfos,
    com.ling9527.music.common.msg.auto.UserPrizeInfo prize)
  {
    this();
    this.prizeFieldInfos = prizeFieldInfos;
    this.prize = prize;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCUserPrizeInfosMsg(SCUserPrizeInfosMsg other) {
    if (other.isSetPrizeFieldInfos()) {
      this.prizeFieldInfos = new com.ling9527.music.common.msg.auto.PrizeFieldInfo(other.prizeFieldInfos);
    }
    if (other.isSetPrize()) {
      this.prize = new com.ling9527.music.common.msg.auto.UserPrizeInfo(other.prize);
    }
  }

  public SCUserPrizeInfosMsg deepCopy() {
    return new SCUserPrizeInfosMsg(this);
  }

  @Override
  public void clear() {
    this.prizeFieldInfos = null;
    this.prize = null;
  }

  public com.ling9527.music.common.msg.auto.PrizeFieldInfo getPrizeFieldInfos() {
    return this.prizeFieldInfos;
  }

  public SCUserPrizeInfosMsg setPrizeFieldInfos(com.ling9527.music.common.msg.auto.PrizeFieldInfo prizeFieldInfos) {
    this.prizeFieldInfos = prizeFieldInfos;
    return this;
  }

  public void unsetPrizeFieldInfos() {
    this.prizeFieldInfos = null;
  }

  /** Returns true if field prizeFieldInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetPrizeFieldInfos() {
    return this.prizeFieldInfos != null;
  }

  public void setPrizeFieldInfosIsSet(boolean value) {
    if (!value) {
      this.prizeFieldInfos = null;
    }
  }

  public com.ling9527.music.common.msg.auto.UserPrizeInfo getPrize() {
    return this.prize;
  }

  public SCUserPrizeInfosMsg setPrize(com.ling9527.music.common.msg.auto.UserPrizeInfo prize) {
    this.prize = prize;
    return this;
  }

  public void unsetPrize() {
    this.prize = null;
  }

  /** Returns true if field prize is set (has been assigned a value) and false otherwise */
  public boolean isSetPrize() {
    return this.prize != null;
  }

  public void setPrizeIsSet(boolean value) {
    if (!value) {
      this.prize = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRIZE_FIELD_INFOS:
      if (value == null) {
        unsetPrizeFieldInfos();
      } else {
        setPrizeFieldInfos((com.ling9527.music.common.msg.auto.PrizeFieldInfo)value);
      }
      break;

    case PRIZE:
      if (value == null) {
        unsetPrize();
      } else {
        setPrize((com.ling9527.music.common.msg.auto.UserPrizeInfo)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRIZE_FIELD_INFOS:
      return getPrizeFieldInfos();

    case PRIZE:
      return getPrize();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRIZE_FIELD_INFOS:
      return isSetPrizeFieldInfos();
    case PRIZE:
      return isSetPrize();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCUserPrizeInfosMsg)
      return this.equals((SCUserPrizeInfosMsg)that);
    return false;
  }

  public boolean equals(SCUserPrizeInfosMsg that) {
    if (that == null)
      return false;

    boolean this_present_prizeFieldInfos = true && this.isSetPrizeFieldInfos();
    boolean that_present_prizeFieldInfos = true && that.isSetPrizeFieldInfos();
    if (this_present_prizeFieldInfos || that_present_prizeFieldInfos) {
      if (!(this_present_prizeFieldInfos && that_present_prizeFieldInfos))
        return false;
      if (!this.prizeFieldInfos.equals(that.prizeFieldInfos))
        return false;
    }

    boolean this_present_prize = true && this.isSetPrize();
    boolean that_present_prize = true && that.isSetPrize();
    if (this_present_prize || that_present_prize) {
      if (!(this_present_prize && that_present_prize))
        return false;
      if (!this.prize.equals(that.prize))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCUserPrizeInfosMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCUserPrizeInfosMsg typedOther = (SCUserPrizeInfosMsg)other;

    lastComparison = Boolean.valueOf(isSetPrizeFieldInfos()).compareTo(typedOther.isSetPrizeFieldInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrizeFieldInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.prizeFieldInfos, typedOther.prizeFieldInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrize()).compareTo(typedOther.isSetPrize());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrize()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.prize, typedOther.prize);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCUserPrizeInfosMsg(");
    boolean first = true;

    sb.append("prizeFieldInfos:");
    if (this.prizeFieldInfos == null) {
      sb.append("null");
    } else {
      sb.append(this.prizeFieldInfos);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("prize:");
    if (this.prize == null) {
      sb.append("null");
    } else {
      sb.append(this.prize);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (prizeFieldInfos != null) {
      prizeFieldInfos.validate();
    }
    if (prize != null) {
      prize.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCUserPrizeInfosMsgStandardSchemeFactory implements SchemeFactory {
    public SCUserPrizeInfosMsgStandardScheme getScheme() {
      return new SCUserPrizeInfosMsgStandardScheme();
    }
  }

  private static class SCUserPrizeInfosMsgStandardScheme extends StandardScheme<SCUserPrizeInfosMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCUserPrizeInfosMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRIZE_FIELD_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.prizeFieldInfos = new com.ling9527.music.common.msg.auto.PrizeFieldInfo();
              struct.prizeFieldInfos.read(iprot);
              struct.setPrizeFieldInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.prize = new com.ling9527.music.common.msg.auto.UserPrizeInfo();
              struct.prize.read(iprot);
              struct.setPrizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCUserPrizeInfosMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.prizeFieldInfos != null) {
        oprot.writeFieldBegin(PRIZE_FIELD_INFOS_FIELD_DESC);
        struct.prizeFieldInfos.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.prize != null) {
        oprot.writeFieldBegin(PRIZE_FIELD_DESC);
        struct.prize.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCUserPrizeInfosMsgTupleSchemeFactory implements SchemeFactory {
    public SCUserPrizeInfosMsgTupleScheme getScheme() {
      return new SCUserPrizeInfosMsgTupleScheme();
    }
  }

  private static class SCUserPrizeInfosMsgTupleScheme extends TupleScheme<SCUserPrizeInfosMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCUserPrizeInfosMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPrizeFieldInfos()) {
        optionals.set(0);
      }
      if (struct.isSetPrize()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetPrizeFieldInfos()) {
        struct.prizeFieldInfos.write(oprot);
      }
      if (struct.isSetPrize()) {
        struct.prize.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCUserPrizeInfosMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.prizeFieldInfos = new com.ling9527.music.common.msg.auto.PrizeFieldInfo();
        struct.prizeFieldInfos.read(iprot);
        struct.setPrizeFieldInfosIsSet(true);
      }
      if (incoming.get(1)) {
        struct.prize = new com.ling9527.music.common.msg.auto.UserPrizeInfo();
        struct.prize.read(iprot);
        struct.setPrizeIsSet(true);
      }
    }
  }

}

