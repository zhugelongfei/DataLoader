/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 排行榜信息
 */
public class SCRankListMsg implements org.apache.thrift.TBase<SCRankListMsg, SCRankListMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCRankListMsg");

  private static final org.apache.thrift.protocol.TField RANK_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("rankType", org.apache.thrift.protocol.TType.I16, (short)1);
  private static final org.apache.thrift.protocol.TField RANK_INFO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("rankInfoList", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField SELF_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("selfRank", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField SELF_SCORE_FIELD_DESC = new org.apache.thrift.protocol.TField("selfScore", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField START_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("startRank", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField END_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("endRank", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField RANK_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("rankCount", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField MUISC_QUERY_PARAM_FIELD_DESC = new org.apache.thrift.protocol.TField("muiscQueryParam", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField VALID_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("validTime", org.apache.thrift.protocol.TType.I32, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCRankListMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCRankListMsgTupleSchemeFactory());
  }

  public short rankType; // required
  public List<com.ling9527.music.common.msg.auto.RankInfo> rankInfoList; // required
  public int selfRank; // optional
  public long selfScore; // optional
  public int startRank; // required
  public int endRank; // required
  public int rankCount; // required
  public com.ling9527.music.common.msg.auto.RankMusicQueryParam muiscQueryParam; // optional
  /**
   * 有效截止时间（从1970.1.1开始的秒数）
   */
  public int validTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RANK_TYPE((short)1, "rankType"),
    RANK_INFO_LIST((short)2, "rankInfoList"),
    SELF_RANK((short)3, "selfRank"),
    SELF_SCORE((short)4, "selfScore"),
    START_RANK((short)5, "startRank"),
    END_RANK((short)6, "endRank"),
    RANK_COUNT((short)7, "rankCount"),
    MUISC_QUERY_PARAM((short)8, "muiscQueryParam"),
    /**
     * 有效截止时间（从1970.1.1开始的秒数）
     */
    VALID_TIME((short)9, "validTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RANK_TYPE
          return RANK_TYPE;
        case 2: // RANK_INFO_LIST
          return RANK_INFO_LIST;
        case 3: // SELF_RANK
          return SELF_RANK;
        case 4: // SELF_SCORE
          return SELF_SCORE;
        case 5: // START_RANK
          return START_RANK;
        case 6: // END_RANK
          return END_RANK;
        case 7: // RANK_COUNT
          return RANK_COUNT;
        case 8: // MUISC_QUERY_PARAM
          return MUISC_QUERY_PARAM;
        case 9: // VALID_TIME
          return VALID_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RANKTYPE_ISSET_ID = 0;
  private static final int __SELFRANK_ISSET_ID = 1;
  private static final int __SELFSCORE_ISSET_ID = 2;
  private static final int __STARTRANK_ISSET_ID = 3;
  private static final int __ENDRANK_ISSET_ID = 4;
  private static final int __RANKCOUNT_ISSET_ID = 5;
  private static final int __VALIDTIME_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.SELF_RANK,_Fields.SELF_SCORE,_Fields.MUISC_QUERY_PARAM};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RANK_TYPE, new org.apache.thrift.meta_data.FieldMetaData("rankType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.RANK_INFO_LIST, new org.apache.thrift.meta_data.FieldMetaData("rankInfoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.RankInfo.class))));
    tmpMap.put(_Fields.SELF_RANK, new org.apache.thrift.meta_data.FieldMetaData("selfRank", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SELF_SCORE, new org.apache.thrift.meta_data.FieldMetaData("selfScore", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_RANK, new org.apache.thrift.meta_data.FieldMetaData("startRank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.END_RANK, new org.apache.thrift.meta_data.FieldMetaData("endRank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RANK_COUNT, new org.apache.thrift.meta_data.FieldMetaData("rankCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MUISC_QUERY_PARAM, new org.apache.thrift.meta_data.FieldMetaData("muiscQueryParam", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.RankMusicQueryParam.class)));
    tmpMap.put(_Fields.VALID_TIME, new org.apache.thrift.meta_data.FieldMetaData("validTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCRankListMsg.class, metaDataMap);
  }

  public SCRankListMsg() {
  }

  public SCRankListMsg(
    short rankType,
    List<com.ling9527.music.common.msg.auto.RankInfo> rankInfoList,
    int startRank,
    int endRank,
    int rankCount,
    int validTime)
  {
    this();
    this.rankType = rankType;
    setRankTypeIsSet(true);
    this.rankInfoList = rankInfoList;
    this.startRank = startRank;
    setStartRankIsSet(true);
    this.endRank = endRank;
    setEndRankIsSet(true);
    this.rankCount = rankCount;
    setRankCountIsSet(true);
    this.validTime = validTime;
    setValidTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCRankListMsg(SCRankListMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    this.rankType = other.rankType;
    if (other.isSetRankInfoList()) {
      List<com.ling9527.music.common.msg.auto.RankInfo> __this__rankInfoList = new ArrayList<com.ling9527.music.common.msg.auto.RankInfo>();
      for (com.ling9527.music.common.msg.auto.RankInfo other_element : other.rankInfoList) {
        __this__rankInfoList.add(new com.ling9527.music.common.msg.auto.RankInfo(other_element));
      }
      this.rankInfoList = __this__rankInfoList;
    }
    this.selfRank = other.selfRank;
    this.selfScore = other.selfScore;
    this.startRank = other.startRank;
    this.endRank = other.endRank;
    this.rankCount = other.rankCount;
    if (other.isSetMuiscQueryParam()) {
      this.muiscQueryParam = new com.ling9527.music.common.msg.auto.RankMusicQueryParam(other.muiscQueryParam);
    }
    this.validTime = other.validTime;
  }

  public SCRankListMsg deepCopy() {
    return new SCRankListMsg(this);
  }

  @Override
  public void clear() {
    setRankTypeIsSet(false);
    this.rankType = 0;
    this.rankInfoList = null;
    setSelfRankIsSet(false);
    this.selfRank = 0;
    setSelfScoreIsSet(false);
    this.selfScore = 0;
    setStartRankIsSet(false);
    this.startRank = 0;
    setEndRankIsSet(false);
    this.endRank = 0;
    setRankCountIsSet(false);
    this.rankCount = 0;
    this.muiscQueryParam = null;
    setValidTimeIsSet(false);
    this.validTime = 0;
  }

  public short getRankType() {
    return this.rankType;
  }

  public SCRankListMsg setRankType(short rankType) {
    this.rankType = rankType;
    setRankTypeIsSet(true);
    return this;
  }

  public void unsetRankType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RANKTYPE_ISSET_ID);
  }

  /** Returns true if field rankType is set (has been assigned a value) and false otherwise */
  public boolean isSetRankType() {
    return EncodingUtils.testBit(__isset_bitfield, __RANKTYPE_ISSET_ID);
  }

  public void setRankTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RANKTYPE_ISSET_ID, value);
  }

  public int getRankInfoListSize() {
    return (this.rankInfoList == null) ? 0 : this.rankInfoList.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.RankInfo> getRankInfoListIterator() {
    return (this.rankInfoList == null) ? null : this.rankInfoList.iterator();
  }

  public void addToRankInfoList(com.ling9527.music.common.msg.auto.RankInfo elem) {
    if (this.rankInfoList == null) {
      this.rankInfoList = new ArrayList<com.ling9527.music.common.msg.auto.RankInfo>();
    }
    this.rankInfoList.add(elem);
  }

  public List<com.ling9527.music.common.msg.auto.RankInfo> getRankInfoList() {
    return this.rankInfoList;
  }

  public SCRankListMsg setRankInfoList(List<com.ling9527.music.common.msg.auto.RankInfo> rankInfoList) {
    this.rankInfoList = rankInfoList;
    return this;
  }

  public void unsetRankInfoList() {
    this.rankInfoList = null;
  }

  /** Returns true if field rankInfoList is set (has been assigned a value) and false otherwise */
  public boolean isSetRankInfoList() {
    return this.rankInfoList != null;
  }

  public void setRankInfoListIsSet(boolean value) {
    if (!value) {
      this.rankInfoList = null;
    }
  }

  public int getSelfRank() {
    return this.selfRank;
  }

  public SCRankListMsg setSelfRank(int selfRank) {
    this.selfRank = selfRank;
    setSelfRankIsSet(true);
    return this;
  }

  public void unsetSelfRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELFRANK_ISSET_ID);
  }

  /** Returns true if field selfRank is set (has been assigned a value) and false otherwise */
  public boolean isSetSelfRank() {
    return EncodingUtils.testBit(__isset_bitfield, __SELFRANK_ISSET_ID);
  }

  public void setSelfRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELFRANK_ISSET_ID, value);
  }

  public long getSelfScore() {
    return this.selfScore;
  }

  public SCRankListMsg setSelfScore(long selfScore) {
    this.selfScore = selfScore;
    setSelfScoreIsSet(true);
    return this;
  }

  public void unsetSelfScore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELFSCORE_ISSET_ID);
  }

  /** Returns true if field selfScore is set (has been assigned a value) and false otherwise */
  public boolean isSetSelfScore() {
    return EncodingUtils.testBit(__isset_bitfield, __SELFSCORE_ISSET_ID);
  }

  public void setSelfScoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELFSCORE_ISSET_ID, value);
  }

  public int getStartRank() {
    return this.startRank;
  }

  public SCRankListMsg setStartRank(int startRank) {
    this.startRank = startRank;
    setStartRankIsSet(true);
    return this;
  }

  public void unsetStartRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTRANK_ISSET_ID);
  }

  /** Returns true if field startRank is set (has been assigned a value) and false otherwise */
  public boolean isSetStartRank() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTRANK_ISSET_ID);
  }

  public void setStartRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTRANK_ISSET_ID, value);
  }

  public int getEndRank() {
    return this.endRank;
  }

  public SCRankListMsg setEndRank(int endRank) {
    this.endRank = endRank;
    setEndRankIsSet(true);
    return this;
  }

  public void unsetEndRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDRANK_ISSET_ID);
  }

  /** Returns true if field endRank is set (has been assigned a value) and false otherwise */
  public boolean isSetEndRank() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDRANK_ISSET_ID);
  }

  public void setEndRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDRANK_ISSET_ID, value);
  }

  public int getRankCount() {
    return this.rankCount;
  }

  public SCRankListMsg setRankCount(int rankCount) {
    this.rankCount = rankCount;
    setRankCountIsSet(true);
    return this;
  }

  public void unsetRankCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RANKCOUNT_ISSET_ID);
  }

  /** Returns true if field rankCount is set (has been assigned a value) and false otherwise */
  public boolean isSetRankCount() {
    return EncodingUtils.testBit(__isset_bitfield, __RANKCOUNT_ISSET_ID);
  }

  public void setRankCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RANKCOUNT_ISSET_ID, value);
  }

  public com.ling9527.music.common.msg.auto.RankMusicQueryParam getMuiscQueryParam() {
    return this.muiscQueryParam;
  }

  public SCRankListMsg setMuiscQueryParam(com.ling9527.music.common.msg.auto.RankMusicQueryParam muiscQueryParam) {
    this.muiscQueryParam = muiscQueryParam;
    return this;
  }

  public void unsetMuiscQueryParam() {
    this.muiscQueryParam = null;
  }

  /** Returns true if field muiscQueryParam is set (has been assigned a value) and false otherwise */
  public boolean isSetMuiscQueryParam() {
    return this.muiscQueryParam != null;
  }

  public void setMuiscQueryParamIsSet(boolean value) {
    if (!value) {
      this.muiscQueryParam = null;
    }
  }

  /**
   * 有效截止时间（从1970.1.1开始的秒数）
   */
  public int getValidTime() {
    return this.validTime;
  }

  /**
   * 有效截止时间（从1970.1.1开始的秒数）
   */
  public SCRankListMsg setValidTime(int validTime) {
    this.validTime = validTime;
    setValidTimeIsSet(true);
    return this;
  }

  public void unsetValidTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VALIDTIME_ISSET_ID);
  }

  /** Returns true if field validTime is set (has been assigned a value) and false otherwise */
  public boolean isSetValidTime() {
    return EncodingUtils.testBit(__isset_bitfield, __VALIDTIME_ISSET_ID);
  }

  public void setValidTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VALIDTIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RANK_TYPE:
      if (value == null) {
        unsetRankType();
      } else {
        setRankType((Short)value);
      }
      break;

    case RANK_INFO_LIST:
      if (value == null) {
        unsetRankInfoList();
      } else {
        setRankInfoList((List<com.ling9527.music.common.msg.auto.RankInfo>)value);
      }
      break;

    case SELF_RANK:
      if (value == null) {
        unsetSelfRank();
      } else {
        setSelfRank((Integer)value);
      }
      break;

    case SELF_SCORE:
      if (value == null) {
        unsetSelfScore();
      } else {
        setSelfScore((Long)value);
      }
      break;

    case START_RANK:
      if (value == null) {
        unsetStartRank();
      } else {
        setStartRank((Integer)value);
      }
      break;

    case END_RANK:
      if (value == null) {
        unsetEndRank();
      } else {
        setEndRank((Integer)value);
      }
      break;

    case RANK_COUNT:
      if (value == null) {
        unsetRankCount();
      } else {
        setRankCount((Integer)value);
      }
      break;

    case MUISC_QUERY_PARAM:
      if (value == null) {
        unsetMuiscQueryParam();
      } else {
        setMuiscQueryParam((com.ling9527.music.common.msg.auto.RankMusicQueryParam)value);
      }
      break;

    case VALID_TIME:
      if (value == null) {
        unsetValidTime();
      } else {
        setValidTime((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RANK_TYPE:
      return Short.valueOf(getRankType());

    case RANK_INFO_LIST:
      return getRankInfoList();

    case SELF_RANK:
      return Integer.valueOf(getSelfRank());

    case SELF_SCORE:
      return Long.valueOf(getSelfScore());

    case START_RANK:
      return Integer.valueOf(getStartRank());

    case END_RANK:
      return Integer.valueOf(getEndRank());

    case RANK_COUNT:
      return Integer.valueOf(getRankCount());

    case MUISC_QUERY_PARAM:
      return getMuiscQueryParam();

    case VALID_TIME:
      return Integer.valueOf(getValidTime());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RANK_TYPE:
      return isSetRankType();
    case RANK_INFO_LIST:
      return isSetRankInfoList();
    case SELF_RANK:
      return isSetSelfRank();
    case SELF_SCORE:
      return isSetSelfScore();
    case START_RANK:
      return isSetStartRank();
    case END_RANK:
      return isSetEndRank();
    case RANK_COUNT:
      return isSetRankCount();
    case MUISC_QUERY_PARAM:
      return isSetMuiscQueryParam();
    case VALID_TIME:
      return isSetValidTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCRankListMsg)
      return this.equals((SCRankListMsg)that);
    return false;
  }

  public boolean equals(SCRankListMsg that) {
    if (that == null)
      return false;

    boolean this_present_rankType = true;
    boolean that_present_rankType = true;
    if (this_present_rankType || that_present_rankType) {
      if (!(this_present_rankType && that_present_rankType))
        return false;
      if (this.rankType != that.rankType)
        return false;
    }

    boolean this_present_rankInfoList = true && this.isSetRankInfoList();
    boolean that_present_rankInfoList = true && that.isSetRankInfoList();
    if (this_present_rankInfoList || that_present_rankInfoList) {
      if (!(this_present_rankInfoList && that_present_rankInfoList))
        return false;
      if (!this.rankInfoList.equals(that.rankInfoList))
        return false;
    }

    boolean this_present_selfRank = true && this.isSetSelfRank();
    boolean that_present_selfRank = true && that.isSetSelfRank();
    if (this_present_selfRank || that_present_selfRank) {
      if (!(this_present_selfRank && that_present_selfRank))
        return false;
      if (this.selfRank != that.selfRank)
        return false;
    }

    boolean this_present_selfScore = true && this.isSetSelfScore();
    boolean that_present_selfScore = true && that.isSetSelfScore();
    if (this_present_selfScore || that_present_selfScore) {
      if (!(this_present_selfScore && that_present_selfScore))
        return false;
      if (this.selfScore != that.selfScore)
        return false;
    }

    boolean this_present_startRank = true;
    boolean that_present_startRank = true;
    if (this_present_startRank || that_present_startRank) {
      if (!(this_present_startRank && that_present_startRank))
        return false;
      if (this.startRank != that.startRank)
        return false;
    }

    boolean this_present_endRank = true;
    boolean that_present_endRank = true;
    if (this_present_endRank || that_present_endRank) {
      if (!(this_present_endRank && that_present_endRank))
        return false;
      if (this.endRank != that.endRank)
        return false;
    }

    boolean this_present_rankCount = true;
    boolean that_present_rankCount = true;
    if (this_present_rankCount || that_present_rankCount) {
      if (!(this_present_rankCount && that_present_rankCount))
        return false;
      if (this.rankCount != that.rankCount)
        return false;
    }

    boolean this_present_muiscQueryParam = true && this.isSetMuiscQueryParam();
    boolean that_present_muiscQueryParam = true && that.isSetMuiscQueryParam();
    if (this_present_muiscQueryParam || that_present_muiscQueryParam) {
      if (!(this_present_muiscQueryParam && that_present_muiscQueryParam))
        return false;
      if (!this.muiscQueryParam.equals(that.muiscQueryParam))
        return false;
    }

    boolean this_present_validTime = true;
    boolean that_present_validTime = true;
    if (this_present_validTime || that_present_validTime) {
      if (!(this_present_validTime && that_present_validTime))
        return false;
      if (this.validTime != that.validTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCRankListMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCRankListMsg typedOther = (SCRankListMsg)other;

    lastComparison = Boolean.valueOf(isSetRankType()).compareTo(typedOther.isSetRankType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRankType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rankType, typedOther.rankType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRankInfoList()).compareTo(typedOther.isSetRankInfoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRankInfoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rankInfoList, typedOther.rankInfoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSelfRank()).compareTo(typedOther.isSetSelfRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSelfRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selfRank, typedOther.selfRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSelfScore()).compareTo(typedOther.isSetSelfScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSelfScore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selfScore, typedOther.selfScore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartRank()).compareTo(typedOther.isSetStartRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startRank, typedOther.startRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndRank()).compareTo(typedOther.isSetEndRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endRank, typedOther.endRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRankCount()).compareTo(typedOther.isSetRankCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRankCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rankCount, typedOther.rankCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMuiscQueryParam()).compareTo(typedOther.isSetMuiscQueryParam());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMuiscQueryParam()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.muiscQueryParam, typedOther.muiscQueryParam);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidTime()).compareTo(typedOther.isSetValidTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validTime, typedOther.validTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCRankListMsg(");
    boolean first = true;

    sb.append("rankType:");
    sb.append(this.rankType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rankInfoList:");
    if (this.rankInfoList == null) {
      sb.append("null");
    } else {
      sb.append(this.rankInfoList);
    }
    first = false;
    if (isSetSelfRank()) {
      if (!first) sb.append(", ");
      sb.append("selfRank:");
      sb.append(this.selfRank);
      first = false;
    }
    if (isSetSelfScore()) {
      if (!first) sb.append(", ");
      sb.append("selfScore:");
      sb.append(this.selfScore);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("startRank:");
    sb.append(this.startRank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endRank:");
    sb.append(this.endRank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rankCount:");
    sb.append(this.rankCount);
    first = false;
    if (isSetMuiscQueryParam()) {
      if (!first) sb.append(", ");
      sb.append("muiscQueryParam:");
      if (this.muiscQueryParam == null) {
        sb.append("null");
      } else {
        sb.append(this.muiscQueryParam);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("validTime:");
    sb.append(this.validTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (muiscQueryParam != null) {
      muiscQueryParam.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCRankListMsgStandardSchemeFactory implements SchemeFactory {
    public SCRankListMsgStandardScheme getScheme() {
      return new SCRankListMsgStandardScheme();
    }
  }

  private static class SCRankListMsgStandardScheme extends StandardScheme<SCRankListMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCRankListMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RANK_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.rankType = iprot.readI16();
              struct.setRankTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RANK_INFO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list10 = iprot.readListBegin();
                struct.rankInfoList = new ArrayList<com.ling9527.music.common.msg.auto.RankInfo>(_list10.size);
                for (int _i11 = 0; _i11 < _list10.size; ++_i11)
                {
                  com.ling9527.music.common.msg.auto.RankInfo _elem12; // required
                  _elem12 = new com.ling9527.music.common.msg.auto.RankInfo();
                  _elem12.read(iprot);
                  struct.rankInfoList.add(_elem12);
                }
                iprot.readListEnd();
              }
              struct.setRankInfoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SELF_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.selfRank = iprot.readI32();
              struct.setSelfRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SELF_SCORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.selfScore = iprot.readI64();
              struct.setSelfScoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.startRank = iprot.readI32();
              struct.setStartRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.endRank = iprot.readI32();
              struct.setEndRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RANK_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rankCount = iprot.readI32();
              struct.setRankCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MUISC_QUERY_PARAM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.muiscQueryParam = new com.ling9527.music.common.msg.auto.RankMusicQueryParam();
              struct.muiscQueryParam.read(iprot);
              struct.setMuiscQueryParamIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // VALID_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.validTime = iprot.readI32();
              struct.setValidTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCRankListMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(RANK_TYPE_FIELD_DESC);
      oprot.writeI16(struct.rankType);
      oprot.writeFieldEnd();
      if (struct.rankInfoList != null) {
        oprot.writeFieldBegin(RANK_INFO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.rankInfoList.size()));
          for (com.ling9527.music.common.msg.auto.RankInfo _iter13 : struct.rankInfoList)
          {
            _iter13.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.isSetSelfRank()) {
        oprot.writeFieldBegin(SELF_RANK_FIELD_DESC);
        oprot.writeI32(struct.selfRank);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSelfScore()) {
        oprot.writeFieldBegin(SELF_SCORE_FIELD_DESC);
        oprot.writeI64(struct.selfScore);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(START_RANK_FIELD_DESC);
      oprot.writeI32(struct.startRank);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_RANK_FIELD_DESC);
      oprot.writeI32(struct.endRank);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RANK_COUNT_FIELD_DESC);
      oprot.writeI32(struct.rankCount);
      oprot.writeFieldEnd();
      if (struct.muiscQueryParam != null) {
        if (struct.isSetMuiscQueryParam()) {
          oprot.writeFieldBegin(MUISC_QUERY_PARAM_FIELD_DESC);
          struct.muiscQueryParam.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(VALID_TIME_FIELD_DESC);
      oprot.writeI32(struct.validTime);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCRankListMsgTupleSchemeFactory implements SchemeFactory {
    public SCRankListMsgTupleScheme getScheme() {
      return new SCRankListMsgTupleScheme();
    }
  }

  private static class SCRankListMsgTupleScheme extends TupleScheme<SCRankListMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCRankListMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetRankType()) {
        optionals.set(0);
      }
      if (struct.isSetRankInfoList()) {
        optionals.set(1);
      }
      if (struct.isSetSelfRank()) {
        optionals.set(2);
      }
      if (struct.isSetSelfScore()) {
        optionals.set(3);
      }
      if (struct.isSetStartRank()) {
        optionals.set(4);
      }
      if (struct.isSetEndRank()) {
        optionals.set(5);
      }
      if (struct.isSetRankCount()) {
        optionals.set(6);
      }
      if (struct.isSetMuiscQueryParam()) {
        optionals.set(7);
      }
      if (struct.isSetValidTime()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetRankType()) {
        oprot.writeI16(struct.rankType);
      }
      if (struct.isSetRankInfoList()) {
        {
          oprot.writeI32(struct.rankInfoList.size());
          for (com.ling9527.music.common.msg.auto.RankInfo _iter14 : struct.rankInfoList)
          {
            _iter14.write(oprot);
          }
        }
      }
      if (struct.isSetSelfRank()) {
        oprot.writeI32(struct.selfRank);
      }
      if (struct.isSetSelfScore()) {
        oprot.writeI64(struct.selfScore);
      }
      if (struct.isSetStartRank()) {
        oprot.writeI32(struct.startRank);
      }
      if (struct.isSetEndRank()) {
        oprot.writeI32(struct.endRank);
      }
      if (struct.isSetRankCount()) {
        oprot.writeI32(struct.rankCount);
      }
      if (struct.isSetMuiscQueryParam()) {
        struct.muiscQueryParam.write(oprot);
      }
      if (struct.isSetValidTime()) {
        oprot.writeI32(struct.validTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCRankListMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.rankType = iprot.readI16();
        struct.setRankTypeIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.rankInfoList = new ArrayList<com.ling9527.music.common.msg.auto.RankInfo>(_list15.size);
          for (int _i16 = 0; _i16 < _list15.size; ++_i16)
          {
            com.ling9527.music.common.msg.auto.RankInfo _elem17; // required
            _elem17 = new com.ling9527.music.common.msg.auto.RankInfo();
            _elem17.read(iprot);
            struct.rankInfoList.add(_elem17);
          }
        }
        struct.setRankInfoListIsSet(true);
      }
      if (incoming.get(2)) {
        struct.selfRank = iprot.readI32();
        struct.setSelfRankIsSet(true);
      }
      if (incoming.get(3)) {
        struct.selfScore = iprot.readI64();
        struct.setSelfScoreIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startRank = iprot.readI32();
        struct.setStartRankIsSet(true);
      }
      if (incoming.get(5)) {
        struct.endRank = iprot.readI32();
        struct.setEndRankIsSet(true);
      }
      if (incoming.get(6)) {
        struct.rankCount = iprot.readI32();
        struct.setRankCountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.muiscQueryParam = new com.ling9527.music.common.msg.auto.RankMusicQueryParam();
        struct.muiscQueryParam.read(iprot);
        struct.setMuiscQueryParamIsSet(true);
      }
      if (incoming.get(8)) {
        struct.validTime = iprot.readI32();
        struct.setValidTimeIsSet(true);
      }
    }
  }

}

