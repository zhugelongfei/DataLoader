/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 显示名片指定信息类型详情
 */
public class SCShowBusinessCardDetailMsg implements org.apache.thrift.TBase<SCShowBusinessCardDetailMsg, SCShowBusinessCardDetailMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCShowBusinessCardDetailMsg");

  private static final org.apache.thrift.protocol.TField CHAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("charId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField TOTAL_JEWELRY_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalJewelryCount", org.apache.thrift.protocol.TType.I16, (short)2);
  private static final org.apache.thrift.protocol.TField CUR_JEWELRY_PAGE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("curJewelryPageNum", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField JEWELRY_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("jewelryInfos", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField TOTAL_RELATION_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalRelationCount", org.apache.thrift.protocol.TType.I16, (short)5);
  private static final org.apache.thrift.protocol.TField CUR_RELATION_PAGE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("curRelationPageNum", org.apache.thrift.protocol.TType.I16, (short)6);
  private static final org.apache.thrift.protocol.TField RELATION_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("relationInfos", org.apache.thrift.protocol.TType.LIST, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCShowBusinessCardDetailMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCShowBusinessCardDetailMsgTupleSchemeFactory());
  }

  public long charId; // required
  public short totalJewelryCount; // optional
  public short curJewelryPageNum; // optional
  /**
   * 首饰盒信息
   */
  public List<com.ling9527.music.common.msg.auto.JewelryInfo> jewelryInfos; // optional
  public short totalRelationCount; // optional
  public short curRelationPageNum; // optional
  /**
   * 社交关系信息
   */
  public List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> relationInfos; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CHAR_ID((short)1, "charId"),
    TOTAL_JEWELRY_COUNT((short)2, "totalJewelryCount"),
    CUR_JEWELRY_PAGE_NUM((short)3, "curJewelryPageNum"),
    /**
     * 首饰盒信息
     */
    JEWELRY_INFOS((short)4, "jewelryInfos"),
    TOTAL_RELATION_COUNT((short)5, "totalRelationCount"),
    CUR_RELATION_PAGE_NUM((short)6, "curRelationPageNum"),
    /**
     * 社交关系信息
     */
    RELATION_INFOS((short)7, "relationInfos");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CHAR_ID
          return CHAR_ID;
        case 2: // TOTAL_JEWELRY_COUNT
          return TOTAL_JEWELRY_COUNT;
        case 3: // CUR_JEWELRY_PAGE_NUM
          return CUR_JEWELRY_PAGE_NUM;
        case 4: // JEWELRY_INFOS
          return JEWELRY_INFOS;
        case 5: // TOTAL_RELATION_COUNT
          return TOTAL_RELATION_COUNT;
        case 6: // CUR_RELATION_PAGE_NUM
          return CUR_RELATION_PAGE_NUM;
        case 7: // RELATION_INFOS
          return RELATION_INFOS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CHARID_ISSET_ID = 0;
  private static final int __TOTALJEWELRYCOUNT_ISSET_ID = 1;
  private static final int __CURJEWELRYPAGENUM_ISSET_ID = 2;
  private static final int __TOTALRELATIONCOUNT_ISSET_ID = 3;
  private static final int __CURRELATIONPAGENUM_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.TOTAL_JEWELRY_COUNT,_Fields.CUR_JEWELRY_PAGE_NUM,_Fields.JEWELRY_INFOS,_Fields.TOTAL_RELATION_COUNT,_Fields.CUR_RELATION_PAGE_NUM,_Fields.RELATION_INFOS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CHAR_ID, new org.apache.thrift.meta_data.FieldMetaData("charId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TOTAL_JEWELRY_COUNT, new org.apache.thrift.meta_data.FieldMetaData("totalJewelryCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.CUR_JEWELRY_PAGE_NUM, new org.apache.thrift.meta_data.FieldMetaData("curJewelryPageNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.JEWELRY_INFOS, new org.apache.thrift.meta_data.FieldMetaData("jewelryInfos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.JewelryInfo.class))));
    tmpMap.put(_Fields.TOTAL_RELATION_COUNT, new org.apache.thrift.meta_data.FieldMetaData("totalRelationCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.CUR_RELATION_PAGE_NUM, new org.apache.thrift.meta_data.FieldMetaData("curRelationPageNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.RELATION_INFOS, new org.apache.thrift.meta_data.FieldMetaData("relationInfos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCShowBusinessCardDetailMsg.class, metaDataMap);
  }

  public SCShowBusinessCardDetailMsg() {
  }

  public SCShowBusinessCardDetailMsg(
    long charId)
  {
    this();
    this.charId = charId;
    setCharIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCShowBusinessCardDetailMsg(SCShowBusinessCardDetailMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    this.charId = other.charId;
    this.totalJewelryCount = other.totalJewelryCount;
    this.curJewelryPageNum = other.curJewelryPageNum;
    if (other.isSetJewelryInfos()) {
      List<com.ling9527.music.common.msg.auto.JewelryInfo> __this__jewelryInfos = new ArrayList<com.ling9527.music.common.msg.auto.JewelryInfo>();
      for (com.ling9527.music.common.msg.auto.JewelryInfo other_element : other.jewelryInfos) {
        __this__jewelryInfos.add(new com.ling9527.music.common.msg.auto.JewelryInfo(other_element));
      }
      this.jewelryInfos = __this__jewelryInfos;
    }
    this.totalRelationCount = other.totalRelationCount;
    this.curRelationPageNum = other.curRelationPageNum;
    if (other.isSetRelationInfos()) {
      List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> __this__relationInfos = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>();
      for (com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo other_element : other.relationInfos) {
        __this__relationInfos.add(new com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo(other_element));
      }
      this.relationInfos = __this__relationInfos;
    }
  }

  public SCShowBusinessCardDetailMsg deepCopy() {
    return new SCShowBusinessCardDetailMsg(this);
  }

  @Override
  public void clear() {
    setCharIdIsSet(false);
    this.charId = 0;
    setTotalJewelryCountIsSet(false);
    this.totalJewelryCount = 0;
    setCurJewelryPageNumIsSet(false);
    this.curJewelryPageNum = 0;
    this.jewelryInfos = null;
    setTotalRelationCountIsSet(false);
    this.totalRelationCount = 0;
    setCurRelationPageNumIsSet(false);
    this.curRelationPageNum = 0;
    this.relationInfos = null;
  }

  public long getCharId() {
    return this.charId;
  }

  public SCShowBusinessCardDetailMsg setCharId(long charId) {
    this.charId = charId;
    setCharIdIsSet(true);
    return this;
  }

  public void unsetCharId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHARID_ISSET_ID);
  }

  /** Returns true if field charId is set (has been assigned a value) and false otherwise */
  public boolean isSetCharId() {
    return EncodingUtils.testBit(__isset_bitfield, __CHARID_ISSET_ID);
  }

  public void setCharIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHARID_ISSET_ID, value);
  }

  public short getTotalJewelryCount() {
    return this.totalJewelryCount;
  }

  public SCShowBusinessCardDetailMsg setTotalJewelryCount(short totalJewelryCount) {
    this.totalJewelryCount = totalJewelryCount;
    setTotalJewelryCountIsSet(true);
    return this;
  }

  public void unsetTotalJewelryCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALJEWELRYCOUNT_ISSET_ID);
  }

  /** Returns true if field totalJewelryCount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalJewelryCount() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALJEWELRYCOUNT_ISSET_ID);
  }

  public void setTotalJewelryCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALJEWELRYCOUNT_ISSET_ID, value);
  }

  public short getCurJewelryPageNum() {
    return this.curJewelryPageNum;
  }

  public SCShowBusinessCardDetailMsg setCurJewelryPageNum(short curJewelryPageNum) {
    this.curJewelryPageNum = curJewelryPageNum;
    setCurJewelryPageNumIsSet(true);
    return this;
  }

  public void unsetCurJewelryPageNum() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CURJEWELRYPAGENUM_ISSET_ID);
  }

  /** Returns true if field curJewelryPageNum is set (has been assigned a value) and false otherwise */
  public boolean isSetCurJewelryPageNum() {
    return EncodingUtils.testBit(__isset_bitfield, __CURJEWELRYPAGENUM_ISSET_ID);
  }

  public void setCurJewelryPageNumIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CURJEWELRYPAGENUM_ISSET_ID, value);
  }

  public int getJewelryInfosSize() {
    return (this.jewelryInfos == null) ? 0 : this.jewelryInfos.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.JewelryInfo> getJewelryInfosIterator() {
    return (this.jewelryInfos == null) ? null : this.jewelryInfos.iterator();
  }

  public void addToJewelryInfos(com.ling9527.music.common.msg.auto.JewelryInfo elem) {
    if (this.jewelryInfos == null) {
      this.jewelryInfos = new ArrayList<com.ling9527.music.common.msg.auto.JewelryInfo>();
    }
    this.jewelryInfos.add(elem);
  }

  /**
   * 首饰盒信息
   */
  public List<com.ling9527.music.common.msg.auto.JewelryInfo> getJewelryInfos() {
    return this.jewelryInfos;
  }

  /**
   * 首饰盒信息
   */
  public SCShowBusinessCardDetailMsg setJewelryInfos(List<com.ling9527.music.common.msg.auto.JewelryInfo> jewelryInfos) {
    this.jewelryInfos = jewelryInfos;
    return this;
  }

  public void unsetJewelryInfos() {
    this.jewelryInfos = null;
  }

  /** Returns true if field jewelryInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetJewelryInfos() {
    return this.jewelryInfos != null;
  }

  public void setJewelryInfosIsSet(boolean value) {
    if (!value) {
      this.jewelryInfos = null;
    }
  }

  public short getTotalRelationCount() {
    return this.totalRelationCount;
  }

  public SCShowBusinessCardDetailMsg setTotalRelationCount(short totalRelationCount) {
    this.totalRelationCount = totalRelationCount;
    setTotalRelationCountIsSet(true);
    return this;
  }

  public void unsetTotalRelationCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALRELATIONCOUNT_ISSET_ID);
  }

  /** Returns true if field totalRelationCount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalRelationCount() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALRELATIONCOUNT_ISSET_ID);
  }

  public void setTotalRelationCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALRELATIONCOUNT_ISSET_ID, value);
  }

  public short getCurRelationPageNum() {
    return this.curRelationPageNum;
  }

  public SCShowBusinessCardDetailMsg setCurRelationPageNum(short curRelationPageNum) {
    this.curRelationPageNum = curRelationPageNum;
    setCurRelationPageNumIsSet(true);
    return this;
  }

  public void unsetCurRelationPageNum() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CURRELATIONPAGENUM_ISSET_ID);
  }

  /** Returns true if field curRelationPageNum is set (has been assigned a value) and false otherwise */
  public boolean isSetCurRelationPageNum() {
    return EncodingUtils.testBit(__isset_bitfield, __CURRELATIONPAGENUM_ISSET_ID);
  }

  public void setCurRelationPageNumIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CURRELATIONPAGENUM_ISSET_ID, value);
  }

  public int getRelationInfosSize() {
    return (this.relationInfos == null) ? 0 : this.relationInfos.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> getRelationInfosIterator() {
    return (this.relationInfos == null) ? null : this.relationInfos.iterator();
  }

  public void addToRelationInfos(com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo elem) {
    if (this.relationInfos == null) {
      this.relationInfos = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>();
    }
    this.relationInfos.add(elem);
  }

  /**
   * 社交关系信息
   */
  public List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> getRelationInfos() {
    return this.relationInfos;
  }

  /**
   * 社交关系信息
   */
  public SCShowBusinessCardDetailMsg setRelationInfos(List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo> relationInfos) {
    this.relationInfos = relationInfos;
    return this;
  }

  public void unsetRelationInfos() {
    this.relationInfos = null;
  }

  /** Returns true if field relationInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetRelationInfos() {
    return this.relationInfos != null;
  }

  public void setRelationInfosIsSet(boolean value) {
    if (!value) {
      this.relationInfos = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CHAR_ID:
      if (value == null) {
        unsetCharId();
      } else {
        setCharId((Long)value);
      }
      break;

    case TOTAL_JEWELRY_COUNT:
      if (value == null) {
        unsetTotalJewelryCount();
      } else {
        setTotalJewelryCount((Short)value);
      }
      break;

    case CUR_JEWELRY_PAGE_NUM:
      if (value == null) {
        unsetCurJewelryPageNum();
      } else {
        setCurJewelryPageNum((Short)value);
      }
      break;

    case JEWELRY_INFOS:
      if (value == null) {
        unsetJewelryInfos();
      } else {
        setJewelryInfos((List<com.ling9527.music.common.msg.auto.JewelryInfo>)value);
      }
      break;

    case TOTAL_RELATION_COUNT:
      if (value == null) {
        unsetTotalRelationCount();
      } else {
        setTotalRelationCount((Short)value);
      }
      break;

    case CUR_RELATION_PAGE_NUM:
      if (value == null) {
        unsetCurRelationPageNum();
      } else {
        setCurRelationPageNum((Short)value);
      }
      break;

    case RELATION_INFOS:
      if (value == null) {
        unsetRelationInfos();
      } else {
        setRelationInfos((List<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CHAR_ID:
      return Long.valueOf(getCharId());

    case TOTAL_JEWELRY_COUNT:
      return Short.valueOf(getTotalJewelryCount());

    case CUR_JEWELRY_PAGE_NUM:
      return Short.valueOf(getCurJewelryPageNum());

    case JEWELRY_INFOS:
      return getJewelryInfos();

    case TOTAL_RELATION_COUNT:
      return Short.valueOf(getTotalRelationCount());

    case CUR_RELATION_PAGE_NUM:
      return Short.valueOf(getCurRelationPageNum());

    case RELATION_INFOS:
      return getRelationInfos();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CHAR_ID:
      return isSetCharId();
    case TOTAL_JEWELRY_COUNT:
      return isSetTotalJewelryCount();
    case CUR_JEWELRY_PAGE_NUM:
      return isSetCurJewelryPageNum();
    case JEWELRY_INFOS:
      return isSetJewelryInfos();
    case TOTAL_RELATION_COUNT:
      return isSetTotalRelationCount();
    case CUR_RELATION_PAGE_NUM:
      return isSetCurRelationPageNum();
    case RELATION_INFOS:
      return isSetRelationInfos();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCShowBusinessCardDetailMsg)
      return this.equals((SCShowBusinessCardDetailMsg)that);
    return false;
  }

  public boolean equals(SCShowBusinessCardDetailMsg that) {
    if (that == null)
      return false;

    boolean this_present_charId = true;
    boolean that_present_charId = true;
    if (this_present_charId || that_present_charId) {
      if (!(this_present_charId && that_present_charId))
        return false;
      if (this.charId != that.charId)
        return false;
    }

    boolean this_present_totalJewelryCount = true && this.isSetTotalJewelryCount();
    boolean that_present_totalJewelryCount = true && that.isSetTotalJewelryCount();
    if (this_present_totalJewelryCount || that_present_totalJewelryCount) {
      if (!(this_present_totalJewelryCount && that_present_totalJewelryCount))
        return false;
      if (this.totalJewelryCount != that.totalJewelryCount)
        return false;
    }

    boolean this_present_curJewelryPageNum = true && this.isSetCurJewelryPageNum();
    boolean that_present_curJewelryPageNum = true && that.isSetCurJewelryPageNum();
    if (this_present_curJewelryPageNum || that_present_curJewelryPageNum) {
      if (!(this_present_curJewelryPageNum && that_present_curJewelryPageNum))
        return false;
      if (this.curJewelryPageNum != that.curJewelryPageNum)
        return false;
    }

    boolean this_present_jewelryInfos = true && this.isSetJewelryInfos();
    boolean that_present_jewelryInfos = true && that.isSetJewelryInfos();
    if (this_present_jewelryInfos || that_present_jewelryInfos) {
      if (!(this_present_jewelryInfos && that_present_jewelryInfos))
        return false;
      if (!this.jewelryInfos.equals(that.jewelryInfos))
        return false;
    }

    boolean this_present_totalRelationCount = true && this.isSetTotalRelationCount();
    boolean that_present_totalRelationCount = true && that.isSetTotalRelationCount();
    if (this_present_totalRelationCount || that_present_totalRelationCount) {
      if (!(this_present_totalRelationCount && that_present_totalRelationCount))
        return false;
      if (this.totalRelationCount != that.totalRelationCount)
        return false;
    }

    boolean this_present_curRelationPageNum = true && this.isSetCurRelationPageNum();
    boolean that_present_curRelationPageNum = true && that.isSetCurRelationPageNum();
    if (this_present_curRelationPageNum || that_present_curRelationPageNum) {
      if (!(this_present_curRelationPageNum && that_present_curRelationPageNum))
        return false;
      if (this.curRelationPageNum != that.curRelationPageNum)
        return false;
    }

    boolean this_present_relationInfos = true && this.isSetRelationInfos();
    boolean that_present_relationInfos = true && that.isSetRelationInfos();
    if (this_present_relationInfos || that_present_relationInfos) {
      if (!(this_present_relationInfos && that_present_relationInfos))
        return false;
      if (!this.relationInfos.equals(that.relationInfos))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCShowBusinessCardDetailMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCShowBusinessCardDetailMsg typedOther = (SCShowBusinessCardDetailMsg)other;

    lastComparison = Boolean.valueOf(isSetCharId()).compareTo(typedOther.isSetCharId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charId, typedOther.charId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalJewelryCount()).compareTo(typedOther.isSetTotalJewelryCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalJewelryCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalJewelryCount, typedOther.totalJewelryCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurJewelryPageNum()).compareTo(typedOther.isSetCurJewelryPageNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurJewelryPageNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.curJewelryPageNum, typedOther.curJewelryPageNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJewelryInfos()).compareTo(typedOther.isSetJewelryInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJewelryInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jewelryInfos, typedOther.jewelryInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalRelationCount()).compareTo(typedOther.isSetTotalRelationCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalRelationCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalRelationCount, typedOther.totalRelationCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurRelationPageNum()).compareTo(typedOther.isSetCurRelationPageNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurRelationPageNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.curRelationPageNum, typedOther.curRelationPageNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRelationInfos()).compareTo(typedOther.isSetRelationInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelationInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.relationInfos, typedOther.relationInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCShowBusinessCardDetailMsg(");
    boolean first = true;

    sb.append("charId:");
    sb.append(this.charId);
    first = false;
    if (isSetTotalJewelryCount()) {
      if (!first) sb.append(", ");
      sb.append("totalJewelryCount:");
      sb.append(this.totalJewelryCount);
      first = false;
    }
    if (isSetCurJewelryPageNum()) {
      if (!first) sb.append(", ");
      sb.append("curJewelryPageNum:");
      sb.append(this.curJewelryPageNum);
      first = false;
    }
    if (isSetJewelryInfos()) {
      if (!first) sb.append(", ");
      sb.append("jewelryInfos:");
      if (this.jewelryInfos == null) {
        sb.append("null");
      } else {
        sb.append(this.jewelryInfos);
      }
      first = false;
    }
    if (isSetTotalRelationCount()) {
      if (!first) sb.append(", ");
      sb.append("totalRelationCount:");
      sb.append(this.totalRelationCount);
      first = false;
    }
    if (isSetCurRelationPageNum()) {
      if (!first) sb.append(", ");
      sb.append("curRelationPageNum:");
      sb.append(this.curRelationPageNum);
      first = false;
    }
    if (isSetRelationInfos()) {
      if (!first) sb.append(", ");
      sb.append("relationInfos:");
      if (this.relationInfos == null) {
        sb.append("null");
      } else {
        sb.append(this.relationInfos);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCShowBusinessCardDetailMsgStandardSchemeFactory implements SchemeFactory {
    public SCShowBusinessCardDetailMsgStandardScheme getScheme() {
      return new SCShowBusinessCardDetailMsgStandardScheme();
    }
  }

  private static class SCShowBusinessCardDetailMsgStandardScheme extends StandardScheme<SCShowBusinessCardDetailMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCShowBusinessCardDetailMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CHAR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.charId = iprot.readI64();
              struct.setCharIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TOTAL_JEWELRY_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.totalJewelryCount = iprot.readI16();
              struct.setTotalJewelryCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CUR_JEWELRY_PAGE_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.curJewelryPageNum = iprot.readI16();
              struct.setCurJewelryPageNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JEWELRY_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.jewelryInfos = new ArrayList<com.ling9527.music.common.msg.auto.JewelryInfo>(_list24.size);
                for (int _i25 = 0; _i25 < _list24.size; ++_i25)
                {
                  com.ling9527.music.common.msg.auto.JewelryInfo _elem26; // required
                  _elem26 = new com.ling9527.music.common.msg.auto.JewelryInfo();
                  _elem26.read(iprot);
                  struct.jewelryInfos.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setJewelryInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TOTAL_RELATION_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.totalRelationCount = iprot.readI16();
              struct.setTotalRelationCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CUR_RELATION_PAGE_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.curRelationPageNum = iprot.readI16();
              struct.setCurRelationPageNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RELATION_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list27 = iprot.readListBegin();
                struct.relationInfos = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>(_list27.size);
                for (int _i28 = 0; _i28 < _list27.size; ++_i28)
                {
                  com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _elem29; // required
                  _elem29 = new com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo();
                  _elem29.read(iprot);
                  struct.relationInfos.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setRelationInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCShowBusinessCardDetailMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CHAR_ID_FIELD_DESC);
      oprot.writeI64(struct.charId);
      oprot.writeFieldEnd();
      if (struct.isSetTotalJewelryCount()) {
        oprot.writeFieldBegin(TOTAL_JEWELRY_COUNT_FIELD_DESC);
        oprot.writeI16(struct.totalJewelryCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCurJewelryPageNum()) {
        oprot.writeFieldBegin(CUR_JEWELRY_PAGE_NUM_FIELD_DESC);
        oprot.writeI16(struct.curJewelryPageNum);
        oprot.writeFieldEnd();
      }
      if (struct.jewelryInfos != null) {
        if (struct.isSetJewelryInfos()) {
          oprot.writeFieldBegin(JEWELRY_INFOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.jewelryInfos.size()));
            for (com.ling9527.music.common.msg.auto.JewelryInfo _iter30 : struct.jewelryInfos)
            {
              _iter30.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTotalRelationCount()) {
        oprot.writeFieldBegin(TOTAL_RELATION_COUNT_FIELD_DESC);
        oprot.writeI16(struct.totalRelationCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCurRelationPageNum()) {
        oprot.writeFieldBegin(CUR_RELATION_PAGE_NUM_FIELD_DESC);
        oprot.writeI16(struct.curRelationPageNum);
        oprot.writeFieldEnd();
      }
      if (struct.relationInfos != null) {
        if (struct.isSetRelationInfos()) {
          oprot.writeFieldBegin(RELATION_INFOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.relationInfos.size()));
            for (com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _iter31 : struct.relationInfos)
            {
              _iter31.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCShowBusinessCardDetailMsgTupleSchemeFactory implements SchemeFactory {
    public SCShowBusinessCardDetailMsgTupleScheme getScheme() {
      return new SCShowBusinessCardDetailMsgTupleScheme();
    }
  }

  private static class SCShowBusinessCardDetailMsgTupleScheme extends TupleScheme<SCShowBusinessCardDetailMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCShowBusinessCardDetailMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCharId()) {
        optionals.set(0);
      }
      if (struct.isSetTotalJewelryCount()) {
        optionals.set(1);
      }
      if (struct.isSetCurJewelryPageNum()) {
        optionals.set(2);
      }
      if (struct.isSetJewelryInfos()) {
        optionals.set(3);
      }
      if (struct.isSetTotalRelationCount()) {
        optionals.set(4);
      }
      if (struct.isSetCurRelationPageNum()) {
        optionals.set(5);
      }
      if (struct.isSetRelationInfos()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetCharId()) {
        oprot.writeI64(struct.charId);
      }
      if (struct.isSetTotalJewelryCount()) {
        oprot.writeI16(struct.totalJewelryCount);
      }
      if (struct.isSetCurJewelryPageNum()) {
        oprot.writeI16(struct.curJewelryPageNum);
      }
      if (struct.isSetJewelryInfos()) {
        {
          oprot.writeI32(struct.jewelryInfos.size());
          for (com.ling9527.music.common.msg.auto.JewelryInfo _iter32 : struct.jewelryInfos)
          {
            _iter32.write(oprot);
          }
        }
      }
      if (struct.isSetTotalRelationCount()) {
        oprot.writeI16(struct.totalRelationCount);
      }
      if (struct.isSetCurRelationPageNum()) {
        oprot.writeI16(struct.curRelationPageNum);
      }
      if (struct.isSetRelationInfos()) {
        {
          oprot.writeI32(struct.relationInfos.size());
          for (com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _iter33 : struct.relationInfos)
          {
            _iter33.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCShowBusinessCardDetailMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.charId = iprot.readI64();
        struct.setCharIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.totalJewelryCount = iprot.readI16();
        struct.setTotalJewelryCountIsSet(true);
      }
      if (incoming.get(2)) {
        struct.curJewelryPageNum = iprot.readI16();
        struct.setCurJewelryPageNumIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list34 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.jewelryInfos = new ArrayList<com.ling9527.music.common.msg.auto.JewelryInfo>(_list34.size);
          for (int _i35 = 0; _i35 < _list34.size; ++_i35)
          {
            com.ling9527.music.common.msg.auto.JewelryInfo _elem36; // required
            _elem36 = new com.ling9527.music.common.msg.auto.JewelryInfo();
            _elem36.read(iprot);
            struct.jewelryInfos.add(_elem36);
          }
        }
        struct.setJewelryInfosIsSet(true);
      }
      if (incoming.get(4)) {
        struct.totalRelationCount = iprot.readI16();
        struct.setTotalRelationCountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.curRelationPageNum = iprot.readI16();
        struct.setCurRelationPageNumIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.relationInfos = new ArrayList<com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo>(_list37.size);
          for (int _i38 = 0; _i38 < _list37.size; ++_i38)
          {
            com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo _elem39; // required
            _elem39 = new com.ling9527.music.common.msg.auto.SimpleBusinessCardInfo();
            _elem39.read(iprot);
            struct.relationInfos.add(_elem39);
          }
        }
        struct.setRelationInfosIsSet(true);
      }
    }
  }

}

