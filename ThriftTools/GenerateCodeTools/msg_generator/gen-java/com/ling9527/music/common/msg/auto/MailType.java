/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum MailType implements org.apache.thrift.TEnum {
  TEXT(0),
  /**
   * 商城赠送
   */
  SHOPING_DONATE(1),
  REQUEST_WISH(2),
  OVER_WISH(3),
  GIFT(4),
  EXCEPT_GIFT(5),
  SYSTEM_MAIL(6),
  /**
   * 背包内赠送
   */
  PACK_DONATE(7),
  /**
   * 创建角色
   */
  CREATE_PLAYER(8),
  /**
   * 排行榜邮件奖励
   */
  RANK_PRIZE(9),
  /**
   * 单曲排行榜音乐活动奖励
   */
  MUSIC_PRIZE(10),
  /**
   * 平台使用激活码
   */
  USEWAN_ACTIVECODE(11),
  /**
   * 使用游戏自己的激活码
   */
  USEGAME_ACTIVECODE(12),
  /**
   * GM活动奖励
   */
  GM_ACTIVE_PRIZE(13),
  /**
   * 用户评价
   */
  USERGRADE_MAIL(14),
  /**
   * 婚礼答谢
   */
  WEDDING_THANK(15),
  POINT_WALL(16),
  CHAPTER_PRIZE(17),
  SIGN_IN_AWARD(18),
  /**
   * 全服邮件
   */
  GLOBAL_MAIL(19);

  private final int value;

  private MailType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static MailType findByValue(int value) { 
    switch (value) {
      case 0:
        return TEXT;
      case 1:
        return SHOPING_DONATE;
      case 2:
        return REQUEST_WISH;
      case 3:
        return OVER_WISH;
      case 4:
        return GIFT;
      case 5:
        return EXCEPT_GIFT;
      case 6:
        return SYSTEM_MAIL;
      case 7:
        return PACK_DONATE;
      case 8:
        return CREATE_PLAYER;
      case 9:
        return RANK_PRIZE;
      case 10:
        return MUSIC_PRIZE;
      case 11:
        return USEWAN_ACTIVECODE;
      case 12:
        return USEGAME_ACTIVECODE;
      case 13:
        return GM_ACTIVE_PRIZE;
      case 14:
        return USERGRADE_MAIL;
      case 15:
        return WEDDING_THANK;
      case 16:
        return POINT_WALL;
      case 17:
        return CHAPTER_PRIZE;
      case 18:
        return SIGN_IN_AWARD;
      case 19:
        return GLOBAL_MAIL;
      default:
        return null;
    }
  }
}
