/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto.sc;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SCUseItemResultMsg implements org.apache.thrift.TBase<SCUseItemResultMsg, SCUseItemResultMsg._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SCUseItemResultMsg");

  private static final org.apache.thrift.protocol.TField INSTANCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("instanceId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("result", org.apache.thrift.protocol.TType.BOOL, (short)2);
  private static final org.apache.thrift.protocol.TField TARGET_CHAR_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("targetCharIds", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField USER_CHAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userCharId", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField FUNC_RESP_PARAM_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("funcRespParamList", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField FAIL_MESSAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("failMessageId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField ARGV_FIELD_DESC = new org.apache.thrift.protocol.TField("argv", org.apache.thrift.protocol.TType.LIST, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SCUseItemResultMsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SCUseItemResultMsgTupleSchemeFactory());
  }

  public long instanceId; // required
  public boolean result; // required
  public List<Long> targetCharIds; // required
  public long userCharId; // required
  public List<com.ling9527.music.common.msg.auto.FuncParam> funcRespParamList; // required
  public int failMessageId; // required
  public List<String> argv; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    INSTANCE_ID((short)1, "instanceId"),
    RESULT((short)2, "result"),
    TARGET_CHAR_IDS((short)3, "targetCharIds"),
    USER_CHAR_ID((short)4, "userCharId"),
    FUNC_RESP_PARAM_LIST((short)5, "funcRespParamList"),
    FAIL_MESSAGE_ID((short)6, "failMessageId"),
    ARGV((short)7, "argv");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // INSTANCE_ID
          return INSTANCE_ID;
        case 2: // RESULT
          return RESULT;
        case 3: // TARGET_CHAR_IDS
          return TARGET_CHAR_IDS;
        case 4: // USER_CHAR_ID
          return USER_CHAR_ID;
        case 5: // FUNC_RESP_PARAM_LIST
          return FUNC_RESP_PARAM_LIST;
        case 6: // FAIL_MESSAGE_ID
          return FAIL_MESSAGE_ID;
        case 7: // ARGV
          return ARGV;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INSTANCEID_ISSET_ID = 0;
  private static final int __RESULT_ISSET_ID = 1;
  private static final int __USERCHARID_ISSET_ID = 2;
  private static final int __FAILMESSAGEID_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.INSTANCE_ID, new org.apache.thrift.meta_data.FieldMetaData("instanceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RESULT, new org.apache.thrift.meta_data.FieldMetaData("result", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TARGET_CHAR_IDS, new org.apache.thrift.meta_data.FieldMetaData("targetCharIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.USER_CHAR_ID, new org.apache.thrift.meta_data.FieldMetaData("userCharId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FUNC_RESP_PARAM_LIST, new org.apache.thrift.meta_data.FieldMetaData("funcRespParamList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ling9527.music.common.msg.auto.FuncParam.class))));
    tmpMap.put(_Fields.FAIL_MESSAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("failMessageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ARGV, new org.apache.thrift.meta_data.FieldMetaData("argv", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SCUseItemResultMsg.class, metaDataMap);
  }

  public SCUseItemResultMsg() {
  }

  public SCUseItemResultMsg(
    long instanceId,
    boolean result,
    List<Long> targetCharIds,
    long userCharId,
    List<com.ling9527.music.common.msg.auto.FuncParam> funcRespParamList,
    int failMessageId,
    List<String> argv)
  {
    this();
    this.instanceId = instanceId;
    setInstanceIdIsSet(true);
    this.result = result;
    setResultIsSet(true);
    this.targetCharIds = targetCharIds;
    this.userCharId = userCharId;
    setUserCharIdIsSet(true);
    this.funcRespParamList = funcRespParamList;
    this.failMessageId = failMessageId;
    setFailMessageIdIsSet(true);
    this.argv = argv;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SCUseItemResultMsg(SCUseItemResultMsg other) {
    __isset_bitfield = other.__isset_bitfield;
    this.instanceId = other.instanceId;
    this.result = other.result;
    if (other.isSetTargetCharIds()) {
      List<Long> __this__targetCharIds = new ArrayList<Long>();
      for (Long other_element : other.targetCharIds) {
        __this__targetCharIds.add(other_element);
      }
      this.targetCharIds = __this__targetCharIds;
    }
    this.userCharId = other.userCharId;
    if (other.isSetFuncRespParamList()) {
      List<com.ling9527.music.common.msg.auto.FuncParam> __this__funcRespParamList = new ArrayList<com.ling9527.music.common.msg.auto.FuncParam>();
      for (com.ling9527.music.common.msg.auto.FuncParam other_element : other.funcRespParamList) {
        __this__funcRespParamList.add(new com.ling9527.music.common.msg.auto.FuncParam(other_element));
      }
      this.funcRespParamList = __this__funcRespParamList;
    }
    this.failMessageId = other.failMessageId;
    if (other.isSetArgv()) {
      List<String> __this__argv = new ArrayList<String>();
      for (String other_element : other.argv) {
        __this__argv.add(other_element);
      }
      this.argv = __this__argv;
    }
  }

  public SCUseItemResultMsg deepCopy() {
    return new SCUseItemResultMsg(this);
  }

  @Override
  public void clear() {
    setInstanceIdIsSet(false);
    this.instanceId = 0;
    setResultIsSet(false);
    this.result = false;
    this.targetCharIds = null;
    setUserCharIdIsSet(false);
    this.userCharId = 0;
    this.funcRespParamList = null;
    setFailMessageIdIsSet(false);
    this.failMessageId = 0;
    this.argv = null;
  }

  public long getInstanceId() {
    return this.instanceId;
  }

  public SCUseItemResultMsg setInstanceId(long instanceId) {
    this.instanceId = instanceId;
    setInstanceIdIsSet(true);
    return this;
  }

  public void unsetInstanceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INSTANCEID_ISSET_ID);
  }

  /** Returns true if field instanceId is set (has been assigned a value) and false otherwise */
  public boolean isSetInstanceId() {
    return EncodingUtils.testBit(__isset_bitfield, __INSTANCEID_ISSET_ID);
  }

  public void setInstanceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INSTANCEID_ISSET_ID, value);
  }

  public boolean isResult() {
    return this.result;
  }

  public SCUseItemResultMsg setResult(boolean result) {
    this.result = result;
    setResultIsSet(true);
    return this;
  }

  public void unsetResult() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESULT_ISSET_ID);
  }

  /** Returns true if field result is set (has been assigned a value) and false otherwise */
  public boolean isSetResult() {
    return EncodingUtils.testBit(__isset_bitfield, __RESULT_ISSET_ID);
  }

  public void setResultIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESULT_ISSET_ID, value);
  }

  public int getTargetCharIdsSize() {
    return (this.targetCharIds == null) ? 0 : this.targetCharIds.size();
  }

  public java.util.Iterator<Long> getTargetCharIdsIterator() {
    return (this.targetCharIds == null) ? null : this.targetCharIds.iterator();
  }

  public void addToTargetCharIds(long elem) {
    if (this.targetCharIds == null) {
      this.targetCharIds = new ArrayList<Long>();
    }
    this.targetCharIds.add(elem);
  }

  public List<Long> getTargetCharIds() {
    return this.targetCharIds;
  }

  public SCUseItemResultMsg setTargetCharIds(List<Long> targetCharIds) {
    this.targetCharIds = targetCharIds;
    return this;
  }

  public void unsetTargetCharIds() {
    this.targetCharIds = null;
  }

  /** Returns true if field targetCharIds is set (has been assigned a value) and false otherwise */
  public boolean isSetTargetCharIds() {
    return this.targetCharIds != null;
  }

  public void setTargetCharIdsIsSet(boolean value) {
    if (!value) {
      this.targetCharIds = null;
    }
  }

  public long getUserCharId() {
    return this.userCharId;
  }

  public SCUseItemResultMsg setUserCharId(long userCharId) {
    this.userCharId = userCharId;
    setUserCharIdIsSet(true);
    return this;
  }

  public void unsetUserCharId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERCHARID_ISSET_ID);
  }

  /** Returns true if field userCharId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserCharId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERCHARID_ISSET_ID);
  }

  public void setUserCharIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERCHARID_ISSET_ID, value);
  }

  public int getFuncRespParamListSize() {
    return (this.funcRespParamList == null) ? 0 : this.funcRespParamList.size();
  }

  public java.util.Iterator<com.ling9527.music.common.msg.auto.FuncParam> getFuncRespParamListIterator() {
    return (this.funcRespParamList == null) ? null : this.funcRespParamList.iterator();
  }

  public void addToFuncRespParamList(com.ling9527.music.common.msg.auto.FuncParam elem) {
    if (this.funcRespParamList == null) {
      this.funcRespParamList = new ArrayList<com.ling9527.music.common.msg.auto.FuncParam>();
    }
    this.funcRespParamList.add(elem);
  }

  public List<com.ling9527.music.common.msg.auto.FuncParam> getFuncRespParamList() {
    return this.funcRespParamList;
  }

  public SCUseItemResultMsg setFuncRespParamList(List<com.ling9527.music.common.msg.auto.FuncParam> funcRespParamList) {
    this.funcRespParamList = funcRespParamList;
    return this;
  }

  public void unsetFuncRespParamList() {
    this.funcRespParamList = null;
  }

  /** Returns true if field funcRespParamList is set (has been assigned a value) and false otherwise */
  public boolean isSetFuncRespParamList() {
    return this.funcRespParamList != null;
  }

  public void setFuncRespParamListIsSet(boolean value) {
    if (!value) {
      this.funcRespParamList = null;
    }
  }

  public int getFailMessageId() {
    return this.failMessageId;
  }

  public SCUseItemResultMsg setFailMessageId(int failMessageId) {
    this.failMessageId = failMessageId;
    setFailMessageIdIsSet(true);
    return this;
  }

  public void unsetFailMessageId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FAILMESSAGEID_ISSET_ID);
  }

  /** Returns true if field failMessageId is set (has been assigned a value) and false otherwise */
  public boolean isSetFailMessageId() {
    return EncodingUtils.testBit(__isset_bitfield, __FAILMESSAGEID_ISSET_ID);
  }

  public void setFailMessageIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FAILMESSAGEID_ISSET_ID, value);
  }

  public int getArgvSize() {
    return (this.argv == null) ? 0 : this.argv.size();
  }

  public java.util.Iterator<String> getArgvIterator() {
    return (this.argv == null) ? null : this.argv.iterator();
  }

  public void addToArgv(String elem) {
    if (this.argv == null) {
      this.argv = new ArrayList<String>();
    }
    this.argv.add(elem);
  }

  public List<String> getArgv() {
    return this.argv;
  }

  public SCUseItemResultMsg setArgv(List<String> argv) {
    this.argv = argv;
    return this;
  }

  public void unsetArgv() {
    this.argv = null;
  }

  /** Returns true if field argv is set (has been assigned a value) and false otherwise */
  public boolean isSetArgv() {
    return this.argv != null;
  }

  public void setArgvIsSet(boolean value) {
    if (!value) {
      this.argv = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case INSTANCE_ID:
      if (value == null) {
        unsetInstanceId();
      } else {
        setInstanceId((Long)value);
      }
      break;

    case RESULT:
      if (value == null) {
        unsetResult();
      } else {
        setResult((Boolean)value);
      }
      break;

    case TARGET_CHAR_IDS:
      if (value == null) {
        unsetTargetCharIds();
      } else {
        setTargetCharIds((List<Long>)value);
      }
      break;

    case USER_CHAR_ID:
      if (value == null) {
        unsetUserCharId();
      } else {
        setUserCharId((Long)value);
      }
      break;

    case FUNC_RESP_PARAM_LIST:
      if (value == null) {
        unsetFuncRespParamList();
      } else {
        setFuncRespParamList((List<com.ling9527.music.common.msg.auto.FuncParam>)value);
      }
      break;

    case FAIL_MESSAGE_ID:
      if (value == null) {
        unsetFailMessageId();
      } else {
        setFailMessageId((Integer)value);
      }
      break;

    case ARGV:
      if (value == null) {
        unsetArgv();
      } else {
        setArgv((List<String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case INSTANCE_ID:
      return Long.valueOf(getInstanceId());

    case RESULT:
      return Boolean.valueOf(isResult());

    case TARGET_CHAR_IDS:
      return getTargetCharIds();

    case USER_CHAR_ID:
      return Long.valueOf(getUserCharId());

    case FUNC_RESP_PARAM_LIST:
      return getFuncRespParamList();

    case FAIL_MESSAGE_ID:
      return Integer.valueOf(getFailMessageId());

    case ARGV:
      return getArgv();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case INSTANCE_ID:
      return isSetInstanceId();
    case RESULT:
      return isSetResult();
    case TARGET_CHAR_IDS:
      return isSetTargetCharIds();
    case USER_CHAR_ID:
      return isSetUserCharId();
    case FUNC_RESP_PARAM_LIST:
      return isSetFuncRespParamList();
    case FAIL_MESSAGE_ID:
      return isSetFailMessageId();
    case ARGV:
      return isSetArgv();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SCUseItemResultMsg)
      return this.equals((SCUseItemResultMsg)that);
    return false;
  }

  public boolean equals(SCUseItemResultMsg that) {
    if (that == null)
      return false;

    boolean this_present_instanceId = true;
    boolean that_present_instanceId = true;
    if (this_present_instanceId || that_present_instanceId) {
      if (!(this_present_instanceId && that_present_instanceId))
        return false;
      if (this.instanceId != that.instanceId)
        return false;
    }

    boolean this_present_result = true;
    boolean that_present_result = true;
    if (this_present_result || that_present_result) {
      if (!(this_present_result && that_present_result))
        return false;
      if (this.result != that.result)
        return false;
    }

    boolean this_present_targetCharIds = true && this.isSetTargetCharIds();
    boolean that_present_targetCharIds = true && that.isSetTargetCharIds();
    if (this_present_targetCharIds || that_present_targetCharIds) {
      if (!(this_present_targetCharIds && that_present_targetCharIds))
        return false;
      if (!this.targetCharIds.equals(that.targetCharIds))
        return false;
    }

    boolean this_present_userCharId = true;
    boolean that_present_userCharId = true;
    if (this_present_userCharId || that_present_userCharId) {
      if (!(this_present_userCharId && that_present_userCharId))
        return false;
      if (this.userCharId != that.userCharId)
        return false;
    }

    boolean this_present_funcRespParamList = true && this.isSetFuncRespParamList();
    boolean that_present_funcRespParamList = true && that.isSetFuncRespParamList();
    if (this_present_funcRespParamList || that_present_funcRespParamList) {
      if (!(this_present_funcRespParamList && that_present_funcRespParamList))
        return false;
      if (!this.funcRespParamList.equals(that.funcRespParamList))
        return false;
    }

    boolean this_present_failMessageId = true;
    boolean that_present_failMessageId = true;
    if (this_present_failMessageId || that_present_failMessageId) {
      if (!(this_present_failMessageId && that_present_failMessageId))
        return false;
      if (this.failMessageId != that.failMessageId)
        return false;
    }

    boolean this_present_argv = true && this.isSetArgv();
    boolean that_present_argv = true && that.isSetArgv();
    if (this_present_argv || that_present_argv) {
      if (!(this_present_argv && that_present_argv))
        return false;
      if (!this.argv.equals(that.argv))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SCUseItemResultMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SCUseItemResultMsg typedOther = (SCUseItemResultMsg)other;

    lastComparison = Boolean.valueOf(isSetInstanceId()).compareTo(typedOther.isSetInstanceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstanceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instanceId, typedOther.instanceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult()).compareTo(typedOther.isSetResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result, typedOther.result);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTargetCharIds()).compareTo(typedOther.isSetTargetCharIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTargetCharIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.targetCharIds, typedOther.targetCharIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserCharId()).compareTo(typedOther.isSetUserCharId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserCharId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userCharId, typedOther.userCharId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFuncRespParamList()).compareTo(typedOther.isSetFuncRespParamList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFuncRespParamList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.funcRespParamList, typedOther.funcRespParamList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFailMessageId()).compareTo(typedOther.isSetFailMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFailMessageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.failMessageId, typedOther.failMessageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetArgv()).compareTo(typedOther.isSetArgv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetArgv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.argv, typedOther.argv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SCUseItemResultMsg(");
    boolean first = true;

    sb.append("instanceId:");
    sb.append(this.instanceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("result:");
    sb.append(this.result);
    first = false;
    if (!first) sb.append(", ");
    sb.append("targetCharIds:");
    if (this.targetCharIds == null) {
      sb.append("null");
    } else {
      sb.append(this.targetCharIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userCharId:");
    sb.append(this.userCharId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("funcRespParamList:");
    if (this.funcRespParamList == null) {
      sb.append("null");
    } else {
      sb.append(this.funcRespParamList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("failMessageId:");
    sb.append(this.failMessageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("argv:");
    if (this.argv == null) {
      sb.append("null");
    } else {
      sb.append(this.argv);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SCUseItemResultMsgStandardSchemeFactory implements SchemeFactory {
    public SCUseItemResultMsgStandardScheme getScheme() {
      return new SCUseItemResultMsgStandardScheme();
    }
  }

  private static class SCUseItemResultMsgStandardScheme extends StandardScheme<SCUseItemResultMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SCUseItemResultMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // INSTANCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.instanceId = iprot.readI64();
              struct.setInstanceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RESULT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.result = iprot.readBool();
              struct.setResultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TARGET_CHAR_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                struct.targetCharIds = new ArrayList<Long>(_list48.size);
                for (int _i49 = 0; _i49 < _list48.size; ++_i49)
                {
                  long _elem50; // required
                  _elem50 = iprot.readI64();
                  struct.targetCharIds.add(_elem50);
                }
                iprot.readListEnd();
              }
              struct.setTargetCharIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // USER_CHAR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.userCharId = iprot.readI64();
              struct.setUserCharIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FUNC_RESP_PARAM_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list51 = iprot.readListBegin();
                struct.funcRespParamList = new ArrayList<com.ling9527.music.common.msg.auto.FuncParam>(_list51.size);
                for (int _i52 = 0; _i52 < _list51.size; ++_i52)
                {
                  com.ling9527.music.common.msg.auto.FuncParam _elem53; // required
                  _elem53 = new com.ling9527.music.common.msg.auto.FuncParam();
                  _elem53.read(iprot);
                  struct.funcRespParamList.add(_elem53);
                }
                iprot.readListEnd();
              }
              struct.setFuncRespParamListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FAIL_MESSAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.failMessageId = iprot.readI32();
              struct.setFailMessageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ARGV
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list54 = iprot.readListBegin();
                struct.argv = new ArrayList<String>(_list54.size);
                for (int _i55 = 0; _i55 < _list54.size; ++_i55)
                {
                  String _elem56; // required
                  _elem56 = iprot.readString();
                  struct.argv.add(_elem56);
                }
                iprot.readListEnd();
              }
              struct.setArgvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SCUseItemResultMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(INSTANCE_ID_FIELD_DESC);
      oprot.writeI64(struct.instanceId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RESULT_FIELD_DESC);
      oprot.writeBool(struct.result);
      oprot.writeFieldEnd();
      if (struct.targetCharIds != null) {
        oprot.writeFieldBegin(TARGET_CHAR_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.targetCharIds.size()));
          for (long _iter57 : struct.targetCharIds)
          {
            oprot.writeI64(_iter57);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(USER_CHAR_ID_FIELD_DESC);
      oprot.writeI64(struct.userCharId);
      oprot.writeFieldEnd();
      if (struct.funcRespParamList != null) {
        oprot.writeFieldBegin(FUNC_RESP_PARAM_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.funcRespParamList.size()));
          for (com.ling9527.music.common.msg.auto.FuncParam _iter58 : struct.funcRespParamList)
          {
            _iter58.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FAIL_MESSAGE_ID_FIELD_DESC);
      oprot.writeI32(struct.failMessageId);
      oprot.writeFieldEnd();
      if (struct.argv != null) {
        oprot.writeFieldBegin(ARGV_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.argv.size()));
          for (String _iter59 : struct.argv)
          {
            oprot.writeString(_iter59);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SCUseItemResultMsgTupleSchemeFactory implements SchemeFactory {
    public SCUseItemResultMsgTupleScheme getScheme() {
      return new SCUseItemResultMsgTupleScheme();
    }
  }

  private static class SCUseItemResultMsgTupleScheme extends TupleScheme<SCUseItemResultMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SCUseItemResultMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetInstanceId()) {
        optionals.set(0);
      }
      if (struct.isSetResult()) {
        optionals.set(1);
      }
      if (struct.isSetTargetCharIds()) {
        optionals.set(2);
      }
      if (struct.isSetUserCharId()) {
        optionals.set(3);
      }
      if (struct.isSetFuncRespParamList()) {
        optionals.set(4);
      }
      if (struct.isSetFailMessageId()) {
        optionals.set(5);
      }
      if (struct.isSetArgv()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetInstanceId()) {
        oprot.writeI64(struct.instanceId);
      }
      if (struct.isSetResult()) {
        oprot.writeBool(struct.result);
      }
      if (struct.isSetTargetCharIds()) {
        {
          oprot.writeI32(struct.targetCharIds.size());
          for (long _iter60 : struct.targetCharIds)
          {
            oprot.writeI64(_iter60);
          }
        }
      }
      if (struct.isSetUserCharId()) {
        oprot.writeI64(struct.userCharId);
      }
      if (struct.isSetFuncRespParamList()) {
        {
          oprot.writeI32(struct.funcRespParamList.size());
          for (com.ling9527.music.common.msg.auto.FuncParam _iter61 : struct.funcRespParamList)
          {
            _iter61.write(oprot);
          }
        }
      }
      if (struct.isSetFailMessageId()) {
        oprot.writeI32(struct.failMessageId);
      }
      if (struct.isSetArgv()) {
        {
          oprot.writeI32(struct.argv.size());
          for (String _iter62 : struct.argv)
          {
            oprot.writeString(_iter62);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SCUseItemResultMsg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.instanceId = iprot.readI64();
        struct.setInstanceIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.result = iprot.readBool();
        struct.setResultIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list63 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.targetCharIds = new ArrayList<Long>(_list63.size);
          for (int _i64 = 0; _i64 < _list63.size; ++_i64)
          {
            long _elem65; // required
            _elem65 = iprot.readI64();
            struct.targetCharIds.add(_elem65);
          }
        }
        struct.setTargetCharIdsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.userCharId = iprot.readI64();
        struct.setUserCharIdIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list66 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.funcRespParamList = new ArrayList<com.ling9527.music.common.msg.auto.FuncParam>(_list66.size);
          for (int _i67 = 0; _i67 < _list66.size; ++_i67)
          {
            com.ling9527.music.common.msg.auto.FuncParam _elem68; // required
            _elem68 = new com.ling9527.music.common.msg.auto.FuncParam();
            _elem68.read(iprot);
            struct.funcRespParamList.add(_elem68);
          }
        }
        struct.setFuncRespParamListIsSet(true);
      }
      if (incoming.get(5)) {
        struct.failMessageId = iprot.readI32();
        struct.setFailMessageIdIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list69 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.argv = new ArrayList<String>(_list69.size);
          for (int _i70 = 0; _i70 < _list69.size; ++_i70)
          {
            String _elem71; // required
            _elem71 = iprot.readString();
            struct.argv.add(_elem71);
          }
        }
        struct.setArgvIsSet(true);
      }
    }
  }

}

