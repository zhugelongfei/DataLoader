/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ling9527.music.common.msg.auto;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * 时尚子类型
 */
public enum FashionSubType implements org.apache.thrift.TEnum {
  /**
   * 名字颜色
   */
  NAME_COLOR(0),
  /**
   * 邀请赛房间面板
   */
  INVITE_ROOM(1),
  /**
   * 头像框装饰
   */
  HEAD_ICON_FRAME(2),
  /**
   * 名片框装饰
   */
  BUSINESS_CARD_FRAME(3),
  /**
   * 名片背景效果
   */
  BUSINESS_CARD_BG(4),
  /**
   * 名片角色展示效果
   */
  BUSINESS_CARD_ROLE(5),
  /**
   * 聊天字体颜色
   */
  CHAT_WORD_COLOR(6),
  /**
   * 聊天泡泡框装饰
   */
  CHAT_BUBBLE(7),
  /**
   * 喇叭面板装饰
   */
  SPEAKER_PANEL(8),
  /**
   * 聊天表情包
   */
  CHAT_EXPRESSION_PKG(9),
  /**
   * 竞技入场效果
   */
  DANCE_ENTER_EFFECT(10),
  /**
   * 竞技入场动作
   */
  DANCE_ENTER_ACTION(11),
  /**
   * 竞技手部拖尾效果
   */
  DANCE_HAND_EFFECT(12),
  /**
   * 竞技脚部光环效果
   */
  DANCE_FOOT_EFFECT(13),
  /**
   * 等待房间DJ台
   */
  DJ_DESK(14),
  /**
   * 类型上限
   */
  Max(15);

  private final int value;

  private FashionSubType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static FashionSubType findByValue(int value) { 
    switch (value) {
      case 0:
        return NAME_COLOR;
      case 1:
        return INVITE_ROOM;
      case 2:
        return HEAD_ICON_FRAME;
      case 3:
        return BUSINESS_CARD_FRAME;
      case 4:
        return BUSINESS_CARD_BG;
      case 5:
        return BUSINESS_CARD_ROLE;
      case 6:
        return CHAT_WORD_COLOR;
      case 7:
        return CHAT_BUBBLE;
      case 8:
        return SPEAKER_PANEL;
      case 9:
        return CHAT_EXPRESSION_PKG;
      case 10:
        return DANCE_ENTER_EFFECT;
      case 11:
        return DANCE_ENTER_ACTION;
      case 12:
        return DANCE_HAND_EFFECT;
      case 13:
        return DANCE_FOOT_EFFECT;
      case 14:
        return DJ_DESK;
      case 15:
        return Max;
      default:
        return null;
    }
  }
}
